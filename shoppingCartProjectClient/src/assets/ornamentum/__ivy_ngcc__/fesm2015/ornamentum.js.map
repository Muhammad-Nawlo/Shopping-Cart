{"version":3,"file":"ornamentum.js","sources":["ornamentum/data-table/services/data-table-config.service.ts","ornamentum/data-table/services/data-table-event.service.ts","ornamentum/data-table/services/data-table-data-state.service.ts","ornamentum/data-table/components/data-table-column/data-table-column.component.ts","ornamentum/data-table/models/data-fetch-mode.enum.ts","ornamentum/data-table/components/data-table-column-filter-header/data-table-column-filter-header.component.ts","ornamentum/data-table/services/data-table-scroll-position.service.ts","ornamentum/data-table/components/data-table-column-filter-template/data-table-column-filter-template.component.ts","ornamentum/utility/services/object-utility.class.ts","ornamentum/utility/directives/init.directive.ts","ornamentum/utility/directives/focus.directive.ts","ornamentum/utility/pipes/pixel-converter.pipe.ts","ornamentum/utility/services/utility-config.service.ts","ornamentum/utility/services/drag-and-drop.service.ts","ornamentum/utility/services/global-ref.service.ts","ornamentum/utility/services/resize.service.ts","ornamentum/utility/services/popover-component-loader.class.ts","ornamentum/utility/services/popover-component-loader-factory.service.ts","ornamentum/utility/services/validator.service.ts","ornamentum/utility/utility.module.ts","ornamentum/data-table/components/data-table-column-title-header/data-table-column-title-header.component.ts","ornamentum/data-table/components/data-table-column-selector/data-table-column-selector.component.ts","ornamentum/data-table/components/data-table-header/data-table-header.component.ts","ornamentum/data-table/components/data-table-col-group/data-table-col-group.component.ts","ornamentum/data-table/components/data-table-pagination/data-table-pagination.component.ts","ornamentum/data-table/services/data-table-persistence.service.ts","ornamentum/data-table/services/data-table-resource.service.ts","ornamentum/data-table/components/data-table/data-table.component.ts","ornamentum/data-table/components/data-table-body/data-table-body.component.ts","ornamentum/data-table/components/data-table-no-data-body/data-table-no-data-body.component.ts","ornamentum/data-table/components/data-table-head/data-table-head.component.ts","ornamentum/data-table/components/data-table-loading-spinner/data-table-loading-spinner.component.ts","ornamentum/data-table/directives/scroll-position.directive.ts","ornamentum/data-table/directives/scroll-element.directive.ts","ornamentum/data-table/directives/element-width.directive.ts","ornamentum/dropdown/services/dropdown-config.service.ts","ornamentum/dropdown/services/dropdown-data-state.service.ts","ornamentum/dropdown/services/dropdown-event-state.service.ts","ornamentum/dropdown/components/dropdown-view/dropdown-view.component.ts","ornamentum/dropdown/services/dropdown-resource.service.ts","ornamentum/dropdown/components/dropdown/dropdown.component.ts","ornamentum/dropdown/components/dropdown-filter/dropdown-filter.component.ts","ornamentum/dropdown/components/dropdown-options/dropdown-options.component.ts","ornamentum/dropdown/dropdown.module.ts","ornamentum/data-table/data-table.module.ts","ornamentum/resource-utility/services/request-param-mapper.service.ts","ornamentum/resource-utility/services/resource-utility-config.service.ts","ornamentum/resource-utility/resource-utility.module.ts","ornamentum/data-table-resource/services/data-table-resource-config.service.ts","ornamentum/data-table-resource/services/data-table-http-data-fetch.service.ts","ornamentum/data-table-resource/services/data-table-http-resource-factory.service.ts","ornamentum/data-table-resource/services/data-table-websocket-data-fetch.service.ts","ornamentum/data-table-resource/services/data-table-websocket-resource-factory.service.ts","ornamentum/data-table-resource/data-table-resource.module.ts","ornamentum/dropdown-resource/services/dropdown-resource-config.service.ts","ornamentum/dropdown-resource/services/dropdown-http-data-fetch.service.ts","ornamentum/dropdown-resource/services/dropdown-http-resource-factory.service.ts","ornamentum/dropdown-resource/services/dropdown-websocket-data-fetch.service.ts","ornamentum/dropdown-resource/services/dropdown-websocket-resource-factory.service.ts","ornamentum/dropdown-resource/dropdown-resource.module.ts"],"names":["COMPONENTS","DIRECTIVES","PROVIDERS"],"mappingsa,iBAAiB,GAAG,IAAI,cAAc,CAAkB,iBAAiB,CAAC;AACvF;AACG;AACyB;AACuE;AAGnG,MAAa,sBAAsB;AAAG;AAAQ;AAC/B;AACf,IA2FE,YAA+C,eAAgC;AACjF,QADiD,oBAAe,GAAf,eAAe,CAAiB;AAAC;AACxD,QA5FjB,sBAAiB,GAAG,KAAK,CAAC;AACnC,QAAS,gBAAW,GAAyB,SAAS,CAAC;AACvD,QAAS,wBAAmB,GAAG,KAAK,CAAC;AACrC,QAAS,eAAU,GAAG,KAAK,CAAC;AAC5B,QAAS,UAAK,GAAG,EAAE,CAAC;AACpB,QAAS,UAAK,GAAG,SAAS,CAAC;AAC3B,QAAS,qBAAgB,GAAoB,GAAG,CAAC;AACjD,QAAS,oBAAe,GAAG,SAAS,CAAC;AACrC,QAAS,kBAAa,GAAG,SAAS,CAAC;AACnC,QAAS,aAAQ,GAAG,KAAK,CAAC;AAC1B,QAAS,iBAAY,GAAG,KAAK,CAAC;AAC9B,QAAS,0BAAqB,GAAG,CAAC,CAAC;AACnC,QAAS,oBAAe,GAAG,KAAK,CAAC;AACjC,QAAS,qBAAgB,GAAG,GAAG,CAAC;AAChC,QAAS,kBAAa,GAAG,KAAK,CAAC;AAC/B,QAAS,eAAU,GAAwB,QAAQ,CAAC;AACpD,QAAS,0BAAqB,GAAG,IAAI,CAAC;AACtC,QAAS,6BAAwB,GAAG,KAAK,CAAC;AAC1C,QAAS,uBAAkB,GAAG,KAAK,CAAC;AACpC,QAAS,mBAAc,GAAG,KAAK,CAAC;AAChC,QAAS,qBAAgB,GAAG,KAAK,CAAC;AAClC,QAAS,qBAAgB,GAAG,KAAK,CAAC;AAClC,QAAS,cAAS,GAAG,IAAI,CAAC;AAC1B,QAAS,uBAAkB,GAAG,IAAI,CAAC;AACnC,QAAS,kBAAa,GAAG,IAAI,CAAC;AAC9B,QAAS,uBAAkB,GAAG,GAAG,CAAC;AAClC,QAAS,mBAAc,GAAG,IAAI,CAAC;AAC/B,QAAS,sBAAiB,GAAG,KAAK,CAAC;AACnC,QAAS,uBAAkB,GAAG,KAAK,CAAC;AACpC,QAAS,wBAAmB,GAAG,GAAG,CAAC;AACnC,QAAS,wBAAmB,GAAoB,EAAE,CAAC;AACnD,QAAS,qBAAgB,GAAoB,EAAE,CAAC;AAChD,QAAS,yBAAoB,GAAoB,EAAE,CAAC;AACpD,QAAS,gCAA2B,GAAG,KAAK,CAAC;AAC7C,QAAS,WAAM,GAAG,CAAC,CAAC;AACpB,QAAS,UAAK,GAAG,EAAE,CAAC;AACpB,QAAS,aAAQ,GAAG,GAAG,CAAC;AACxB,QAAS,mBAAc,GAAG,aAAa,CAAC;AACxC,QAAS,qBAAgB,GAA0B;AACnD,YAAI,aAAa,EAAE;AACnB,gBAAM,MAAM,EAAE,SAAS;AACvB,gBAAM,IAAI,EAAE,kDAAkD;AAC9D,aAAK;AACL,YAAI,UAAU,EAAE;AAChB,gBAAM,KAAK,EAAE,QAAQ;AACrB,gBAAM,QAAQ,EAAE,UAAU;AAC1B,gBAAM,cAAc,EAAE,IAAI;AAC1B,gBAAM,WAAW,EAAE,MAAM;AACzB,gBAAM,eAAe,EAAE,UAAU;AACjC,gBAAM,WAAW,EAAE,MAAM;AACzB,gBAAM,YAAY,EAAE,OAAO;AAC3B,aAAK;AACL,YAAI,cAAc,EAAE;AACpB,gBAAM,MAAM,EAAE,kBAAkB;AAChC,aAAK;AACL,YAAI,cAAc,EAAE;AACpB,gBAAM,aAAa,EAAE,sBAAsB;AAC3C,gBAAM,iBAAiB,EAAE,QAAQ;AACjC,gBAAM,6BAA6B,EAAE,SAAS;AAC9C,gBAAM,iBAAiB,EAAE,QAAQ;AACjC,aAAK;AACL,SAAG,CAAC;AACJ;AAEK,QAAI,aAAQ,GAAG,KAAK,CAAC;AAC1B,QAAS,cAAS,GAAuB,EAAE,CAAC;AAC5C,QAAS,eAAU,GAAG,KAAK,CAAC;AAC5B,QAAS,sBAAiB,GAAG,QAAQ,CAAC;AACtC,QAAS,oBAAe,GAAG,KAAK,CAAC;AACjC,QAAS,kBAAa,GAAG,IAAI,CAAC;AAC9B,QAAS,uBAAkB,GAAG,KAAK,CAAC;AACpC,QAAS,0BAAqB,GAAG,IAAI,CAAC;AACtC;AAEK,QAAI,+BAA0B,GAAiB,aAAa,CAAC;AAClE,QAAS,6BAAwB,GAAuB,OAAO,CAAC;AAChE,QAAS,6BAAwB,GAAG,IAAI,CAAC;AACzC,QAAS,qCAAgC,GAAG,GAAG,CAAC;AAChD,QAAS,iCAA4B,GAAG,IAAI,CAAC;AAC7C,QAAS,yCAAoC,GAAG,CAAC,CAAC;AAClD,QAAS,+BAA0B,GAAG,SAAS,CAAC;AAChD,QAAS,iDAA4C,GAAG,KAAK,CAAC;AAC9D,QAAS,2CAAsC,GAAG,IAAI,CAAC;AACvD,QAAS,4BAAuB,GAAG,GAAG,CAAC;AACvC,QAAS,6BAAwB,GAAG,GAAG,CAAC;AACxC,QAAS,4CAAuC,GAAG,GAAG,CAAC;AACvD,QAAS,oCAA+B,GAAG,IAAI,CAAC;AAChD,QAAS,8CAAyC,GAAG,IAAI,CAAC;AAC1D,QAAS,oCAA+B,GAAG,IAAI,CAAC;AAChD,QAAS,qCAAgC,GAAG,IAAI,CAAC;AACjD,QAEI,IAAI,eAAe,EAAE;AACzB,YAAM,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AAC3C,SAAK;AACL,KAAG;AACH;AACO;AAAwB;AAAmB;AAClD,IADE,IAAW,YAAY,CAAC,KAA4B;AACtD,QAAI,IAAI,CAAC,KAAK,EAAE;AAChB,YAAM,OAAO;AACb,SAAK;AACL;AAEG,QAAC,KAAK,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACpD,YAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,qBAAQ,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAK,GAAG,CAAE,CAAC;AAC7E,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,YAAY;AAAK,QAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACjC,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,2BAA2B;AAAK,QACzC,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,qBAAqB,CAAC;AAC5D,KAAG;AACH;kDA5HC,UAAU;gJACT;AAAC;AAAmB;AACjB,4CA4FU,MAAM,SAAC,iBAAiB;AAAQ;;;;;;kCAAE;AAAC;AAAa;AAAqB,IA3FlF,mDAAiC;AACnC;AAAqB,IAAnB,6CAAqD;AACvD;AAAqB,IAAnB,qDAAmC;AACrC;AAAqB,IAAnB,4CAA0B;AAC5B;AACA,IADE,uCAAkB;AACpB;AAAqB,IAAnB,uCAAyB;AAC3B;AAAqB,IAAnB,kDAA+C;AACjD;AAAqB,IAAnB,iDAAmC;AACrC;AAAqB,IAAnB,+CAAiC;AACnC;AAAqB,IAAnB,0CAAwB;AAC1B;AAAqB,IAAnB,8CAA4B;AAC9B;AAAqB,IAAnB,uDAAiC;AACnC;AAAqB,IAAnB,iDAA+B;AACjC;AAAqB,IAAnB,kDAA8B;AAChC;AAAqB,IAAnB,+CAA6B;AAC/B;AAAqB,IAAnB,4CAAkD;AACpD;AAAqB,IAAnB,uDAAoC;AACtC;AAAqB,IAAnB,0DAAwC;AAC1C;AAAqB,IAAnB,oDAAkC;AACpC;AAAqB,IAAnB,gDAA8B;AAChC;AAAqB,IAAnB,kDAAgC;AAClC;AAAqB,IAAnB,kDAAgC;AAClC;AAAqB,IAAnB,2CAAwB;AAC1B;AAAqB,IAAnB,oDAAiC;AACnC;AAAqB,IAAnB,+CAA4B;AAC9B;AAAqB,IAAnB,oDAAgC;AAClC;AAAqB,IAAnB,gDAA6B;AAC/B;AAAqB,IAAnB,mDAAiC;AACnC;AAAqB,IAAnB,oDAAkC;AACpC;AAAqB,IAAnB,qDAAiC;AACnC;AAAqB,IAAnB,qDAAiD;AACnD;AAAqB,IAAnB,kDAA8C;AAChD;AAAqB,IAAnB,sDAAkD;AACpD;AAAqB,IAAnB,6DAA2C;AAC7C;AACA,IADE,wCAAkB;AACpB;AACA,IADE,uCAAkB;AACpB;AAAqB,IAAnB,0CAAsB;AACxB;AAAqB,IAAnB,gDAAsC;AACxC;AAAqB,IAAnB,kDAuBE;AACJ;AACoB,IAClB,0CAAwB;AAC1B;AAAqB,IAAnB,2CAA0C;AAC5C;AAAqB,IAAnB,4CAA0B;AAC5B;AAAqB,IAAnB,mDAAoC;AACtC;AAAqB,IAAnB,iDAA+B;AACjC;AAAqB,IAAnB,+CAA4B;AAC9B;AAAqB,IAAnB,oDAAkC;AACpC;AAAqB,IAAnB,uDAAoC;AACtC;AACoB,IAClB,4DAAgE;AAClE;AAAqB,IAAnB,0DAA8D;AAChE;AAAqB,IAAnB,0DAAuC;AACzC;AAAqB,IAAnB,kEAA8C;AAChD;AAAqB,IAAnB,8DAA2C;AAC7C;AAAqB,IAAnB,sEAAgD;AAClD;AAAqB,IAAnB,4DAA8C;AAChD;AAAqB,IAAnB,8EAA4D;AAC9D;AAAqB,IAAnB,wEAAqD;AACvD;AAAqB,IAAnB,yDAAqC;AACvC;AAAqB,IAAnB,0DAAsC;AACxC;AAAqB,IAAnB,yEAAqD;AACvD;AAAqB,IAAnB,iEAA8C;AAChD;AAAqB,IAAnB,2EAAwD;AAC1D;AAAqB,IAAnB,iEAA8C;AAChD;AAAqB,IAAnB,kEAA+C;AACjD;AACO;AAAiB;AAAgB;AAAQ,IAAlC,iDAAmE;AAAC;AAAE;AACpF;AAAI;AACO;AAKI;ACtHf;AAAI;AAEqB;AAkBzB,MAAa,0BAA0B;AACvC,IAFA;AACE,QACO,6BAAwB,GAAG,IAAI,YAAY,EAAW,CAAC;AAChE,QAAS,oBAAe,GAAG,IAAI,YAAY,EAAiB,CAAC;AAC7D,QAAS,sBAAiB,GAAG,IAAI,YAAY,EAAiC,CAAC;AAC/E,QAAS,kBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;AAC/D,QAAS,mBAAc,GAAG,IAAI,YAAY,EAAmC,CAAC;AAC9E,QAAS,yBAAoB,GAAG,IAAI,YAAY,EAAsC,CAAC;AACvF,QAAS,0BAAqB,GAAG,IAAI,YAAY,EAAe,CAAC;AACjE,QAAS,mBAAc,GAAG,IAAI,YAAY,EAAmC,CAAC;AAC9E,QAAS,oBAAe,GAAG,IAAI,YAAY,EAAoC,CAAC;AAChF,QAAS,eAAU,GAAG,IAAI,YAAY,EAAsB,CAAC;AAC7D,QAAS,oBAAe,GAAG,IAAI,YAAY,EAAQ,CAAC;AACpD,QAAS,eAAU,GAAG,IAAI,YAAY,EAA4B,CAAC;AACnE,QAAS,6BAAwB,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;AACzD,QAAS,2BAAsB,GAAG,IAAI,aAAa,CAAQ,CAAC,CAAC,CAAC;AAC9D,KAAC;AACD;sDAjBC,UAAU;;;;gDACT;AAAC;AAAa;AAAqB,IACnC,8DAA8D;AAChE;AAAqB,IAAnB,qDAA2D;AAC7D;AAAqB,IAAnB,uDAA6E;AAC/E;AAAqB,IAAnB,mDAA6D;AAC/D;AAAqB,IAAnB,oDAA4E;AAC9E;AAAqB,IAAnB,0DAAqF;AACvF;AAAqB,IAAnB,2DAA+D;AACjE;AAAqB,IAAnB,oDAA4E;AAC9E;AAAqB,IAAnB,qDAA8E;AAChF;AAAqB,IAAnB,gDAA2D;AAC7D;AAAqB,IAAnB,qDAAkD;AACpD;AAAqB,IAAnB,gDAAiE;AACnE;AAAqB,IAAnB,8DAAuD;AACzD;AAAqB,IAAnB,4DAA4D;AAC9D;AACA;AAAC;AAAI;AAAkC;AAAqH;ACpC5J;AAAI;AAEkC;AAStC,MAAa,yBAAyB;AACtC,IAFA;AACE,QAEO,mBAAc,GAAG,KAAK,CAAC;AAChC,QACS,iBAAY,GAAU,EAAE,CAAC;AAClC,QAAS,aAAQ,GAAwB,EAAE,CAAC;AAC5C,QAES,gBAAW,GAAG,IAAI,CAAC;AAC5B,QAAS,mBAAc,GAAU,EAAE,CAAC;AACpC,QAAS,gBAAW,GAAG,KAAK,CAAC;AAC7B,QAAS,wBAAmB,GAAG,CAAC,CAAC;AACjC,QAIS,4BAAuB;AAAQ;AAAuB;AAAY,QAAO,MAAM,CAAC,EAAC;AAC1F,KAiBC;AACD;AAAQ;AAAwC;AAA4D;AAAQ,IAblH,IAAW,iBAAiB;AAAK,QAC/B,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;AACtD,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,WAAW,CAAC,MAAc,EAAE,KAAa;AAAI,QAClD,OAAO,GAAG,IAAI,CAAC,EAAE,OAAO,MAAM,IAAI,KAAK,EAAE,CAAC;AAC9C,KAAG;AACH;qDAnCC,UAAU;;;;gDACT;AAAC;AAAa;AAAqB,IACnC,uCAAkB;AACpB;AAAqB,IAAnB,mDAA8B;AAChC;AAAqB,IAAnB,gDAAwB;AAC1B;AAAqB,IAAnB,iDAAgC;AAClC;AAAqB,IAAnB,6CAA0C;AAC5C;AAAqB,IAAnB,8CAAyB;AAC3B;AAAqB,IAAnB,+CAA0B;AAC5B;AAAqB,IAAnB,gDAA0B;AAC5B;AAAqB,IAAnB,mDAAkC;AACpC;AAAqB,IAAnB,gDAA2B;AAC7B;AAAqB,IAAnB,wDAA+B;AACjC;AACoB,IAAlB,0DAA0C;AAC5C;AAAqB,IAAnB,yDAAiE;AACnE;AAAqB,IAAnB,+CAAkD;AACpD;AAAqB,IAAnB,4DAAwF;AAC1F;AACC;AAAC;AACF;AAAkC;AAIzB;AClCT;AAAI;AAEE;AAsBN,MAAa,wBAAwB;AAAG;AAAQ;AAC5B;AAAoC;AAExB;AAAQ,IAgRtC,YACU,sBAA8C,EAC9C,iBAA6C,EAC7C,gBAA2C;AACvD,QAHY,2BAAsB,GAAtB,sBAAsB,CAAwB;AAAC,QAC/C,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,QAC9C,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAnR9C,qBAAgB,GAAuB,EAAE,CAAC;AACpD,QAAU,kBAAa,GAAuB,EAAE,CAAC;AACjD;AACW;AAIN;AAAY,QAgIR,yBAAoB,GAAG,IAAI,CAAC;AACrC;AAEwB,QA2IpB,IAAI,CAAC,QAAQ,GAAG,sBAAsB,CAAC,QAAQ,CAAC;AACpD,QAAI,IAAI,CAAC,gBAAgB,GAAG,sBAAsB,CAAC,SAAS,CAAC;AAC7D,QAAI,IAAI,CAAC,UAAU,GAAG,sBAAsB,CAAC,UAAU,CAAC;AACxD,QAAI,IAAI,CAAC,iBAAiB,GAAG,sBAAsB,CAAC,iBAAiB,CAAC;AACtE,QAAI,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC,eAAe,CAAC;AAC5D,QAAI,IAAI,CAAC,OAAO,GAAG,sBAAsB,CAAC,aAAa,CAAC;AACxD,QAAI,IAAI,CAAC,kBAAkB,GAAG,sBAAsB,CAAC,kBAAkB,CAAC;AACxE,QAAI,IAAI,CAAC,qBAAqB,GAAG,sBAAsB,CAAC,qBAAqB,CAAC;AAC9E;AAEG,QAAC,IAAI,CAAC,0BAA0B,GAAG,sBAAsB,CAAC,0BAA0B,CAAC;AACxF,QAAI,IAAI,CAAC,wBAAwB,GAAG,sBAAsB,CAAC,wBAAwB,CAAC;AACpF,QAAI,IAAI,CAAC,wBAAwB,GAAG,sBAAsB,CAAC,wBAAwB,CAAC;AACpF,QAAI,IAAI,CAAC,gCAAgC,GAAG,sBAAsB,CAAC,gCAAgC,CAAC;AACpG,QAAI,IAAI,CAAC,4BAA4B,GAAG,sBAAsB,CAAC,4BAA4B,CAAC;AAC5F,QAAI,IAAI,CAAC,oCAAoC,GAAG,sBAAsB,CAAC,oCAAoC,CAAC;AAC5G,QAAI,IAAI,CAAC,0BAA0B,GAAG,sBAAsB,CAAC,0BAA0B,CAAC;AACxF,QAAI,IAAI,CAAC,4CAA4C,GAAG,sBAAsB,CAAC,4CAA4C,CAAC;AAC5H,QAAI,IAAI,CAAC,sCAAsC,GAAG,sBAAsB,CAAC,sCAAsC,CAAC;AAChH,QAAI,IAAI,CAAC,uBAAuB,GAAG,sBAAsB,CAAC,uBAAuB,CAAC;AAClF,QAAI,IAAI,CAAC,wBAAwB,GAAG,sBAAsB,CAAC,wBAAwB,CAAC;AACpF,QAAI,IAAI,CAAC,uCAAuC,GAAG,sBAAsB,CAAC,uCAAuC,CAAC;AAClH,QAAI,IAAI,CAAC,+BAA+B,GAAG,sBAAsB,CAAC,+BAA+B,CAAC;AAClG,QAAI,IAAI,CAAC,yCAAyC,GAAG,sBAAsB,CAAC,yCAAyC,CAAC;AACtH,QAAI,IAAI,CAAC,+BAA+B,GAAG,sBAAsB,CAAC,+BAA+B,CAAC;AAClG,QAAI,IAAI,CAAC,gCAAgC,GAAG,sBAAsB,CAAC,gCAAgC,CAAC;AACpG,KAAG;AACH;AAEC;AAEI;AAAwB;AACf;AAAQ,IA/OpB,IACW,SAAS,CAAC,KAAyB;AAChD,QAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAClC,QAAI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,SAAS;AAAK,QACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACjC,KAAG;AACH;AAEC;AAA8B;AAAmB;AAAQ,IAgOjD,cAAc;AAAK,QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC;AAC/C,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,YAAY,CAAC,GAAsB;AAC5C,QAAI,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAE;AAC9C,YAAM,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC/C,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAF,eAAe;AAAK;AACxB,YAAG,YAAgC;AACxC,QAAI,QAAQ,IAAI,CAAC,SAAS;AAC1B,YAAM,KAAK,KAAK;AAChB,gBAAQ,YAAY,GAAG,MAAM,CAAC;AAC9B,gBAAQ,MAAM;AACd,YAAM,KAAK,MAAM;AACjB,gBAAQ,YAAY,GAAG,EAAE,CAAC;AAC1B,gBAAQ,MAAM;AACd,YAAM,KAAK,EAAE;AACb,gBAAQ,YAAY,GAAG,KAAK,CAAC;AAC7B,gBAAQ,MAAM;AACd,SAAK;AACL,QACI,OAAO,YAAY,CAAC;AACxB,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAF,gBAAgB;AAAK,QAC1B,OAAO;AACX,YAAM,UAAU,EAAE,IAAI,CAAC,SAAS,KAAK,KAAK;AAC1C,YAAM,UAAU,EAAE,IAAI,CAAC,SAAS,KAAK,MAAM;AAC3C,YAAM,YAAY,EAAE,CAAC,IAAI,CAAC,SAAS;AACnC,SAAK,CAAC;AACN,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,gCAAgC,EAAE;AAC/C,YAAM,IAAI,CAAC,gCAAgC,CAAC,WAAW,EAAE,CAAC;AAC1D,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACtC,YAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC9C,gBAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/C,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;AAC7E,aAAO;AACP,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,QACI,IAAI,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC1E,YAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;AACjC,gBAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AAC7C,oBAAU,MAAM,KAAK,CAAC,gGAAgG,CAAC,CAAC;AACxH,iBAAS;AACT,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AAC7C,oBAAU,MAAM,KAAK,CAAC,8FAA8F,CAAC,CAAC;AACtH,iBAAS;AACT,aAAO;AACP,YACM,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;AACjC,gBAAQ,MAAM,KAAK,CAAC,wCAAwC,CAAC,CAAC;AAC9D,aAAO;AACP,YACM,IAAI,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,EAAE;AACzE,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC;AACtE,aAAO;AACP,SAAK;AACL,KAAG;AACH;oDAtZC,SAAS,SAAC,kBACT,QAAQ,EAAE,sBAAsB,kBAChC,QAAQ,EAAE,EAAE,cACb;;;;;;;;;;;;;;;;63DACG;AAAC;AAAmB;AACnB,YAbI,sBAAsB;AAAI,YAC1B,0BAA0B;AAAI,YAE9B,yBAAyB;AAAG;AAAG;AAA4C,2BAmBjF,YAAY,SAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAC9C,6BAEF,YAAY,SAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAChD,6BAEF,YAAY,SAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAChD,mDAEF,YAAY,SAAC,gCAAgC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAC7D,2CAEF,YAAY,SAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACrD,sDAEF,YAAY,SAAC,mCAAmC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAChE,+BAOF,KAAK;AACN,gCAKC,KAAK;AACN,gCAKC,KAAK;AACN,oBAOC,KAAK;AACN,uBAKC,KAAK;AACN,2BAOC,KAAK;AACN,wBAKC,KAAK;AACN,yBAeC,KAAK;AACN,wBAKC,KAAK;AACN,oBAKC,KAAK;AACN,0BAKC,KAAK;AACN,wBAKC,KAAK;AACN,uBAKC,KAAK;AACN,oBAKC,KAAK;AACN,sBAKC,KAAK;AACN,mCAKC,KAAK;AACN,gCAKC,KAAK;AACN,qBAKC,KAAK;AACN,oCAKC,KAAK;AACN,6BAKC,KAAK;AACN,iCAOC,KAAK;AACN,yCAKC,KAAK;AACN,uCAKC,KAAK;AACN,uCAKC,KAAK;AACN,+CAKC,KAAK;AACN,2CAKC,KAAK;AACN,qDAKC,KAAK;AACN,mDAKC,KAAK;AACN,yCAKC,KAAK;AACN,2DAKC,KAAK;AACN,qDAKC,KAAK;AACN,sCAKC,KAAK;AACN,uCAKC,KAAK;AACN,sDAKC,KAAK;AACN,8CAKC,KAAK;AACN,wDAMC,KAAK;AACN,8CAKC,KAAK;AACN,+CAKC,KAAK;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AAEpC;AAAQ,IAlRZ,oEAAuD;AACzD;AACO;AAAiB;AAAgB;AAAQ,IAA9C,oDAAkD;AACpD;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,iDAA+C;AACjD;AACoB,IAAlB,+CAA2B;AAC7B;AACoB,IAElB,gDACsC;AACxC;AACoB,IAAlB,kDACwC;AAC1C;AACoB,IAAlB,kDACwC;AAC1C;AACoB,IAAlB,wEAC8D;AAChE;AACoB,IAAlB,gEACsD;AACxD;AACoB,IAAlB,2EACiE;AACnE;AACO;AAGgE;AAAiB;AAAQ,IAE9F,oDAC2D;AAC7D;AAEC;AACE;AAEA;AAAQ,IADT,qDAC6D;AAC/D;AAEC;AACE;AAEA;AAAQ,IADT,qDACgE;AAClE;AACO;AAGU;AAEhB;AAAQ,IAAP,yCACqB;AACvB;AAEC;AACE;AAEA;AAAQ,IADT,4CACyB;AAC3B;AAEC;AACE;AACE;AAEJ;AACM;AAAQ,IADb,gDAC4B;AAC9B;AAEC;AAGoC;AACnC;AAAQ,IAcR,8CAC2B;AAC7B;AAEC;AACE;AAEA;AAAQ,IADT,6CAC0B;AAC5B;AAEC;AACE;AAEA;AAAQ,IADT,yCACqB;AACvB;AAEC;AACE;AAEA;AAAQ,IADT,+CAC2B;AAC7B;AAEC;AACE;AAEA;AAAQ,IADT,6CACyB;AAC3B;AAEC;AACE;AAEA;AAAQ,IADT,4CACwB;AAC1B;AAEC;AACE;AAEA;AAAQ,IADT,yCAC8B;AAChC;AAEC;AACE;AAEA;AAAQ,IADT,2CACwB;AAC1B;AAEC;AACE;AAEA;AAAQ,IADT,wDACmC;AAAC;AAAQ;AAGqD;AAAiB;AACnH,IACC,qDACiC;AACnC;AAEC;AACE;AAEA;AAAQ,IADT,0CACmB;AACrB;AAEC;AACE;AAEA;AAAQ,IADT,yDACkC;AACpC;AAEC;AACE;AAEA;AAAQ,IADT,kDAC8B;AAChC;AACO;AAGiC;AAAiB;AAAQ,IAE/D,sDACmC;AACrC;AAEC;AACE;AAEA;AAAQ,IADT,8DACgD;AAClD;AAEC;AACE;AAEA;AAAQ,IADT,4DACoD;AACtD;AAEC;AACE;AAEA;AAAQ,IADT,4DACyC;AAC3C;AAEC;AACE;AAEA;AAAQ,IADT,oEACgD;AAClD;AAEC;AACE;AAEA;AAAQ,IADT,gEAC6C;AAC/C;AAEC;AACE;AAEA;AAAQ,IADT,0EACuD;AACzD;AAEC;AACE;AAEA;AAAQ,IADT,wEACoD;AACtD;AAEC;AACE;AAEA;AAAQ,IADT,8DAC0C;AAC5C;AAEC;AACE;AAEA;AAAQ,IADT,gFAC6D;AAC/D;AAEC;AACE;AAEA;AAAQ,IADT,0EACuD;AACzD;AAEC;AACE;AAEA;AAAQ,IADT,2DACuC;AACzC;AAEC;AACE;AAEA;AAAQ,IADT,4DACwC;AAC1C;AAEC;AACE;AAEA;AAAQ,IADT,2EACuD;AACzD;AAEC;AACE;AAEA;AAAQ,IADT,mEACgD;AAClD;AAEC;AACE;AACE;AAEA;AAAQ,IADX,6EAC0D;AAC5D;AAEC;AACE;AAEA;AAAQ,IADT,mEAC+C;AACjD;AAEC;AACE;AAEA;AAAQ,IADT,oEACgD;AAClD;AACO;AACE;AAAgB;AAAQ,IAA7B,0DAAsD;AAAC;AACpD;AAAiB;AAAgB;AAAQ,IAA5C,qDAAqD;AAAC;AACnD;AAAiB;AAAgB;AAAQ,IAA5C,oDAAmD;AAAC;AAAE;AAC1D;AAAI;AACO;AAEE;AAAI;AAAsB;AACjC;AAAQ;AACK;AAAQ,IC7SzB,cAAW;AACb;AAEC;AACE;AACE,IAAH,cAAW;AACb;AAEC;AACE;AACE,IAAH,YAAS;AACV;AACC;AAA0D;AAA0D;AAAsD;AAAC;AAAI;AAAkC;AAAqH;ACnBxU;AAAI;AAEG;AAqBP,MAAa,oCAAoC;AAAG;AAAQ;AACxD;AAAoC;AAEvC,IAQC,YAAmB,MAA8B,EAAU,iBAA6C;AAAI,QAAzF,WAAM,GAAN,MAAM,CAAwB;AAAC,QAAS,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,QAVjG,uBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;AAC7C,QAIS,uBAAkB,GAAG,IAAI,YAAY,EAA4B,CAAC;AAC3E,KAI8G;AAC9G;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,8BAA8B,EAAE,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,wBAAwB,EAAE;AACvC,YAAM,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;AAClD,SAAK;AACL,QACI,IAAI,IAAI,CAAC,wBAAwB,EAAE;AACvC,YAAM,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;AAClD,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAAQ,IAA9B,qBAAqB;AAAK,QAChC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS;AAAM;AAAsC;AAChG;AAAY,QADyC,CAAC,eAAyC;AAChH,YAAM,eAAe,CAAC,MAAM,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC;AAC7D,YAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAAQ,IAA9B,8BAA8B;AAAK,QACzC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS;AAAM;AAC1G;AAAY,QADyF;AACzH,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC3E,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AACpC,YAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;AACrC,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC3E,SAAK;AACL,KAAG;AACH;gEArEC,SAAS,SAAC,kBACT,QAAQ,EAAE,+BAA+B,8DAEzC,QAAQ,EAAE,iCAAiC,kBAC3C;wtBAA+D,cAChE;;;;;;;;;;;;;wIACG;AAAC;AAAmB;AACnB,YAbI,sBAAsB;AAAI,YAC1B,0BAA0B;AAAG;AAAG;AAGnC,sBAgBH,KAAK;AACP;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AAE/B;AAAQ,IAVjB,kEAA2C;AAC7C;AACO;AAAiB;AAAgB;AAAQ,IAA9C,wEAA+C;AACjD;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,wEAA+C;AACjD;AACoB,IAAlB,kEAAyE;AAC3E;AAES,IADP,uDAC2C;AAC7C;AACoB,IAAN,sDAAqC;AAAC;AAAQ;AAAiB;AAAgB;AAAQ,IAAhD,iEAAqD;AAAC;AAAE;AAAC;AAE5G;AAC4B;AAIF;ACzC5B;AAAI;AAID;AAMH,MAAa,8BAA8B;AAC3C,IAFA;AACE,QACO,yBAAoB,GAAG,IAAI,OAAO,EAAwB,CAAC;AACpE,KAAC;AACD;0DAJC,UAAU;;;;gDACT;AAAC;AAAa;AAAqB,IACnC,8DAAkE;AACpE;AACA;AAAC;AAAI;AAAkC;AAAqH;ACb5J;AAAI;AACJ;AAuBA,MAAa,sCAAsC;AAAG;AAAQ;AAC1D;AACwB;AAGnB;AAAwC;AAAQ,IAevD,YACS,MAA8B,EAC9B,gBAA2C,EAC1C,iBAA6C,EAC7C,qBAAqD;AAC9D,QAJQ,WAAM,GAAN,MAAM,CAAwB;AAAC,QAC/B,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAC3C,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,QAC9C,0BAAqB,GAArB,qBAAqB,CAAgC;AACjE,QAdS,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;AACrC,QACS,qBAAgB,GAAG,IAAI,OAAO,EAA2B,CAAC;AACnE,KAWM;AACN;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AACxC,YAAM,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB;AAC7F,iBAAS,SAAS;AAAM;AACtB;AAA2B;AAClB,YAFQ,CAAC,GAAyB;AAC7C,gBAAU,IAAI,GAAG,CAAC,YAAY,EAAE;AAChC,oBAAY,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AACxC,iBAAW;AACX,aAAS,EAAC,CAAC;AACX,YACM,IAAI,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE;AACtD,gBAAQ,IAAI,CAAC,oCAAoC,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB;AACnG,qBAAW,IAAI,CACH,SAAS;AAAM;AACC;AAAoB,gBAD1B;AACtB,oBAAc,OAAO,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7E,iBAAa,EAAC,CACH;AACX,qBAAW,SAAS;AAAM;AACvB;AAA+B;AAAoB,gBADjC,CAAC,OAAgC;AACtD,oBAAY,UAAU;AAAM;AAAmC;AAAwB,oBAAhE,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAE,CAAC,CAAC,CAAC;AACrE,iBAAW,EAAC,CAAC;AACb,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,oCAAoC,EAAE;AACnD,YAAM,IAAI,CAAC,oCAAoC,CAAC,WAAW,EAAE,CAAC;AAC9D,SAAK;AACL,QACI,IAAI,IAAI,CAAC,gCAAgC,EAAE;AAC/C,YAAM,IAAI,CAAC,gCAAgC,CAAC,WAAW,EAAE,CAAC;AAC1D,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AACrC,KAAG;AACH;AACO;AAAiC;AAAmB;AAAQ,IAA1D,oBAAoB,CAAC,cAAiC;AAAI,QAC/D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;AAC5B,QAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACvB,KAAG;AACH;kEAnFC,SAAS,SAAC,kBACT,QAAQ,EAAE,sCAAsC,kBAChD;;;;;iMAEE;AAAC;AAAmB;AACnB,YAdI,sBAAsB;AAAI,YAE1B,yBAAyB;AAAI,YAD7B,0BAA0B;mCAUgC,nCAV5B,YAE9B,8BAA8B;AAAG;CASzC,DAT4C;AAC1C,qBAUA,KAAK;AACN,iCAEC,KAAK;AACN,oBAEC,KAAK;AACN,qBAEC,MAAM;AACR;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AACjB,IAXE,wDACwC;AAC1C;AAES,IADP,oEACgE;AAClE;AAES,IADP,uDACqB;AACvB;AAEQ,IADN,wDACmC;AACrC;AACoB,IAAlB,kEAAiE;AACnE;AACO;AAAiB;AAAgB;AAAQ,IAA9C,sFAA2D;AAC7D;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,kFAAuD;AACzD;AACO;AAAiB;AAAgB;AAEtC,IAFA,gEAA0C;AAC5C;AAEK,IAAD,wDAAqC;AAAC;AACtB,IAAhB,kEAAkD;AAAC;AAChD;AAAiB;AAAgB;AAAQ,IAA5C,mEAAqD;AAAC;AACnD;AAAiB;AAAgB;AAAQ,IAA5C,uEAA6D;AACjE;AAAE;AAAC;AACH;AAE2B;AAIF;AAAI;AAAiB,MCxDxC,mBAAmB,GAAG,WAAW;AACvC;AACG;AAAkB;AAAmB;AACpC;AADJ,SAAgB,GAAG,CAAC,GAAQ,EAAE,IAAY;AAAI,IAC5C,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;AACzC,QAAI,OAAO,GAAG,CAAC;AACf,KAAG;AACH,IACE,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAmB,CAAC;AAC/D,SAAK,MAAM,CAAC,OAAO,CAAC;AACpB,SAAK,MAAM;AAAM;AACN;AAAsB;AAAmB;AAC7C,IAFK,CAAC,GAAG,EAAE,GAAG;AACrB,QAAM,IAAI,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACnD,YAAQ,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACxB,SAAO;AACP,QACM,OAAO,SAAS,CAAC;AACvB,KAAK,GAAE,GAAG,CAAC,CAAC;AACZ,CAAC;AACD;AACG;AAAyB;AAAqB;AAAqB;AAAe;AAArF,SAAgB,OAAO,CAAC,UAAiB,EAAE,MAAgB,EAAE,MAA2B;AAAI,IAC1F,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACtB,IAAE,OAAO,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI;AAAM;AACpC;AAAoB;AAAmB;AACtC,IAF8B,CAAC,CAAM,EAAE,CAAM;AACjD,QAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C;AAA6B,kBAAjB,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AAC7B;AAA6B,kBAAjB,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AAC7B,YAAM,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAC/B,gBAAQ,OAAO,KAAK,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,aAAO;AACP,YACM,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAC/B,gBAAQ,OAAO,KAAK,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACxC,aAAO;AACP,SAAK;AACL,QACI,OAAO,CAAC,CAAC;AACb,KAAG,EAAC,CAAC;AACL,CAAC;AACD;AAAC;AAAI;AAAkC;AAAqH;ACpC5J;AAAI;AAEJ;AAMA,MAAa,aAAa;AAAG,IAH7B;AACG,QAIM,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;AACrC,KAOC;AACD;AAAQ;AAAgC;AAAmB;AAAQ,IAJ1D,QAAQ;AAAK,QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACvB,KAAG;AACH;yCAbC,SAAS,SAAC,kBACT,QAAQ,EAAE;EAAU,cACrB,qIACI;AAAC;AAAiC,qBACpC,MAAM;AACR;;;;;;;;oBAAE;AAAC;AAAa;AACjB,IAFE,+BACmC;AACrC;AACC;AAAC;AACF;AACI;AAKqD;ACnBzD;AAAI;AAGG;AAKP,MAAa,cAAc;AAAG;AAAQ;AAC3B;AAAQ,IAAjB,YAAoB,EAAc;AAAI,QAAlB,OAAE,GAAF,EAAE,CAAY;AAAC,KAAG;AACxC;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAClC,KAAG;AACH;0CAZC,SAAS,SAAC,kBACT,QAAQ,EAAE,WAAW,cACtB;yHACI;AAAC;AAAmB;AACR,YATG,UAAU;AAAG;;;;;;2EAAE;AAAC;AAAa;AAAQ;AAGnD;AAAgB;AAAQ,IAMhB,4BAAsB;AAAC;AAAE;AAAC;AAEtC;AAEF;AAK0C;AClB1C;AAAI;AAAyB;AAIrB;AAKR,MAAa,kBAAkB;AAAG;AAAQ;AAE3B;AACE;AACU;AAAQ,IAE1B,SAAS,CAAC,KAAsB;AAAI,QACzC,IAAI,KAAK,KAAK,SAAS,EAAE;AAC7B,YAAM,OAAO;AACb,SAAK;AACL,QAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACnC,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL,QAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACnC,YAAM,OAAO,GAAG,KAAK,IAAI,CAAC;AAC1B,SAAK;AACL,KAAG;AACH;8CApBC,IAAI,SAAC,kBACJ,IAAI,EAAE,MAAM,cACb;;;;;;;0BACI;AAAC;AAAC;AAAI;AAAkC;AAIhB;ACb7B;AAAI;AAGsD;AAAyB;AAInF,MAAa,oBAAoB;AAAG;gDADnC,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AACH;AAAqH;ACR1H;AAAI;AAAkC;AAStC,MAAa,kBAAkB;AAC/B;AACE;AACE;AACM;AAAsB;AACxB;AAAQ,IAEP,IAAI,CAAC,KAAiB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAyC;AAAI;AACrE,cAAT,MAAM,GAAG,KAAK,CAAC,KAAK;AAC9B;AAAyB,cAAf,MAAM,GAAG,KAAK,CAAC,KAAK;AAC9B;AACK,YADG,CAAC,GAAG,MAAM;AAClB;AACK,YADG,CAAC,GAAG,MAAM;AAClB;AAEC,YAFO,KAAK,GAAG,KAAK;AACrB;AACwB,cAAd,gBAAgB;AAAQ;AAChC;AAAuB;AAAY,QADR,CAAC,cAA0B;AAAO;AACxC,kBAAX,EAAE,GAAG,cAAc,CAAC,KAAK,GAAG,CAAC;AACzC;AAA6B,kBAAjB,EAAE,GAAG,cAAc,CAAC,KAAK,GAAG,CAAC;AACzC,YAAM,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC;AAC/B,YAAM,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC;AAC/B,YAAM,IAAI,EAAE,IAAI,EAAE,EAAE;AACpB,gBAAQ,KAAK,GAAG,IAAI,CAAC;AACrB,aAAO;AACP,YACM,IAAI,CAAC,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YACM,cAAc,CAAC,cAAc,EAAE,CAAC;AACtC,SAAK,CAAA;AACL;AACwB,cAAd,cAAc;AAAQ;AAC9B;AAAuB;AAClB,QAFoB,CAAC,YAAwB;AAAO,YACrD,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC;AAC7B,YAAM,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC;AAC7B,YACM,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAClE,YAAM,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC9D,YACM,IAAI,EAAE,EAAE;AACd,gBAAQ,EAAE,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACtC,aAAO;AACP,SAAK,CAAA;AACL,QACI,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC7D,QAAI,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AACzD,KAAG;AACH;8CA5CC,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AAEN;AAGF;ACdA;AAAI;AAGwB;AAG5B,MAAa,gBAAgB;AAC7B,IAEE;AACF,QAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC7B,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,iBAAiB;AAAK,QAC3B,IAAI,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAE;AAChD,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB;AAA6B,kBAAjB,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AACjD,YAAM,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;AACxC,YAAM,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;AAClC,YAAM,KAAK,CAAC,KAAK,CAAC,eAAe,GAAG,WAAW,CAAC;AAChD,YACM,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACvC;AAC4B,kBAAhB,aAAa,GAAG,KAAK,CAAC,WAAW;AAC7C;AACM,YAAA,KAAK,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACtC;AAEK;AAA6B,kBAAtB,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AACjD,YAAM,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;AACjC,YAAM,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC/B;AAC4B,kBAAhB,eAAe,GAAG,KAAK,CAAC,WAAW;AAC/C;AAEK,YAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC1C,YACM,IAAI,CAAC,mBAAmB,GAAG,aAAa,GAAG,eAAe,CAAC;AACjE,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAED;AAAQ,IAAR,IAAW,cAAc;AAAK,QAC5B,OAAO,IAAI,CAAC,mBAAmB,CAAC;AACpC,KAAG;AACH;AACE;AACE;AAEA;AAAQ,IAAV,IAAW,MAAM;AAAK,QACpB,OAAO,MAAM,CAAC;AAClB,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAT,IAAW,SAAS;AAAK,QACvB,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;AACzC,KAAG;AACH;4CAhEC,UAAU;8HACT;AAAC;AAAmB;;;gDACW;AAAC;AAE3B;AAAQ;AACD;AACd;AAEG,IAND,+CAAoC;AACtC;AACC;AAAC;AAAI;AACgB;AAI4E;ACdlG;AAAI;AAEkB;AAQtB,MAAa,aAAa;AAC1B;AAAQ;AAEF;AAAQ,IAAZ,YAAoB,gBAAkC;AACxD,QADsB,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QACrD,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AACzC,YAAM,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACtE,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;AAClC,SAAK;AACL,KAAG;AACH;yCAXC,UAAU;qHACT;AAAC;AAAmB;AACU,YAPvB,gBAAgB;AAAG;;;0EAAE;AAAC;AAAa;AAGzC,IAID,+BAAiC;AACnC;AACO;AAAiB;AAAgB;AAAQ,IAAlC,yCAA0C;AAAC;AAAE;AAC3D;AAAI;AAAkC;AAGV;ACf5B;AAAI;AAIuC;AAAe;AAU1D,MAAa,sBAAsB;AAAG;AAAQ;AAC5B;AAAyB;AAE1C;AAA2B;AACL;AAAQ,IAG7B,YACU,wBAAkD,EAClD,MAAsB,EACtB,gBAAkC,EAClC,QAAmB,EACnB,aAA4B;AACrC,QALS,6BAAwB,GAAxB,wBAAwB,CAA0B;AAAC,QACnD,WAAM,GAAN,MAAM,CAAgB;AAAC,QACvB,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QACnC,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACpB,kBAAa,GAAb,aAAa,CAAe;AACxC,QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC3B,KAAG;AACH;AAEC;AACE;AACE;AAAgB;AAEG;AAAmB;AAAQ,IAAzC,oBAAoB,CAAC,GAAG,OAAsB;AAAI;AACzC,cAAT,iBAAiB;AAAQ;AACtB;AACT;AAAY,QAFc,CAAC,KAAY;AAC3C,YAAM,IAAI,CAAC,OAAO,CAAC,IAAI;AAAM;AACH;AAA2B;AAErD,YAHwB,EAAE;AAC1B,gBAAQ,OAAO,EAAE,CAAC,QAAQ,oBAAC,KAAK,CAAC,MAAM,GAAgB,CAAC;AACxD,aAAO,EAAC,EAAE;AACV,gBAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;AACpB,aAAO;AACP,SAAK,CAAA;AACL,QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;AACtF,QAAI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;AAChG,KAAG;AACH;AAEC;AACE;AAAgB;AACM;AAEA;AAAmB;AAAQ,IAA1C,WAAW,CAAC,aAA0B,EAAE,OAA+B;AAAI;AAClE,cAAT,aAAa,GAAI,OAAO,CAAC,qBAAqB,IAAI,aAAa;AACzE;AAAyB,cAAf,cAAc,GAAG,aAAa,CAAC,qBAAqB,EAAE;AAChE;AAAyB,cAAf,iBAAiB,GAAG,aAAa,CAAC,qBAAqB,EAAE;AACnE;AAEM,YADE,IAAI,GAAG,CAAC;AAChB;AAEO,YAFC,GAAG,GAAG,CAAC;AACf,QACI,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC5C,YAAM,IAAI,GAAG,aAAa,CAAC,WAAW,CAAC;AACvC,SAAK;AACL,QACI,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAC7C,YAAM,GAAG,GAAG,aAAa,CAAC,YAAY,CAAC;AACvC,SAAK;AACL;AACwB,cAAd,gBAAgB,sBAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,EAAe;AAC1F,QAAI,gBAAgB,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,iBAAiB,CAAC,GAAG,GAAG,cAAc,CAAC,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ,IAAI,CAAC;AAC5G,QAAI,gBAAgB,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,iBAAiB,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,CAAC,SAAS,IAAI,CAAC;AACjH,QAAI,gBAAgB,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACjD,QAAI,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AAC7C;AACwB,cAAd,YAAY,sBAAG,gBAAgB,CAAC,iBAAiB,EAAe;AAC1E,QAAI,IAAI,YAAY,EAAE;AACtB,YAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC9C,gBAAQ,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACzC,aAAO;AACP,YACM,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC5C,gBAAQ,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1C,aAAO;AACP,YACM,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AAC/C,SAAK;AACL,QACI,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;AAAM;AAEzF;AAGD,QALqF;AACrF,YAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAClB,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACM;AACM;AACM;AACM;AAEA;AAAQ,IAA1B,IAAI,CAAC,SAAkB,EAAE,aAA0B,EAAE,QAAkB,EAAE,OAA+B;AAAI,QACjH,OAAO,GAAG,MAAM,CAAC,MAAM,CACrB;AACN,YAAQ,mBAAmB,EAAE,IAAI;AACjC,YAAQ,SAAS,EAAE,CAAC;AACpB,YAAQ,QAAQ,EAAE,CAAC;AACnB,YAAQ,QAAQ,EAAE,aAAa;AAC/B,SAAO,EACD,OAAO,CACR,CAAC;AACN,QACI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AAC/C,YAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC5B,YAAM,OAAO;AACb,SAAK;AACL;AAEG,QAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChH,QACI,IAAI,OAAO,CAAC,OAAO,EAAE;AACzB,YAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AACvE,SAAK;AACL;AAEG,QAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC7D;AAEG;AAAyB,cAAlB,OAAO,sBAAG,oBAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,IAA0B,SAAS,CAAC,CAAC,CAAC,EAAe;AAC1G,QACI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AAC7C;AAEG,QAAC,CAAC,OAAO,CAAC,qBAAqB,IAAI,aAAa,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;AAC1E;AAEG,QAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;AAC7D,QAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;AAC9D,QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1B,QACI,IAAI,OAAO,CAAC,mBAAmB,EAAE;AACrC,YAAM,IAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AAC/F,SAAK;AACL,QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAF,IAAI;AAAK,QACd,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAC5E,YAAM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,YAAM,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;AAC9C,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACM;AACM;AACM;AACO;AAEA;AAAQ,IAA3B,MAAM,CAAC,SAAkB,EAAE,aAA0B,EAAE,QAAkB,EAAE,OAAgC;AAAI,QACpH,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjG,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,OAAO;AAAK,QACjB,IAAI,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAM,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;AACjD,SAAK;AACL,QACI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC/D,YAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;AACxC,SAAK;AACL,QACI,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B,YAAM,IAAI,CAAC,aAAa,EAAE,CAAC;AAC3B,YAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAChC,SAAK;AACL,QACI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACrC,SAAK;AACL,QACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACnC,KAAG;AACH,CAAC;AACD;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IAzL5D,oDAA4C;AAC9C;AAAQ;AAAiB;AACd;AAAQ,IADjB,2CAA2B;AAC7B;AAAQ;AAAiB;AACrB;AAAQ,IADV,+CAAkC;AACpC;AAAQ;AAAiB;AAAgB;AAClC,IADL,oDAAuC;AACzC;AAAQ;AAAiB;AAAgB;AACzC,IADE,yDAA8C;AAChD;AACO;AACE;AAAgB;AAAQ,IAA7B,0DAA0D;AAAC;AACxD;AAAiB;AACpB;AAAQ,IADR,wCAA8B;AAAC;AAC5B;AAAiB;AAAgB;AACxC,IADI,kDAA0C;AAAC;AACxC;AAAiB;AACjB;AAAQ,IADX,0CAA2B;AAAC;AACzB;AAAiB;AAAgB;AAEvC,IAFG,+CAAoC;AACxC;AAAE;AAAC;AACF;AAGC;AAEG;ACnCL;AAAI;AAA6C;AAajD,MAAa,oCAAoC;AACjD;AAAQ;AAC4B;AAAyB;AAC7B;AACJ;AAAQ,IAHlC,YACU,wBAAkD,EAClD,MAAsB,EACtB,gBAAkC,EAClC,aAA4B;AACrC,QAJS,6BAAwB,GAAxB,wBAAwB,CAA0B;AAAC,QACnD,WAAM,GAAN,MAAM,CAAgB;AAAC,QACvB,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QACnC,kBAAa,GAAb,aAAa,CAAe;AACxC,KAAM;AACN;AAEC;AACE;AAAmB;AACM;AAEA;AAAQ,IAA3B,YAAY,CAAI,QAAmB;AAAI,QAC5C,OAAO,IAAI,sBAAsB,CAAI,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1I,KAAG;AACH;gEAjBC,UAAU;0LACT;AAAC;AAAmB;AAEL,YAfQ,wBAAwB;AAAI,YAA5C,cAAc;AAAI,YAIlB,gBAAgB;AAAI,YACpB,aAAa;AAAG;;;+KAAE;AAAC;AAAa;AAAQ;AAElC;AAAgB;AAAQ,IAQnC,wEAA0D;AAAC;AACxD;AAAiB;AACpB;AAAQ,IADR,sDAA8B;AAAC;AAC5B;AAAiB;AAAgB;AACxC,IADI,gEAA0C;AAAC;AACxC;AAAiB;AAAgB;AAExC,IAFI,6DAAoC;AACxC;AAAE;AAAC;AACH;AAE2B;AAIrB;AC1BN;AAAI;AAEH;AAMD,MAAa,gBAAgB;AAC7B;;kJACA;AAAC;AAAI;AAC2C;AAEvB,6CAA4B,GAAG,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAC,AALtF;4CAHJ,UAAU,SAAC,kBACV,UAAU,EAAE,MAAM,cACnB,jHACK;;;;;;0BAOa;AAAC;AAAa;AAAQ;AAAqD;AAAiB;AAAQ,IAFrH,8CAAyF;AAC3F;AACA;AAAC;AAAI;AAAkC;AAAqH;ACf5J;AAAiB,MAeX,UAAU,GAAG,CAAC,aAAa,EAAE,cAAc,CAAC;AAClD;AACgB,MAAV,KAAK,GAAG,CAAC,kBAAkB,CAAC;AAClC;AACgB,MAAV,SAAS,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,oCAAoC,EAAE,aAAa,EAAE,gBAAgB,CAAC;AAC/H;AACG;AAC4D;AAQ/D,MAAa,aAAa;AAC1B;AACE;AACE;AAEA;AAAQ,IAAH,OAAO,OAAO;AAAK,QACxB,OAAO;AACX,YAAM,QAAQ,EAAE,aAAa;AAC7B,YAAM,SAAS,EAAE,CAAC,oBAAoB,CAAC;AACvC,SAAK,CAAC;AACN,KAAG;AACH;yCAjBC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC;GAAY,CAAC,kBACvB,YAAY,EAAE,CAAC,GAAG,UAAU,EAAE,GAAG,KAAK,CAAC,kBACvC;GAAS,EAAE,CAAC,GAAG,SAAS,CAAC,kBACzB,OAAO,EAAE,CAAC,GAAG,UAAU,EAAE,GAAG,KAAK,CAAC,cACnC;;;;;;;;;;uVACI;AAAC;AAAC;AAAI;AAED;AAGsB;ACnChC;AAAI;AAEiB;AAoBrB,MAAa,mCAAmC;AAChD;AAAQ;AAEA;AACyB;AAG3B;AAAyB;AAAQ,IADrC,YACU,kBAAsC,EACtC,iBAA6C,EAC9C,gBAA2C,EAC3C,MAA8B;AACtC,QAJS,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC,QACvC,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,QAC/C,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAC5C,WAAM,GAAN,MAAM,CAAwB;AACzC,QAVU,qBAAgB,GAAG,KAAK,CAAC;AACnC,KASM;AACN;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,aAAa,CAAC,MAAgC,EAAE,KAAiB;AAAI,QAC1E,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAChC,YAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5B,YAAM,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AACvE,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACpC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAAgB;AAEA;AAAmB;AAAQ,IAApC,QAAQ,CAAC,MAAgC;AAAI,QACnD,IAAI,MAAM,CAAC,QAAQ,EAAE;AACzB;AAA6B,kBAAjB,aAAa,GAAG,MAAM,CAAC,SAAS;AAC5C,YAAM,IAAI,MAAM,CAAC,SAAS,EAAE;AAC5B,gBAAQ,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;AACpD,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;AAC9C;AAAqC,0BAArB,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;AAAM;AACnC;AAAmC;AAClD,oBAF6C,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAC;AACxE,oBAAU,WAAW,CAAC,OAAO;AAAM;AAC7B;AACN;AAAwB,oBAFM,CAAC,UAAoC;AACnE,wBAAY,IAAI,UAAU,KAAK,MAAM,EAAE;AACvC,4BAAc,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC;AACxC,yBAAa;AACb,qBAAW,EAAC,CAAC;AACb,iBAAS;AACT,gBACQ,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AACjC,aAAO;AACP,YACM,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;AAC3C,gBAAQ,IAAI,MAAM,CAAC,SAAS,KAAK,EAAE,EAAE;AACrC;AAAqC,0BAArB,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;AAAM;AACnC;AAAmC;AAClD,oBAF6C,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAC;AACxE,oBAAU,WAAW,CAAC,OAAO;AAAM;AAC7B;AAAmC;AAAwB,oBADnC,CAAC,UAAoC;AACnE,wBAAY,IAAI,UAAU,KAAK,MAAM,IAAI,UAAU,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE;AACxF,4BAAc,EAAE,UAAU,CAAC,YAAY,CAAC;AACxC,yBAAa;AACb,qBAAW,EAAC,CAAC;AACb,oBACU,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC;AAC1C,oBAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;AACtD,iBAAS;AAAC,qBAAK;AACf,oBAAU,IAAI,CAAC,aAAa,EAAE;AAC9B,wBAAY,MAAM,CAAC,YAAY,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;AAC9E,qBAAW;AACX,iBAAS;AACT,aAAO;AACP,YACM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC3E,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,cAAc,CAAC,KAAa,EAAE,MAAgC;AAAI,QACvE,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;AAC/B,KAAG;AACH;AAEC;AACE;AACM;AACM;AAEA;AAAmB;AAAQ,IAAjC,cAAc,CAAC,KAAiB,EAAE,MAAgC,EAAE,aAAyC;AAAI,QACtH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACjC,QACI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE;AACxC,YAAM,IAAI;AAAO;AACjB;AAA6B;AAA2B;AACzC,YAFH,CAAC,SAAqB,EAAE,EAAU;AAC9C;AAAiC,sBAAnB,QAAQ,GAAG,aAAa,CAAC,WAAW,GAAG,EAAE;AACvD,gBAAQ,IAAI,MAAM,CAAC,cAAc,KAAK,SAAS,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,EAAE;AACrF,oBAAU,OAAO;AACjB,iBAAS;AACT,gBACQ,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC;AACtC;AAEI,oBAFQ,UAAU,GAAG,CAAC;AAC1B,gBACQ,IAAI,CAAC,OAAO,CAAC,OAAO;AAAM;AACJ;AACR;AACf,gBAHsB,GAAG;AAChC,oBAAU,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC;AACtC,oBAAU,UAAU,IAAI,GAAG,CAAC,KAAK,CAAC;AAClC,iBAAS,EAAC,CAAC;AACX,gBACQ,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,UAAU,CAAC;AACtD,aAAO,CAAA;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAA5B,IAAW,cAAc,CAAC,KAAc;AAC1C,QAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,KAAK,CAAC;AACjD,QAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AACrE,QAAI,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAC/F,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,cAAc;AAAK,QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;AAChD,KAAG;AACH;AAEC;AACE;AAAgB;AAEA;AAAmB;AAAQ,IAApC,qBAAqB,CAAC,aAAsB;AAAI,QACtD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO;AAAM;AAC1B;AAAuB;AAAY,QADd,GAAG;AAC9C;AAA6B,kBAAjB,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AACzD;AAA6B,kBAAjB,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;AAClE,YAAM,IAAI,aAAa,IAAI,KAAK,GAAG,CAAC,EAAE;AACtC,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpD,aAAO;AAAC,iBAAK,IAAI,CAAC,aAAa,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AAC/C,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D,aAAO;AACP,YACM,GAAG,CAAC,QAAQ,GAAG,aAAa,CAAC;AACnC,SAAK,EAAC,CAAC;AACP,QACI,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAC1F,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAT,IAAW,wBAAwB;AAAK,QACtC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC;AACtF,KAAG;AACH;AACO;AAAyB;AAAmB;AAAQ,IAAlD,qBAAqB,CAAC,MAAgC;AAAI,QAC/D,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,GAAG,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;AACvH,KAAG;AACH;+DAnKC,SAAS,SAAC,kBACT,QAAQ,EAAE,8BAA8B,8DAExC,QAAQ,EAAE,gCAAgC,kBAC1C;8pDAA8D,cAC/D;;;;;;;;;;;;;6OACG;AAAC;AAAmB;AACU,YAfzB,kBAAkB;AAAI,YAEtB,0BAA0B;AAAI,YAC9B,yBAAyB;AAAI,YAF7B,sBAAsB;AAAG;AAAG;AAC5B,sBAeN,KAAK;AACP;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AAE/B;AACP,IANF,+DAAiC;AACnC;AAES,IADP,sDAC2C;AAC7C;AACO;AACE;AAAgB;AAAQ,IAA7B,iEAA8C;AAAC;AAC5C;AAAiB;AAAgB;AAAQ,IAA5C,gEAAqD;AAAC;AACtC,IAAhB,+DAAkD;AAAC;AACnC,IAAhB,qDAAqC;AACzC;AAAE;AAAC;AACH;AAE2B;AAGtB;ACvCL;AAAI;AAEgD;AAYpD,MAAa,gCAAgC;AAC7C;AAAQ;AAAmC;AAAyB;AAAQ,IAA1E,YAAmB,gBAA2C,EAAS,MAA8B;AAAI,QAAtF,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAAQ,WAAM,GAAN,MAAM,CAAwB;AAAC,KAAG;AAC3G;4DANC,SAAS,SAAC,kBACT,QAAQ,EAAE,+BAA+B,kBACzC;qxBAA0D,cAC3D;;;;;;;;;;;;;;;;kLACG;AAAC;AAAmB;AACU,YAXzB,yBAAyB;AAAI,YAC7B,sBAAsB;AAAG;AAAG;AAGpC,sBASE,KAAK;AACN,oBAEC,KAAK;AACP;;;;;;;;;;;oBAAE;AAAC;AAAa;AAEZ,IANH,mDAC2C;AAC7C;AAES,IADP,iDAC4B;AAC9B;AACmB,IARL,4DAAkD;AAAC;AAAqB,IAApB,kDAAqC;AAAC;AAAE;AAAC;AAEzG;AACuB;AAK0B;ACvBnD;AAAI;AAEI;AAkBR,MAAa,wBAAwB;AAAG;AAAQ;AACpB;AAA2B;AAGtD;AAA2B;AAG3B;AAAyB;AAAQ,IADhC,YACU,sBAA4D,EAC5D,QAAkB,EAClB,iBAA6C,EAC7C,QAAmB,EACpB,gBAA2C,EAC3C,MAA8B;AACtC,QANS,2BAAsB,GAAtB,sBAAsB,CAAsC;AAAC,QAC7D,aAAQ,GAAR,QAAQ,CAAU;AAAC,QACnB,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,QAC9C,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACrB,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAC5C,WAAM,GAAN,MAAM,CAAwB;AACzC,QACI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAmC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrH,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,oBAAoB,CAAC,OAAoB;AAAI,QAClD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,gCAAgC,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE;AAC1F;AACM,YAAA,OAAO,EAAE;AACf,gBAAQ,OAAO,EAAE,IAAI,CAAC,OAAO;AAC7B,gBAAQ,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;AAC9C,aAAO;AACP,YAAM,QAAQ,EAAE,cAAc;AAC9B,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAC3E,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;AACnC,KAAG;AACH;oDAjDC,SAAS,SAAC,kBACT,QAAQ,EAAE,sBAAsB,kBAChC;0cAAiD,cAClD;;;;;;;;;;;;;;;wDACG;AAAC;AAAmB;AACX,YAnBa,oCAAoC;AAAI,YAF9C,QAAQ;AAAI,YAUvB,0BAA0B;AAAI,YAVS,SAAS;AAAI,YAWpD,yBAAyB;AAAI,YAF7B,sBAAsB;AAAG;AAAG;AAA4C,sBAc9E,KAAK;AACP;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AAE/B;AACP,IANF,mDAA2E;AAC7E;AAES,IADP,2CAC2C;AAC7C;AACO;AACE;AAAgB;AAAQ,IAA7B,0DAAoE;AAAC;AAClE;AAAiB;AAChB;AAAQ,IADZ,4CAA0B;AAAC;AACxB;AAAiB;AAAgB;AAAQ,IAA5C,qDAAqD;AAAC;AACnD;AAAiB;AACjB;AAAQ,IADX,4CAA2B;AAAC;AACZ,IAAhB,oDAAkD;AAAC;AACnC,IAAhB,0CAAqC;AACzC;AAAE;AAAC;AACF;AAAkC;AAIZ;ACtCvB;AAAI;AAEkC;AAatC,MAAa,0BAA0B;AACvC;AAAQ;AACc;AAAQ,IAE5B,YAAmB,MAA8B;AAAI,QAAlC,WAAM,GAAN,MAAM,CAAwB;AAAC,KAAG;AACvD;sDAXC,SAAS,SAAC,kBACT,QAAQ,EAAE,qBAAqB;CAE/B,QAAQ,EAAE,uBAAuB,kBACjC;;YAAoD,cACrD;;;;;;;;;;;qGACG;AAAC;AAAmB;AAED,YAbd,sBAAsB;AAAG;AAAG;AACrC,sBAWG,KAAK;AACP;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAqB,IADpC,6CACyC;AAC3C;AACoB,IAAN,4CAAqC;AAAC;AAAE;AAAC;AAEtD;AAAkC;AAAqH;ACrBxJ;AAAI;AAEH;AAgBD,MAAa,4BAA4B;AAAG;AAAQ;AACrC;AAAmC;AAClB;AAEzB;AAAQ,IAEb,YACS,MAA8B,EAC9B,gBAA2C,EAC1C,iBAA6C,EAC7C,aAA4B;AACrC,QAJQ,WAAM,GAAN,MAAM,CAAwB;AAAC,QAC/B,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAC3C,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,QAC9C,kBAAa,GAAb,aAAa,CAAe;AACxC,QAPS,aAAQ,GAAG,KAAK,CAAC;AAC1B,KAMM;AACN;AAEC;AACE;AACU;AAAmB;AAC/B,IADS,kBAAkB;AAAK,QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,WAAW,GAAG,GAAG,CAAC;AAC7E,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,cAAc;AAAK,QACxB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3B,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACzE,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,iBAAiB;AAAK,QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9F,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACzE,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,aAAa;AAAK,QACvB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAChE,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACzE,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,aAAa;AAAK,QACvB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAChE,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACzE,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,OAAO;AAAK,QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1E,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,IAAI;AAAK,QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClE,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,cAAc,CAAC,OAAyB;AAAI;AACrC,cAAN,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;AACvC,QAAI,OAAO,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;AAC7E,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,gBAAgB,CAAC,OAAyB;AAAI,QACnD,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;AACtC,YAAM,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAChD,YAAM,OAAO;AACb,SAAK;AACL;AACwB,cAAd,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;AACvC,QAAI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,EAAE;AACrC,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7B,YAAM,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AAChC,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC3E,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,gBAAgB,CAAC,OAAyB;AAAI,QACnD,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,kBAAkB,CAAC,OAAyB;AAAI;AACzC,cAAN,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;AACtC,QAAI,OAAO,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,GAAG,CAAC,CAAC;AACnE,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,iBAAiB,CAAC,OAAyB;AAAI,QACpD,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE;AAC1C,YAAM,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxC,YAAM,OAAO;AACb,SAAK;AACL;AACwB,cAAd,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;AACtC,QAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AAC5B,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAC1D,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC3E,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,iBAAiB,CAAC,OAAyB;AAAI,QACpD,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,WAAW;AAAK,QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,OAAO;AAAK,QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;AACrF,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,aAAa;AAAK,QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAClC,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,WAAW;AAAK,QACzB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AAC7F,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,sBAAsB,CAAC,KAAoB;AAAI,QACpD,IACE,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG;AAC3C,YAAM,KAAK,CAAC,GAAG,KAAK,WAAW;AAC/B,YAAM,KAAK,CAAC,GAAG,KAAK,YAAY;AAChC,YAAM,KAAK,CAAC,GAAG,KAAK,QAAQ;AAC5B,YAAM,KAAK,CAAC,GAAG,KAAK,WAAW;AAC/B,YAAM,KAAK,CAAC,GAAG,KAAK,QAAQ;AAC5B,YAAM,KAAK,CAAC,GAAG,KAAK,OAAO,EACrB;AACN,YAAM,OAAO;AACb,SAAK;AAAC,aAAK;AACX,YAAM,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QACI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;AAAM;AACjD;AAAY,QADgC;AAChE,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,SAAK,EAAC,CAAC;AACP,KAAG;AACH;wDAvMC,SAAS,SAAC,kBACT,QAAQ,EAAE,0BAA0B,kBACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGAAqD,cACtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gNACG;AAAC;AAAmB;AACR,YAbP,sBAAsB;AAAI,YAC1B,yBAAyB;AAAI,YAC7B,0BAA0B;AAAI,YAC9B,aAAa;AAAG;AAAG;AAE3B,kCAQE,SAAS,SAAC,qBAAqB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAChD;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AAEzC;AAAQ,IAHV,2DACqD;AACvD;AACoB,IAAlB,gDAAwB;AAC1B;AAEK,IAAD,8CAAqC;AAAC;AACtB,IAAhB,wDAAkD;AAAC;AAChD;AAAiB;AAAgB;AAAQ,IAA5C,yDAAqD;AAAC;AACnD;AAAiB;AAAgB;AAExC,IAFI,qDAAoC;AACxC;AAAE;AAAC;AACH;AAE2B;AAG4C;ACnCvE;AAAI;AAEqD;AAWzD,MAAa,2BAA2B;AACxC;AAAQ;AAEM;AAAyB;AAAQ,IAA7C,YAAoB,gBAAkC,EAAU,MAA8B;AAAI,QAA9E,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QAAS,WAAM,GAAN,MAAM,CAAwB;AAAC,KAAG;AACpG;AAEC;AACE;AAEA;AAAmB;AAAQ,IAA5B,IAAW,WAAW,CAAC,KAA2B;AACpD,QAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AACzC,YAAM,IAAI,KAAK,KAAK,OAAO,EAAE;AAC7B,gBAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,CAAC;AACjE,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,cAAc,CAAC;AACnE,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACM;AAC4B;AAErB;AAAmB;AAAQ,IAAlC,QAAQ,CAAC,EAAU,EAAE,KAA6B,EAAE,UAAkB,IAAI;AAAI,QACnF,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AACzC;AACQ,kBADI,IAAI,GAAG;AACnB,gBAAQ,GAAG,EAAE,OAAO;AACpB,gBAAQ,GAAG,EAAE,KAAK;AAClB,aAAO;AACP,YAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AACvF,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACM;AACO;AAEA;AAAQ,IAAf,QAAQ,CAAC,EAAU,EAAE,UAAkB,IAAI;AAAI,QACpD,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AACzC;AAA6B,kBAAjB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,EAAE,EAAE,CAAC,CAAC;AACzF,YACM,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE;AACxC,gBAAQ,OAAO,IAAI,CAAC,GAAG,CAAC;AACxB,aAAO;AACP,SAAK;AACL,QACI,OAAO,IAAI,CAAC;AAChB,KAAG;AACH;uDArDC,UAAU;+JACT;AAAC;AAAmB;AAGnB,YAVM,gBAAgB;AAAI,YACpB,sBAAsB;AAAG;;;4GAAE;AAAC;AAAa;AAAQ;AAG1D;AAAgB;AAAQ,IAItB,8CAAyB;AAC3B;AACO;AAAiB;AAAgB;AAAQ,IAAlC,uDAA0C;AAAC;AAAQ;AAAiB;AAAgB;AAE9F,IAFsD,6CAAsC;AAAC;AAAE;AAAC;AAElG;AAC4B;AAIZ;ACvBlB;AAAI;AAEgC;AAAe;AAgBnD,MAAa,wBAAwB;AAAG;AACnC;AAAwC;AAE7C;AAEY;AAAQ,IAGX,aAAa,CAAC,UAA2B;AAAI,QAClD,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB,QACI,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;AAC5D,YAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AACrC,SAAK;AACL,QACI,IAAI,CAAC,cAAc,GAAG,IAAI,aAAa,CAAM,CAAC,CAAC,CAAC;AACpD,QAAI,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,SAAS;AAAM;AAC7C;AAAuB;AAEnC,QAHoD,CAAC,KAAU;AAClE,YAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,KAAK,CAAC,MAA8B;AAAI,QAC7C,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAC7B,SAAS;AAAM;AACN;AACf;AAAY,QAFI,CAAC,KAAU;AAC3B;AAA6B,gBAAjB,SAAS,GAAG,KAAK,CAAC,MAAM;AACpC;AAA6B,gBAAjB,MAAM,GAAQ,KAAK,CAAC,KAAK,EAAE;AACvC,YACQ,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;AAClC;AAAiC,sBAAjB,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;AAAM;AAE7C;AACN;AAAoB,gBAH0B,KAAK,IAAI,KAAK,CAAC,UAAU,EAAC;AAC9E,gBACU,IAAI,YAAY,CAAC,MAAM,EAAE;AACnC,oBAAY,MAAM,GAAG,KAAK,CAAC,MAAM;AAAM;AACL;AAAmC;AACzD,oBAFsB,IAAI;AACtC,wBAAc,OAAO,YAAY,CAAC,KAAK;AAAM;AAC9B;AACd;AAA4B,wBAFW,CAAC,YAAiC;AAC1E,4BAAgB,IAAI,YAAY,CAAC,gBAAgB,EAAE;AACnD,gCAAkB,OAAO,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,WAAW,CAAC,CAAC;AAC3G,6BAAiB;AACjB,4BACgB,IAAI,YAAY,CAAC,WAAW,KAAK,SAAS,IAAI,YAAY,CAAC,WAAW,KAAK,EAAE,EAAE;AAC/F,gCAAkB,OAAO,IAAI,CAAC;AAC9B,6BAAiB;AACjB;AAC4C,kCAAtB,UAAU,GAAG,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,KAAK,CAAC;AAChE,4BAAgB,IAAI,UAAU,KAAK,SAAS,EAAE;AAC9C,gCAAkB,OAAO,IAAI,CAAC;AAC9B,6BAAiB;AACjB,4BACgB,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;AAC7D,gCAAkB,OAAO,YAAY,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAChH,6BAAiB;AACjB;AAC4C,kCAAtB,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE;AAC9D;AAA6C,kCAAvB,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE;AAClF,4BAAgB,OAAO,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACnD,yBAAe,EAAC,CAAC;AACjB,qBAAa,EAAC,CAAC;AACf,oBAAY,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;AACtC,iBAAW;AACX;AACgC,sBAAhB,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;AAAM;AACjD;AAA+B;AAAoB,gBADP,CAAC,MAA2B;AAC/E,oBAAY,OAAO,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,KAAK,EAAE,CAAC;AAC9D,iBAAW,EAAC;AACZ,gBACU,IAAI,WAAW,CAAC,MAAM,EAAE;AAClC;AAAqC,wBAArB,kBAAkB,GAAG,WAAW;AAChD,oBAAY,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AACxC,wBAAc,kBAAkB,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI;AAAM;AACjC;AAChB;AAGM;AAA4B,wBALU,CAAC,CAAC,EAAE,CAAC;AAClE,4BAAgB,OAAO,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;AACvD,yBAAe,EAAC,CAAC;AACjB,qBAAa;AACb;AACoC,0BAAlB,WAAW,GAAG,kBAAkB,CAAC,MAAM;AAAM;AAA8C;AAEzG;AAAmC;AACjC,oBAHoD,CAAC,WAAgB,EAAE,MAA2B;AACxG,wBAAgB,IAAI,WAAW,EAAE;AACjC,4BAAkB,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACxD,4BAAkB,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC5D,yBAAiB;AACjB,wBACgB,OAAO,WAAW,CAAC;AACnC,qBAAe,GACD;AACd,wBAAgB,MAAM,EAAE,EAAE;AAC1B,wBAAgB,MAAM,EAAE,EAAE;AAC1B,qBAAe,CACF;AACb,oBACY,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;AAC7E,iBAAW;AACX,aAAS;AACT,YACQ,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AACzC;AAAiC,sBAAjB,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;AAC9E,gBACU,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;AAC1C,oBAAY,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACzD,iBAAW;AAAC,qBAAK;AACjB,oBAAY,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACjE,iBAAW;AACX,aAAS;AACT,YACQ,OAAO,EAAE,CAAC;AAClB,gBAAU,KAAK,EAAE,MAAM;AACvB,gBAAU,KAAK,EAAE,SAAS;AAC1B,aAAS,CAAC,CAAC;AACX,SAAO,EAAC,CACH,CAAC;AACN,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,oBAAoB,CAAC,YAAsC;AAAI,QACpE,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAC7B,SAAS;AAAM;AACN;AACb;AAAY,QAFE,CAAC,KAAU;AAC3B;AAA6B,kBAAf,aAAa,GAAG,KAAK;AACnC,iBAAW,MAAM;AAAM;AAA8B;AAA+B;AACvE;AAA2B;AAClC,YAFY,CAAC,GAA4B,EAAE,IAAO,EAAE,KAAa;AAAO,gBAClE,IAAI,YAAY,CAAC,iBAAiB,EAAE;AAChD,oBAAc,OAAO,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7E,iBAAa;AACb;AACgC,sBAAd,WAAW,GAAG,YAAY,CAAC,WAAW,IAAI,YAAY,CAAC,KAAK;AAC9E;AAAiC,sBAAf,WAAW,GAAG,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC;AACtD,gBAAY,GAAG,CAAC,IAAI,CAAC;AACrB,oBAAc,GAAG,EAAE,WAAW;AAC9B,oBAAc,KAAK,EAAE,WAAW;AAChC,iBAAa,CAAC,CAAC;AACf,gBACY,OAAO,GAAG,CAAC;AACvB,aAAW,GAAE,EAAE,CAAC;AAChB,iBAAW,MAAM;AAAM;AAAgC;AACnC;AAA+B;AAClD;AAEC,YAJgB,CAAC,KAA4B,EAAE,KAAK,EAAE,IAAI;AAC5D,gBAAY,OAAO,IAAI,CAAC,SAAS;AAAM;AAAmC;AAG7D;AAAoB,gBAHC,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,EAAC,KAAK,KAAK,CAAC;AAC5E,aAAW,EAAC;AACZ,YACQ,OAAO,EAAE,CAAC,aAAa,CAAC,CAAC;AACjC,SAAO,EAAC,CACH,CAAC;AACN,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,OAAO;AAAK,QACjB,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACrC,YAAM,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAChD,YAAM,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;AACzC,SAAK;AACL,QACI,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;AAC5D,YAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AACrC,SAAK;AACL,KAAG;AACH;oDA7JC,UAAU;;;;0BACT;AAAC;AAAa;AAAQ;AAAiB;AAC3B;AAAQ,IAApB,kDAA2C;AAC7C;AAAQ;AAAiB;AAAgB;AAEzC,IAFE,0DAA6C;AAC/C;AACC;AAAC;AACF;AAAkC;AAI9B;AC3BJ;AAAI;AAIJ;AAuEA,MAAa,kBAAkB;AAAG;AAAQ;AAAqC;AAC/D;AAAmC;AACjB;AACV;AAAuB;AAGxB;AAEX;AAAyB;AACrC,IA+gBE,YACU,kBAAsC,EACtC,qBAAkD,EAClD,gBAAkC,EAClC,iBAA6C,EAC7C,wBAAuD,EACvD,IAAY,EACb,gBAA2C,EAC3C,qBAAqD,EACrD,MAA8B;AACtC,QATS,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC,QACvC,0BAAqB,GAArB,qBAAqB,CAA6B;AAAC,QACnD,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QACnC,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,QAC9C,6BAAwB,GAAxB,wBAAwB,CAA+B;AAAC,QACxD,SAAI,GAAJ,IAAI,CAAQ;AAAC,QACd,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAC5C,0BAAqB,GAArB,qBAAqB,CAAgC;AAAC,QACtD,WAAM,GAAN,MAAM,CAAwB;AACzC,QACI,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AAC1C,QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC;AAChE,QAAI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC;AAC9E,QAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;AACxD,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;AAC1D,QAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;AACtE,QAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;AACxE,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;AAC1D,QAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC;AAC5D,QAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;AAClD,QAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC;AAC5D,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;AACxD,KAAG;AACH;AAEa;AAAQ;AAGO;AAAwB;AAAmB;AAClE,IA1bH,IACW,UAAU,CAAC,KAAqC;AAC7D,QAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,KAAK,CAAC;AAC7C,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,oBAAoB,CAAC,KAA0C;AAC5E,QAAI,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,KAAK,CAAC;AACvD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,uBAAuB,CAAC,KAAoD;AACzF,QAAI,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,GAAG,KAAK,CAAC;AAC1D,KAAG;AACH;AAGA;AACE;AACE;AAEO;AAAmB;AAC3B,IAFD,IACW,KAAK,CAAC,KAAY;AAC/B,QAAI,IAAI,CAAC,KAAK,EAAE;AAChB,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9D,KAAG;AACH;AAEC;AACE;AAEQ;AAAmB;AAAQ,IADpC,IACW,UAAU,CAAC,MAAyB;AACjD,QAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AAChC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AACzB,IAFF,IACW,EAAE,CAAC,KAAa;AAC7B,QAAI,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACpE,YAAM,MAAM,KAAK,CAAC,yMAAyM,CAAC,CAAC;AAC7N,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,KAAK,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,iBAAiB,CAAC,KAAc;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,KAAK,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,WAAW,CAAC,KAA2B;AACpD,QAAI,IAAI,CAAC,qBAAqB,CAAC,WAAW,GAAG,KAAK,CAAC;AACnD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,mBAAmB,CAAC,KAAc;AAC/C,QAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,UAAU,CAAC,KAAc;AACtC,QAAI,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAC5B,IAFC,IACW,KAAK,CAAC,KAAa;AAChC,QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AAC9B,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,KAAK,CAAC,KAAsB;AACzC,QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AAC9B,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,gBAAgB,CAAC,KAAsB;AACpD,QAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,eAAe,CAAC,KAAsB;AACnD,QAAI,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,aAAa,CAAC,KAAsB;AACjD,QAAI,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,QAAQ,CAAC,KAAc;AACpC,QAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AACjC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,YAAY,CAAC,KAAc;AACxC,QAAI,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,qBAAqB,CAAC,KAAa;AAChD,QAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB,GAAG,KAAK,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,eAAe,CAAC,KAAc;AAC3C,QAAI,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,gBAAgB,CAAC,KAAa;AAC3C,QAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,aAAa,CAAC,KAAc;AACzC,QAAI,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,UAAU,CAAC,KAA0B;AAClD,QAAI,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,qBAAqB,CAAC,KAAc;AACjD,QAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB,GAAG,KAAK,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,wBAAwB,CAAC,KAAc;AACpD,QAAI,IAAI,CAAC,MAAM,CAAC,wBAAwB,GAAG,KAAK,CAAC;AACjD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,kBAAkB,CAAC,KAAc;AAC9C,QAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,cAAc,CAAC,KAAc;AAC1C,QAAI,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,gBAAgB,CAAC,KAAc;AAC5C,QAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,gBAAgB,CAAC,KAAc;AAC5C,QAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,SAAS,CAAC,KAAc;AACrC,QAAI,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AAClC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,kBAAkB,CAAC,KAAc;AAC9C,QAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,aAAa,CAAC,KAAa;AACxC,QAAI,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAC/B,IAFE,IACW,WAAW,CAAC,KAAU;AACnC,QAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;AAC9C,QAAI,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AACzF,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,YAAY,CAAC,KAAY;AACtC,QAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,KAAK,IAAI,EAAE,CAAC;AACrD,QAAI,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAC1F,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,kBAAkB,CAAC,KAAa;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,cAAc,CAAC,KAAc;AAC1C,QAAI,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,iBAAiB,CAAC,KAAc;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,KAAK,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,kBAAkB,CAAC,KAAc;AAC9C,QAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,mBAAmB,CAAC,KAAa;AAC9C,QAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,mBAAmB,CAAC,KAAsB;AACvD,QAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,gBAAgB,CAAC,KAAsB;AACpD,QAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,oBAAoB,CAAC,KAAsB;AACxD,QAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,KAAK,CAAC;AAC7C,KAAG;AACH;AAEC;AACE;AAEM;AAAmB;AAAQ,IADlC,IACW,YAAY,CAAC,IAA2B;AACrD,QAAI,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;AACpC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,2BAA2B,CAAC,KAAc;AACvD,QAAI,IAAI,CAAC,MAAM,CAAC,2BAA2B,GAAG,KAAK,CAAC;AACpD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAC7B,IAFE,IACW,MAAM,CAAC,KAAa;AACjC,QAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAC/B,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACzE,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAC5B,IAFC,IACW,KAAK,CAAC,KAAa;AAChC,QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AAC9B,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACzE,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAC3B,IAFF,IACW,IAAI,CAAC,KAAa;AAC/B,QAAI,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,IAAI;AAAK,QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClE,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,aAAa;AAAK,QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,CAAC,CAAC;AAChF,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,SAAS;AAAK,QACvB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC/E,eAAS,IAAI,CAAC,MAAM,CAAC,kBAAkB,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;AAC7E,KAAG;AACH;AACO;AACyB;AAAgB;AACF;AAC7C;AAAQ,IA2BC,eAAe,CAAC,WAAsC;AAAI,QAChE,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;AACxD,QAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACxC,QACI,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;AAC3C,YAAM,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClE,YAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;AAChD,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;AAC9C,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AAAgB;AACM;AAEA;AAAQ,IAAvB,gBAAgB,CAAC,IAAS;AAAI;AACxB,cAAN,EAAE,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AACnD,QAAI,IAAI,EAAE,KAAK,SAAS,EAAE;AAC1B,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE,SAAK;AACL,QACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,KAAK,EAAE,CAAC;AACpD,KAAG;AACH;AAEC;AACE;AAAgB;AAEA;AAAmB;AACpC,IADQ,WAAW,CAAC,KAAY;AAAI;AACnB,cAAT,WAAW,GAAG,KAAK,CAAC,GAAG;AAAM;AACvC;AACI;AAAuB;AAAY,QAFL,CAAC,IAAS,EAAE,KAAa;AAC3D;AACK,gBADK,YAAY;AACtB,YAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AAC5D,gBAAQ,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;AACtD,aAAO;AAAC,iBAAK;AACb,gBAAQ,YAAY,GAAG,KAAK,GAAG,CAAC,CAAC;AACjC,aAAO;AACP,YACM,OAAO;AACb,gBAAQ,UAAU,EAAE,KAAK;AACzB,gBAAQ,QAAQ,EAAE,KAAK;AACvB,gBAAQ,QAAQ,EAAE,KAAK;AACvB,gBAAQ,KAAK,EAAE,EAAE;AACjB,gBAAQ,QAAQ,EAAE,EAAE;AACpB,gBAAQ,OAAO,EAAE,EAAE;AACnB,gBAAQ,KAAK,EAAE,YAAY;AAC3B,gBAAQ,IAAI;AACZ,gBAAQ,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;AAC7C,aAAO,CAAC;AACR,SAAK,EAAC;AACN,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAClC,YAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,CAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAE,CAAC;AAC7F,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,WAAW,CAAC;AACnD,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc;AAC1C,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;AACnD,oBAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK;AAAM;AACrC;AAEZ;AAEiB,oBAL2B,CAAC,OAA0B;AACxE,wBAAU,OAAO,OAAO,CAAC,QAAQ,CAAC;AAClC,qBAAS,EAAC,CAAC;AACX,SAAK;AACL,QACI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AACnC;AAA6B,kBAAjB,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM;AAC1F,YAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC;AACxD,gBAAQ,MAAM,EAAE,kBAAkB;AAClC,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAC/B,IADS,kBAAkB;AAAK;AAEjC,cADU,IAAI,GAAG;AACjB,YAAM,KAAK,EAAE,EAAE;AACf,YAAM,KAAK,EAAE,CAAC;AACd,SAAK;AACL,QACI,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe;AAC7E,aAAO,IAAI,CACH,YAAY,CAAC,EAAE,CAAC,EAChB,SAAS;AAAM;AAAgC;AACvD;AAAY,QADM,CAAC,SAAwB,KAAK,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,EACpE,UAAU;AAAM;AACJ;AACf,QAFc;AACnB,YAAU,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAC1B,SAAS,EAAC,CACH;AACP,aAAO,SAAS;AACZ;AAAkC;AAC/B;AAAY,QADX,CAAC,WAAsC;AAC/C,YAAU,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AAC5C,SAAS;AACH;AACO;AAAY,QADjB;AACR,YAAU,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACrC,SAAS,EACF,CAAC;AACR,KAAG;AACH;AAEC;AACE;AAAgB;AACM;AAEA;AAAQ,IAAvB,WAAW,CAAC,SAAwB;AAAI,QAC9C,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC;AAC7C,QAAI,IAAI,SAAS,KAAK,aAAa,CAAC,WAAW,EAAE;AACjD,YAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjC,YAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC9B,YAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC;AAC/C,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7B,SAAK;AACL;AACwB,cAAd,MAAM,GAA2B;AAC3C,YAAM,QAAQ,EAAE,SAAS,KAAK,aAAa,CAAC,WAAW,IAAI,SAAS,KAAK,aAAa,CAAC,WAAW;AAClG,SAAK;AACL,QACI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO;AAClC,iBAAS,MAAM;AAAM;AACK;AAA2B;AAElD,YAHa,MAAM;AACtB,gBAAU,OAAO,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,UAAU,CAAC;AACtD,aAAS,EAAC;AACV,iBAAS,MAAM;AAAM;AAA8B;AAAiC;AAC1D;AAAgB,YAD1B,CAAC,GAA2B,EAAE,MAAgC;AAC9E,gBAAU,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,WAAW,EAAE;AACtD,oBAAY,GAAG,CAAC,IAAI,CAAC;AACrB,wBAAc,KAAK,EAAE,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,WAAW;AAC3D,wBAAc,MAAM;AACpB,qBAAa,CAAC,CAAC;AACf,iBAAW;AAAC,qBAAK;AACjB,oBAAY,GAAG,CAAC,IAAI,CAAC;AACrB,wBAAc,KAAK,EAAE,MAAM,CAAC,KAAK;AACjC,wBAAc,MAAM;AACpB,qBAAa,CAAC,CAAC;AACf,iBAAW;AACX,gBACU,OAAO,GAAG,CAAC;AACrB,aAAS,GAAE,EAAE,CAAC;AACd,iBAAS,GAAG;AAAM;AAChB;AACK;AAAgB,YAFV,CAAC,WAAiC;AAC/C;AACW,oBADG,MAAM;AACpB,gBAAU,IAAI,WAAW,CAAC,MAAM,CAAC,kBAAkB,EAAE;AACrD,oBAAY,IAAI,WAAW,CAAC,MAAM,CAAC,wBAAwB,KAAK,OAAO,EAAE;AACzE,wBAAc,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG;AAAM;AAEtF;AAAuC;AAA4B,wBAFc,WAAW,IAAI,WAAW,CAAC,GAAG,EAAC,CAAC;AAClH,qBAAa;AAAC,yBAAK;AACnB,wBAAc,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;AAClF,qBAAa;AACb,iBAAW;AAAC,qBAAK;AACjB,oBAAY,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;AAC/C,iBAAW;AACX,gBACU,OAAO;AACjB,oBAAY,KAAK,EAAE,WAAW,CAAC,KAAK;AACpC,oBAAY,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ;AACjD,oBAAY,SAAS,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS;AACnD,oBAAY,YAAY,EAAE,WAAW,CAAC,MAAM,CAAC,YAAY,KAAK,WAAW,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;AACnG,oBAAY,UAAU,EAAE,WAAW,CAAC,MAAM,CAAC,UAAU;AACrD,oBAAY,WAAW,EAAE,MAAM;AAC/B,oBAAY,gBAAgB,EAAE,WAAW,CAAC,MAAM,CAAC,gBAAgB;AACjE,iBAAW,CAAC;AACZ,aAAS,EAAC,CAAC;AACX,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAC1D,YAAM,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACzC,YAAM,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACvC,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;AACvC,YAAM,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AAC5E,SAAK;AACL,QACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACpD,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAC/B,IADS,kBAAkB;AAAK,QAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;AACvC;AAA6B,kBAAjB,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC;AAC1F,YAAM,IAAI,cAAc,EAAE;AAC1B,gBAAQ,IAAI,CAAC,OAAO,CAAC,OAAO;AAAM;AACJ;AAC7B;AAAoB,gBAFQ,MAAM;AACnC;AAAqC,0BAArB,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI;AAAM;AACtB;AAG3B;AACC,oBAL2C,GAAG;AACtD,wBAAY,OAAO,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC;AAC9C,qBAAW,EAAC;AACZ,oBACU,IAAI,KAAK,EAAE;AACrB,wBAAY,IAAI,MAAM,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,EAAE;AACvD,4BAAc,IAAI,MAAM,CAAC,kBAAkB,EAAE;AAC7C,gCAAgB,IAAI,KAAK,CAAC,WAAW,EAAE;AACvC,oCAAkB,IAAI,MAAM,CAAC,wBAAwB,KAAK,OAAO,EAAE;AACnE,wCAAoB,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG;AAAM;AAE1C;AACa;AAExB,wCALgD,CAAC,WAAW;AACtE,4CAAsB,OAAO;AAC7B,gDAAwB,GAAG,EAAE,WAAW;AACxC,gDAAwB,KAAK,EAAE,WAAW;AAC1C,6CAAuB,CAAC;AACxB,yCAAqB,EAAC,CAAC;AACvB,qCAAmB;AAAC,yCAAK;AACzB,wCAAoB,MAAM,CAAC,MAAM,GAAG;AACpC,4CAAsB,GAAG,EAAE,KAAK,CAAC,WAAW;AAC5C,4CAAsB,KAAK,EAAE,KAAK,CAAC,WAAW;AAC9C,yCAAqB,CAAC;AACtB,qCAAmB;AACnB,iCAAiB;AACjB,6BAAe;AAAC,iCAAK;AACrB,gCAAgB,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;AAClD,6BAAe;AACf,yBAAa;AACb,wBACY,IAAI,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAE;AACnD,4BAAc,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;AACjD,yBAAa;AACb,qBAAW;AACX,iBAAS,EAAC,CAAC;AACX,gBACQ,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;AACjD,gBAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;AACnD,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,kBAAkB;AAAK,QAC5B,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;AACtF,QACI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;AAC3C,YAAM,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC;AACtE,SAAK;AACL,QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AAC/B,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC3E,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/D,QAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAClC,YAAM,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,SAAS;AAAM;AACrG;AAA2B;AACjB,YAFsF,CAAC,GAAyB;AAC5H;AACA,sBADc,aAAa,GAAG,CAAC;AAC/B;AAEC,sBAFa,WAAW,GAAG,CAAC;AAC7B,gBACQ,IACE,GAAG,CAAC,UAAU;AACxB,uBAAa,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,IAAI,GAAG,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW;AACzI,uBAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS;AACvF,uBAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EACrC;AACV,oBAAU,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC;AACnD,oBAAU,IAAI,CAAC,IAAI,CAAC,GAAG;AAAM;AACG;AAAwB,oBADhC;AACxB,wBAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACjE,qBAAW,EAAC,CAAC;AACb,iBAAS;AACT,aAAO,EAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAC7B,IADO,gBAAgB;AAAK,QAC3B,IAAI,CAAC,OAAO,CAAC,OAAO;AAAM;AAA6B;AAC1C;AAAY,QADJ,CAAC,MAAgC;AAC1D,YAAM,MAAM,CAAC,cAAc,EAAE,CAAC;AAC9B,YAAM,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC;AAChC,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAChC,IADU,mBAAmB;AAAK,QAC9B,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,SAAS,CAAC;AAClD,QAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,EAAE,CAAC;AAC5C,QAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,KAAK,CAAC;AACjD,KAAG;AACH;AAEC;AACE;AAEC;AAAmB;AAAQ,IAAtB,SAAS,CAAC,YAA2B,aAAa,CAAC,WAAW;AAAI,QACvE,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3D,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,cAAc,CAAC,MAAuB;AAAI,QAC/C,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACxD,QACI,IAAI,CAAC,UAAU;AAAQ;AAA6B;AAAuB;AAAY,QAArE,CAAC,MAA8B;AAAO,YACtD,IAAI,MAAM,CAAC,QAAQ,EAAE;AAC3B,gBAAQ,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC5D,aAAO;AACP,YACM,OAAO,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACzD,SAAK,CAAA,CAAC;AACN,QACI,IAAI,CAAC,oBAAoB;AAAQ;AAA6B;AAAuB;AAAY,QAArE,CAAC,MAAgC;AAAO,YAClE,OAAO,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACxE,SAAK,CAAA,CAAC;AACN,KAAG;AACH;AAEC;AACE;AACkB;AACrB;AAAQ,IADC,UAAU,CAAC,KAAU;AAAI,QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAChC,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,gBAAgB,CAAC,cAAoC;AAAI,QAC9D,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS;AAAM;AAC5F;AAAuB;AACvB,QAFuF,CAAC,WAAwB;AACvH,YAAM,cAAc,CAAC,WAAW,CAAC,CAAC;AAClC,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,iBAAiB,CAAC,EAAO,KAAU;AAC5C;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,UAAU;AAAK,QACxB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;AACjE,KAAG;AACH;AACO;AAAmB;AACpB,IADG,QAAQ;AAAK,QAClB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE;AACnC,YAAM,MAAM,KAAK,CAAC,kDAAkD,CAAC,CAAC;AACtE,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAClC,YAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACzC,gBAAQ,MAAM,KAAK,CAAC,sEAAsE,CAAC,CAAC;AAC5F,aAAO;AACP,YACM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AAChC,gBAAQ,MAAM,KAAK,CAAC,yEAAyE,CAAC,CAAC;AAC/F,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,2BAA2B,EAAE;AAC1C,YAAM,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;AACrD,SAAK;AACL,QACI,IAAI,IAAI,CAAC,2BAA2B,EAAE;AAC1C,YAAM,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;AACrD,SAAK;AACL,QACI,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACzC,YAAM,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;AACpD,SAAK;AACL,QACI,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;AAC5C,KAAG;AACH;8CAr8BC,SAAS,SAAC,kBACT,QAAQ,EAAE,eAAe,kBACzB;;;;;;;;;;;;;;;;;;;ibAA0C,kBAC1C,SAAS,EAAE,sBACT,sBAAsB,sBACtB,0BAA0B,sBAC1B,2BAA2B,sBAC3B,yBAAyB,sBACzB,8BAA8B,sBAC9B,wBAAwB,sBACxB,0BACE,OAAO,EAAE,iBAAiB,0BAC1B,WAAW,EAAE,UAAU,iGAAC,MAAM,kBAAkB,EAAC,0BACjD,KAAK,EAAE,IAAI,sBACZ,kBACF,cACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0XACG;AAAC;AAAmB;AAA4C,YA7B3D,kBAAkB;AAAI,YAItB,2BAA2B;AAAI,YAJX,gBAAgB;AAAI,YAExC,0BAA0B;AAAI,YAK9B,wBAAwB;AAAI,YAtCnC,MAAM;AACL,YAiCM,yBAAyB;AAAI,YAG7B,8BAA8B;AAAI,YADlC,sBAAsB;AAAG;AAAG;AAAsC,sBAgCxE,eAAe,SAAC,wBAAwB;AACtC,gCAKF,YAAY,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACnD,gCAKF,YAAY,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACnD,qCAKF,YAAY,SAAC,2BAA2B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACxD,8CAKF,YAAY,SAAC,oCAAoC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACjE,+BAKF,SAAS,SAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAC5C,mBAQF,MAAM;AACP,8BAMC,MAAM;AACP,uBAMC,MAAM;AACP,6BAMC,MAAM;AACP,0BAMC,MAAM;AACP,iCAMC,MAAM;AACP,wBAMC,MAAM;AACP,wBAMC,MAAM;AACP,sBAMC,MAAM;AACP,yBAMC,MAAM;AACP,uBAMC,MAAM;AACP,yBAOC,KAAK;AACN,mCAQC,KAAK;AACN,sCAOC,KAAK;AACN,oBASC,KAAK;AACN,yBAWC,KAAK;AACN,iBAOC,KAAK;AACN,gCAWC,KAAK;AACN,0BAOC,KAAK;AACN,kCAOC,KAAK;AACN,yBAOC,KAAK;AACN,oBAOC,KAAK;AACN,oBAOC,KAAK;AACN,+BAOC,KAAK;AACN,8BAOC,KAAK;AACN,4BAQC,KAAK;AACN,uBAQC,KAAK;AACN,2BAQC,KAAK;AACN,oCAOC,KAAK;AACN,8BAOC,KAAK;AACN,+BAOC,KAAK;AACN,4BAOC,KAAK;AACN,yBAOC,KAAK;AACN,oCAQC,KAAK;AACN,uCAQC,KAAK;AACN,iCAOC,KAAK;AACN,6BAOC,KAAK;AACN,+BAOC,KAAK;AACN,+BAOC,KAAK;AACN,wBAOC,KAAK;AACN,iCAOC,KAAK;AACN,4BAQC,KAAK;AACN,0BAQC,KAAK;AACN,2BASC,KAAK;AACN,iCAQC,KAAK;AACN,6BAOC,KAAK;AACN,gCAOC,KAAK;AACN,iCAOC,KAAK;AACN,kCAOC,KAAK;AACN,kCAOC,KAAK;AACN,+BAOC,KAAK;AACN,mCAOC,KAAK;AACN,2BAOC,KAAK;AACN,0CAOC,KAAK;AACN,qBAOC,KAAK;AACN,oBAQC,KAAK;AACN,mBASC,KAAK;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAClB;AAAgB;AAAQ,IA9f7B,yDAAkD;AACpD;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,yDAAkD;AACpD;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,wDAAiD;AACnD;AAEC;AACE;AACW;AAAQ,IAApB,qCACoD;AACtD;AAEC;AACE;AACW;AAAQ,IAApB,+CAC2C;AAC7C;AAEC;AACE;AACW;AAAQ,IAApB,+CAC2C;AAC7C;AAEC;AACE;AACW;AAAQ,IAApB,oDACgD;AAClD;AAEC;AACE;AACW;AAAQ,IAApB,6DACyD;AAC3D;AAEC;AACE;AACW;AAAQ,IAApB,8CACoD;AACtD;AACO;AAGiB;AACI;AAC3B;AACE,IAAD,kCAC8C;AAChD;AAEC;AACE;AACE;AAED;AAAQ,IADV,6CACkD;AACpD;AAEC;AACE;AACE;AAED;AAAQ,IADV,sCAC+D;AACjE;AAEC;AACE;AACE;AAED;AAAQ,IADV,4CACwE;AAC1E;AAEC;AACE;AACE;AAED;AAAQ,IADV,yCACgE;AAClE;AAEC;AACE;AACE;AAED;AAAQ,IADV,gDACiD;AACnD;AAEC;AACE;AACE;AAED;AAAQ,IADV,uCACiE;AACnE;AAEC;AACE;AACE;AAED;AAAQ,IADV,uCACqC;AACvC;AAEC;AACE;AACE;AAED;AAAQ,IADV,qCACgD;AAClD;AAEC;AACE;AACE;AAED;AAAQ,IADV,wCAC0D;AAC5D;AAEC;AACE;AACE;AAED;AAAQ,IADV,sCAC+D;AACjE;AACO;AAEF;AACU;AAAQ,IA8ZnB,gDAA8C;AAAC;AAC5C;AAAiB;AAAgB;AAAQ,IAA5C,mDAA0D;AAAC;AACxD;AAAiB;AAAgB;AACxC,IADI,8CAA0C;AAAC;AACxC;AAAiB;AAAgB;AAAQ,IAA5C,+CAAqD;AAAC;AACnD;AAAiB;AAAgB;AAAQ,IAA5C,sDAA+D;AAAC;AAC7D;AAAiB;AACV;AAAQ,IADlB,kCAAoB;AAAC;AACL,IAAhB,8CAAkD;AAAC;AACnC,IAAhB,mDAA4D;AAAC;AAC7C,IAAhB,oCAAqC;AACzC;AAAE;AAAC;AACF;AAAkC;AAGQ;ACjnB3C;AAAI;AAEuC;AAmB3C,MAAa,sBAAsB;AACnC;AAAQ;AACc;AAEZ;AACyB;AAAQ,IAKzC,YACS,MAA8B,EAC9B,gBAA2C,EAC1C,iBAA6C;AACtD,QAHQ,WAAM,GAAN,MAAM,CAAwB;AAAC,QAC/B,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,QAC3C,sBAAiB,GAAjB,iBAAiB,CAA4B;AACzD,KAAM;AACN;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,cAAc,CAAC,KAAa,EAAE,OAA0B;AAAI,QACjE,OAAO,OAAO,CAAC,KAAK,CAAC;AACzB,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,QAAQ,CAAC,GAAsB;AAAI,QACxC,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,SAAS,CAAC,GAAsB;AAAI,QACzC,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,kBAAkB,CAAC,KAAa;AAAI,QACzC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3E,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,mBAAmB,CAAC,KAAa;AAAI,QAC1C,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3E,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,WAAW,CAAC,MAAa,EAAE,OAA0B;AAAI,QAC9D,OAAO,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;AACzC,QACI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE;AAClD,YAAM,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAChC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,SAAS,CAAC,OAAO;AAAI,QAC1B,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvD,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,UAAU,CAAC,MAAgC,EAAE,GAAsB;AAAI,QAC5E,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC;AAC/C,YAAM,MAAM;AACZ,YAAM,GAAG;AACT,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACM;AACM;AAEA;AAAmB;AAAQ,IAAjC,WAAW,CAAC,MAAgC,EAAE,GAAsB,EAAE,KAAiB;AAAI,QAChG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AACxE,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,oBAAoB,CAAC,GAAsB;AAAI,QACpD,OAAO,KAAK,CAAC,IAAI,CAAC;AACtB,YAAM,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,GAAG,CAAC;AAChE,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAT,IAAW,gBAAgB;AAAK;AACjB,YAAT,KAAK,GAAG,CAAC;AACjB,QAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC;AACjD,QAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,2BAA2B,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7D,QAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;AAChD,QAAI,IAAI,CAAC,OAAO,CAAC,OAAO;AAAM;AACR;AAChB;AAEG,QAJgB,MAAM;AAC/B,YAAM,KAAK,IAAI,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,SAAK,EAAC,CAAC;AACP,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,gBAAgB,CAAC,GAAsB,EAAE,KAAY;AAAI;AACe,QAC7E,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;AAC7C;AAA6B,kBAAjB,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AACzD;AAA6B,kBAAjB,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW;AACjE,YACM,IAAI,iBAAiB,KAAK,EAAE,EAAE;AACpC,gBAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B,gBAAQ,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5B,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,iBAAiB,CAAC,GAAsB;AAAI;AAClC,cAAT,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AACvD,QACI,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU;AAClC,YAAM,KAAK,OAAO,EAAE;AACpB;AAAiC,sBAAnB,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;AACpE,gBAAQ,IAAI,GAAG,CAAC,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE;AACvC,oBAAU,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtD,iBAAS;AAAC,qBAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AAChD,oBAAU,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC9D,iBAAS;AACT;AACgC,sBAAlB,2BAA2B,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc;AAChF,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK;AAAM;AAChF;AACJ;AAEO,gBAJwE,CAAC,OAA0B;AAC/G,oBAAU,OAAO,OAAO,CAAC,QAAQ,CAAC;AAClC,iBAAS,EAAC,CAAC;AACX,gBACQ,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAC9F,gBACQ,IAAI,2BAA2B,KAAK,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;AAClF,oBAAU,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AACrG,iBAAS;AACT,gBAAQ,MAAM;AACd,aAAO;AACP,YAAM,KAAK,eAAe,EAAE;AAC5B,gBAAQ,IAAI,GAAG,CAAC,QAAQ,EAAE;AAC1B,oBAAU,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;AACjD;AAES,oBAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO;AAAM;AACzC;AACA;AAAwB,oBAFY,CAAC,OAA0B;AAC5E,wBAAY,IAAI,OAAO,KAAK,GAAG,EAAE;AACjC,4BAAc,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;AACvC,yBAAa;AACb,qBAAW,EAAC,CAAC;AACb,iBAAS;AAAC,qBAAK;AACf,oBAAU,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,SAAS,CAAC;AACxD,iBAAS;AACT,gBACQ,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AAC7F,gBAAQ,MAAM;AACd,aAAO;AACP,YAAM,KAAK,QAAQ,EAAE;AACrB;AAAiC,sBAAnB,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW;AACnE,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;AAC/C,gBAAQ,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5B;AAEO,gBAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO;AAAM;AAC3C;AACF;AAAoB,gBAFoB,CAAC,OAA0B;AAC1E,oBAAU,IAAI,OAAO,KAAK,GAAG,EAAE;AAC/B,wBAAY,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;AACrC,qBAAW;AACX,iBAAS,EAAC,CAAC;AACX,gBACQ,IAAI,iBAAiB,KAAK,EAAE,EAAE;AACtC,oBAAU,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AAC/F,iBAAS;AACT,gBAAQ,MAAM;AACd,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,UAAU,CAAC,GAAsB,EAAE,KAAiB;AAAI,QAC7D,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,KAAK,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE;AACtG;AAA6B,kBAAjB,MAAM,sBAAG,KAAK,CAAC,MAAM,EAAe;AAChD,YAAM,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;AAC5F,gBAAQ,OAAO;AACf,aAAO;AACP,YACM,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACrE,gBAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;AACrC,gBAAQ,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACpC,aAAO;AACP,YACM,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACxC,gBAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;AACrC,aAAO;AACP,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAC/D,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,gBAAgB,CAAC,GAAsB,EAAE,KAAiB;AAAI,QACnE,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AACrE,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAT,IAAW,iBAAiB;AAAK,QAC/B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY;AACpC,eAAS,IAAI,CAAC,MAAM,CAAC,kBAAkB;AACvC,eAAS,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM;AAC9C,eAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,aAAa,CAAC,GAAsB,EAAE,MAAgC;AAC/E,QAAI,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAT,IAAW,qBAAqB;AAAK,QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;AAC1E,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,oBAAoB,CAAC,GAAsB;AAAI,QACpD,OAAO,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;AAC3C,KAAG;AACH;kDAjSC,SAAS,SAAC,kBACT,QAAQ,EAAE,iBAAiB,8DAE3B,QAAQ,EAAE,mBAAmB,kBAC7B;;;;;;;;uQAEE;AAAC;AAAmB;AAED,YAjBd,sBAAsB;AAAI,YAC1B,yBAAyB;AAAI,YAC7B,0BAA0B;AAAG;AAAG;AAA0C,sBAchF,KAAK;AACN,gCAEC,KAAK;AACN,8CAEC,KAAK;AACP;;;;;;;k6BAVgD,cAChD;;;;;;;;oBASE;AAAC;AAAa;AAAqB,IAPpC,yCAC2C;AAC7C;AAES,IADP,mDAC2C;AAC7C;AAES,IADP,iEACyD;AAC3D;AAEK,IAAD,wCAAqC;AAAC;AACtB,IAAhB,kDAAkD;AAAC;AAChD;AAAiB;AAAgB;AAAQ,IAA5C,mDAAqD;AACzD;AAAE;AAAC;AACH;AAE2B;AAIT;AC1ClB;AAAI;AAEoB;AAYxB,MAAa,4BAA4B;AACzC;AAAQ;AACc;AAEX;AAAQ,IAAjB,YAAmB,MAA8B,EAAS,iBAA6C;AAAI,QAAxF,WAAM,GAAN,MAAM,CAAwB;AAAC,QAAQ,sBAAiB,GAAjB,iBAAiB,CAA4B;AAAC,KAAG;AAC7G;AAEC;AACE;AACa;AAAQ,IAAf,YAAY;AAAK,QACtB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAC3E,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAT,IAAW,yBAAyB;AAAK,QACvC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACjF,KAAG;AACH;wDAxBC,SAAS,SAAC,kBACT,QAAQ,EAAE,4BAA4B,kBACtC;8bAAuD,cACxD;;;;;;;iFACG;AAAC;AAAmB;AAED,YAZd,sBAAsB;AAAI,YAC1B,0BAA0B;AAAG;AAAG;AAEvC,gCAQC,KAAK;AACP;;;;;;;;;oBAAE;AAAC;AAAa;AAAqB,IADpC,yDAC2C;AAC7C;AACoB,IAAN,8CAAqC;AAAC;AAAqB,IAApB,yDAAoD;AAAC;AAAE;AAAC;AAE3G;AAC4B;AAI7B;ACzBD;AAAI;AAEoC;AAWxC,MAAa,sBAAsB;AACnC;AAAQ;AACmC;AAIjC;AAAQ,IAEhB,IAAW,gBAAgB;AAAK,QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;AAAM;AAA6B;AAAuB;AAGjF,QAHwB,CAAC,MAAgC,KAAK,MAAM,CAAC,UAAU,EAAC,CAAC;AACtF,KAAG;AACH;kDAjBC,SAAS,SAAC,kBACT,QAAQ,EAAE,iBAAiB;qDAE3B,QAAQ,EAAE,mBAAmB,kBAC7B,oKAA+C,cAChD;;;;;;;mIACG;AAAC;AACI,sBAAN,KAAK;AACP;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAqB,IADpC,yCAC2C;AAC7C;AACC;AAAC;AACF;AAAkC;AAIlC;ACtBA;AAAI;AAEoB;AAUxB,MAAa,gCAAgC;AAC7C;AAAQ;AACc;AAEjB;AACH,IAKA,YAAmB,MAA8B,EAAS,gBAA2C;AAAI,QAAtF,WAAM,GAAN,MAAM,CAAwB;AAAC,QAAQ,qBAAgB,GAAhB,gBAAgB,CAA2B;AAAC,KAAG;AAC3G;4DAfC,SAAS,SAAC,kBACT,QAAQ,EAAE,+BAA+B,kBACzC;2VAA0D,cAC3D;;;;;;;;;;;iFACG;AAAC;AAAmB;AAED,YAZd,sBAAsB;AAAI,YAC1B,yBAAyB;AAAG;AAAG;AAEvC,qCAQE,KAAK;AACN,wBAEC,KAAK;AACN,0BAEC,KAAK;AACP;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAEX,IATJ,kEACgD;AAClD;AAES,IADP,qDAC0B;AAC5B;AAES,IADP,uDAC4B;AAC9B;AACoB,IAAN,kDAAqC;AAAC;AAAqB,IAApB,4DAAkD;AAAC;AAAE;AAAC;AAE1G;AAAkC;AAAqH;ACxBxJ;AAAI;AAA8B;AAAoD;AActF,MAAa,uBAAuB;AAAG;AAAQ;AAAqB;AACpD;AAAQ,IAKtB,YAAoB,EAAc,EAAU,IAAY;AAAI,QAAxC,OAAE,GAAF,EAAE,CAAY;AAAC,QAAS,SAAI,GAAJ,IAAI,CAAQ;AAAC,KAAG;AAC9D;AAEC;AACE;AACa;AAAQ,IAAf,eAAe;AAAK,QACzB,IAAI,CAAC,IAAI,CAAC,iBAAiB;AAAM;AACjB;AAAY,QADA;AAChC,YAAM,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC;AAC/E,iBAAS,IAAI,CACH,GAAG;AAAM;AAEhB;AAAgB,YAFL;AACd,gBAAY,OAAO;AACnB,oBAAc,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU;AAC1D,oBAAc,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS;AACxD,oBAAc,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,YAAY;AAC9D,oBAAc,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW;AAC5D,oBAAc,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,YAAY;AAC9D,oBAAc,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW;AAC5D,iBAAa,CAAC;AACd,aAAW,EAAC,EACF,QAAQ,EAAE,EACV,GAAG;AAAM;AACnB;AAA2B;AAAgB,YAD7B,CAAC,IAA4B;AAC3C,sBAAkB,CAAE,QAAQ,EAAE,OAAO,CAAE,GAAG,IAAI;AAC9C,gBACY,yBACK,OAAO,IACV,YAAY,EAAE,QAAQ,CAAC,UAAU,KAAK,OAAO,CAAC,UAAU,EACxD,UAAU,EAAE,QAAQ,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,IACpD;AACd,aAAW,EAAC,CACH;AACT,iBAAS,SAAS;AAAM;AACtB;AAA2B;AAC3B,YAFiB,CAAC,GAAyB;AAC7C,gBAAU,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,aAAS,EAAC,CAAC;AACX,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAM,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;AACjD,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AACrC,KAAG;AACH;mDAvDC,SAAS,SAAC,kBACT,QAAQ,EAAE,oBAAoB,cAC/B;sMACI;AAAC;AAAmB;AAAiD,YAdtD,UAAU;AAAI,YAAa,MAAM;AAAG;AAAG;AAEtD,+BAeF,KAAK;AACP;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AAC1C;AACO,IALL,0DAA8C;AAChD;AAES,IADP,mDACuD;AACzD;AACO;AAAiB;AAAgB;AAAQ,IAAlC,qCAAsB;AAAC;AAAQ;AAAiB;AAGtD;AAAQ,IAHsB,uCAAoB;AAAC;AAAE;AAAC;AAE5D;AAC4B;AAIrB;AC3BT;AAAI;AAA6B;AAAkD;AAanF,MAAa,sBAAsB;AAAG;AAAQ;AAAqB;AAClE,IAKC,YAAoB,EAAc;AAAI,QAAlB,OAAE,GAAF,EAAE,CAAY;AAAC,KAAG;AACxC;AAEC;AACE;AACa;AAAQ,IAAf,eAAe;AAAK,QACzB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS;AAAM;AACpD;AAAuB;AAAY,QADY,KAAK;AAC1E,YAAM,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AAC1D,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACzC,YAAM,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;AACpD,SAAK;AACL,KAAG;AACH;kDA5BC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB,cAC9B;iMACI;AAAC;AAAmB;AAAgD,YAbtC,UAAU;AAAG;AAAG;AAE/C,8BAcD,KAAK;AACP;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AAE1C;AAAQ,IALN,4DAAiD;AACnD;AAES,IADP,iDACsD;AACxD;AACO;AAAiB;AAAgB;AAGxC,IAHc,oCAAsB;AAAC;AAAE;AAAC;AAEtC;AAC4B;AAGmB;ACzBjD;AAAI;AAA4B;AAAsD;AAStF,MAAa,qBAAqB;AAAG;AAAQ;AACzC;AACJ,IAEE,YAAoB,EAAc;AAAI,QAAlB,OAAE,GAAF,EAAE,CAAY;AAAC,QAF5B,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;AAC7C,KACwC;AACxC;AAEC;AACE;AACa;AAAQ,IAAf,eAAe;AAAK,QACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAChE,KAAG;AACH;iDAfC,SAAS,SAAC,kBACT,QAAQ,EAAE,kBAAkB,cAC7B;6LACI;AAAC;AAAmB;AACf,YAVyB,UAAU;AAAG;AAAG;AACnD,6BASG,MAAM;AACR;;;;;;;;oBAAE;AAAC;AAAa;AAAqB,IADpC,+CAC2C;AAC7C;AACO;AAAiB;AAAgB;AAGxC,IAHc,mCAAsB;AAAC;AAAE;AAAC;AAEtC;AAC4B;AAGc;ACnB5C;AAWA,MAAa,eAAe,GAAG,IAAI,cAAc,CAAkB,gBAAgB,CAAC;AACpF;AACG;AAC4H;AAC3E;AAGpD,MAAa,qBAAqB;AAAG;AAAQ;AAC9B;AAAQ,IAuCrB,YAA6C,cAA8B;AAC7E,QAD+C,mBAAc,GAAd,cAAc,CAAgB;AAAC,QAvCrE,qBAAgB,GAAyB;AAClD,YAAI,aAAa,EAAE,sBAAsB;AACzC,YAAI,iBAAiB,EAAE,QAAQ;AAC/B,YAAI,6BAA6B,EAAE,SAAS;AAC5C,YAAI,iBAAiB,EAAE,QAAQ;AAC/B,SAAG,CAAC;AACJ,QACS,kBAAa,GAAG,KAAK,CAAC;AAC/B,QAAS,mBAAc,GAAG,OAAO,CAAC;AAClC,QAAS,oBAAe,GAAG,UAAU,CAAC;AACtC,QAAS,iBAAY,GAAiB,aAAa,CAAC;AACpD,QAAS,eAAU,GAAuB,eAAe,CAAC;AAC1D,QAAS,eAAU,GAAG,KAAK,CAAC;AAC5B,QAAS,mBAAc,GAAG,IAAI,CAAC;AAC/B,QAAS,uBAAkB,GAAG,GAAG,CAAC;AAClC,QAAS,iBAAY,GAAW,SAAS,CAAC;AAC1C,QAAS,2BAAsB,GAAW,SAAS,CAAC;AACpD,QAAS,mCAA8B,GAAG,KAAK,CAAC;AAChD,QAAS,6BAAwB,GAAG,KAAK,CAAC;AAC1C,QAAS,cAAS,GAAG,GAAG,CAAC;AACzB,QAAS,eAAU,GAAG,GAAG,CAAC;AAC1B,QAAS,iBAAY,GAAG,KAAK,CAAC;AAC9B,QAAS,0BAAqB,GAAG,CAAC,CAAC;AACnC,QAAS,UAAK,GAAG,EAAE,CAAC;AACpB,QAAS,mBAAc,GAAG,IAAI,CAAC;AAC/B,QAAS,sBAAiB,GAAG,KAAK,CAAC;AACnC,QAAS,6BAAwB,GAAG,KAAK,CAAC;AAC1C,QAAS,oBAAe,GAAG,KAAK,CAAC;AACjC,QAAS,sBAAiB,GAAG,KAAK,CAAC;AACnC,QAAS,8BAAyB,GAAG,GAAG,CAAC;AACzC,QAAS,2BAAsB,GAAG,KAAK,CAAC;AACxC,QAAS,8BAAyB,GAAG,KAAK,CAAC;AAC3C,QAAS,qCAAgC,GAAG,KAAK,CAAC;AAClD,QAAS,2CAAsC,GAAG,KAAK,CAAC;AACxD,QAAS,gCAA2B,GAAG,KAAK,CAAC;AAC7C,QAAS,sBAAiB,GAAG,CAAC,CAAC;AAC/B,QAAS,uBAAkB,GAAG,GAAG,CAAC;AAClC,QAAS,0BAAqB,GAAG,SAAS,CAAC;AAC3C,QAEI,IAAI,cAAc,EAAE;AACxB,YAAM,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC1C,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAA5B,IAAW,YAAY,CAAC,KAA2B;AACrD,QAAI,IAAI,CAAC,gBAAgB,qBAAQ,IAAI,CAAC,gBAAgB,EAAK,KAAK,CAAE,CAAC;AACnE,KAAG;AACH;AAEC;AACE;AAEA;AAAQ,IAAT,IAAW,YAAY;AAAK,QAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACjC,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAQ,IAAR,cAAc,CAAC,MAAW;AAAI,QACnC,OAAO,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAC5C,KAAG;AACH;iDAvEC,UAAU;6IACT;AAAC;AAAmB;AAChB,4CAuCS,MAAM,SAAC,eAAe;AAAQ;;;;;;kCAAE;AAAC;AAAa;AAC5D,IAxCC,iDAKE;AACJ;AACoB,IAAlB,8CAA6B;AAC/B;AAAqB,IAAnB,+CAAgC;AAClC;AAAqB,IAAnB,gDAAoC;AACtC;AAAqB,IAAnB,6CAAkD;AACpD;AAAqB,IAAnB,2CAAwD;AAC1D;AAAqB,IAAnB,2CAA0B;AAC5B;AAAqB,IAAnB,+CAA6B;AAC/B;AAAqB,IAAnB,mDAAgC;AAClC;AAAqB,IAAnB,6CAAwC;AAC1C;AAAqB,IAAnB,uDAAkD;AACpD;AAAqB,IAAnB,+DAA8C;AAChD;AAAqB,IAAnB,yDAAwC;AAC1C;AAAqB,IAAnB,0CAAuB;AACzB;AAAqB,IAAnB,2CAAwB;AAC1B;AAAqB,IAAnB,6CAA4B;AAC9B;AAAqB,IAAnB,sDAAiC;AACnC;AACA,IADE,sCAAkB;AACpB;AAAqB,IAAnB,+CAA6B;AAC/B;AAAqB,IAAnB,kDAAiC;AACnC;AAAqB,IAAnB,yDAAwC;AAC1C;AAAqB,IAAnB,gDAA+B;AACjC;AAAqB,IAAnB,kDAAiC;AACnC;AAAqB,IAAnB,0DAAuC;AACzC;AAAqB,IAAnB,uDAAsC;AACxC;AAAqB,IAAnB,0DAAyC;AAC3C;AAAqB,IAAnB,iEAAgD;AAClD;AAAqB,IAAnB,uEAAsD;AACxD;AAAqB,IAAnB,4DAA2C;AAC7C;AAAqB,IAAnB,kDAA6B;AAC/B;AAAqB,IAAnB,mDAAgC;AAClC;AAAqB,IAAnB,sDAAyC;AAC3C;AACO;AAAiB;AAAgB;AAAQ,IAAlC,+CAA+D;AAAC;AAAE;AAChF;AAAI;AACQ;AAMyB;AClErC;AAAI;AAEE;AASN,MAAa,wBAAwB;AACrC,IAFA;AACE,QAEO,gBAAW,GAAG,KAAK,CAAC;AAC7B,QACS,oBAAe,GAAU,EAAE,CAAC;AACrC,QAAS,WAAM,GAAG,CAAC,CAAC;AACpB,QACS,uBAAkB,GAAG,CAAC,CAAC;AAChC,QAAS,oBAAe,GAAqB,EAAE,CAAC;AAChD,QAAS,yBAAoB,GAA0B,EAAE,CAAC;AAC1D,QAAS,eAAU,GAAG,EAAE,CAAC;AACzB,QAAS,aAAQ,GAAG,KAAK,CAAC;AAC1B,KAcC;AACD;AAAQ;AAAsC;AAA4C;AAAsC;AAAmB;AAAQ,IAJlJ,WAAW,CAAC,MAAc,EAAE,KAAa;AAAI,QAClD,OAAO,GAAG,IAAI,CAAC,EAAE,QAAQ,MAAM,IAAI,KAAK,EAAE,CAAC;AAC/C,KAAG;AACH;oDA3BC,UAAU;;;;gDACT;AAAC;AAAa;AAAqB,IACnC,sCAAkB;AACpB;AAAqB,IAAnB,+CAA2B;AAC7B;AAAqB,IAAnB,kDAA2B;AAC7B;AAAqB,IAAnB,mDAAmC;AACrC;AACA,IADE,0CAAkB;AACpB;AAAqB,IAAnB,oDAAgC;AAClC;AAAqB,IAAnB,sDAA8B;AAChC;AAAqB,IAAnB,mDAA8C;AAChD;AAAqB,IAAnB,wDAAwD;AAC1D;AAAqB,IAAnB,8CAAuB;AACzB;AAAqB,IAAnB,4CAAwB;AAC1B;AAAqB,IAAnB,sDAAgD;AAClD;AAAqB,IAAnB,0DAAgD;AAClD;AAAqB,IAAnB,qEAA2D;AAC7D;AACoB,IAAlB,8CAAiD;AACnD;AACC;AAAC;AACF;AAAkC;AAIK;AClCvC;AAAI;AAEW;AAQf,MAAa,yBAAyB;AACtC,IAFA;AACE,QACO,oBAAe,GAAG,IAAI,YAAY,EAAW,CAAC;AACvD,QAAS,oBAAe,GAAG,IAAI,YAAY,EAAQ,CAAC;AACpD,QAAS,uBAAkB,GAAG,IAAI,YAAY,EAAe,CAAC;AAC9D,QAAS,eAAU,GAAG,IAAI,YAAY,EAAqB,CAAC;AAC5D,QAAS,2BAAsB,GAAG,IAAI,aAAa,CAAQ,CAAC,CAAC,CAAC;AAC9D,KAAC;AACD;qDARC,UAAU;;;;gDACT;AAAC;AAAa;AAAqB,IACnC,oDAAqD;AACvD;AAAqB,IAAnB,oDAAkD;AACpD;AAAqB,IAAnB,uDAA4D;AAC9D;AAAqB,IAAnB,+CAA0D;AAC5D;AAAqB,IAAnB,2DAA4D;AAC9D;AACA;AAAC;AAAI;AAAkC;AAAqH;ACjB5J;AAAI;AAAwC;AAgB5C,MAAa,qBAAqB;AAAG;AAAQ;AACzC;AAAmC;AACP;AAAQ,IAEtC,YACS,MAA6B,EAC7B,gBAA0C,EACzC,iBAA4C;AACrD,QAHQ,WAAM,GAAN,MAAM,CAAuB;AAAC,QAC9B,qBAAgB,GAAhB,gBAAgB,CAA0B;AAAC,QAC1C,sBAAiB,GAAjB,iBAAiB,CAA2B;AACxD,QAPS,gBAAW,GAAG,IAAI,OAAO,EAAO,CAAC;AAC1C,KAMM;AACN;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;AAAM;AAC5E;AAAuB;AAEnC,QAHmF,CAAC,KAAU;AACjG,YAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACtC,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAM,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;AACjD,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,mBAAmB,CAAC,KAAU;AACvC;AAAyB,cAAf,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS;AAC5C;AAAyB,cAAf,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY;AAClD;AAAyB,cAAf,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY;AACzD;AACwB,cAAd,aAAa,GAAG,CAAC;AAC3B;AAAyB,cAAf,WAAW,GAAG,CAAC;AACzB,QACI,IACE,SAAS,IAAI,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,IAAI,mBAAmB,GAAG,aAAa,GAAG,WAAW;AAC7H,YAAM,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;AACvF,YAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAClC;AACN,YAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC;AAC/C,YAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACtF,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzD,SAAK;AACL,KAAG;AACH;iDAtDC,SAAS,SAAC,kBACT,QAAQ,EAAE,kBAAkB,kBAC5B;sYAA6C,cAC9C;;;;;;;;;;;;;;;wLACG;AAAC;AAAmB;AACnB,YAZI,qBAAqB;AAAI,YACzB,wBAAwB;AAAI,YAC5B,yBAAyB;AAAG;;;;;;;wJAAE;AAAC;AAAa;AAAqB,IAUxE,4CAAwC;AAC1C;AAAQ;AAAiB;AAAgB;AACzC,IADE,wDAA8C;AAChD;AAEK,IAAD,uCAAoC;AAAC;AACrB,IAAhB,iDAAiD;AAAC;AAC/C;AAAiB;AAAgB;AAAQ,IAA5C,kDAAoD;AACxD;AAAE;AAAC;AACH;AAE2B;AAGiB;AC9B5C;AAAI;AAE8C;AAAe;AAYjE,MAAa,uBAAuB;AAAG;AAClC;AAA+B;AACK;AAGpC;AAAQ,IAGJ,aAAa,CAAC,UAA2B;AAAI,QAClD,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB,QACI,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;AAChE,YAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AACvC,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,GAAG,IAAI,aAAa,CAAM,CAAC,CAAC,CAAC;AACtD,QAAI,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,SAAS;AAAM;AAC7C;AAAuB;AAC/B,QAFgD,CAAC,OAAY;AACpE,YAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1C,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,KAAK,CAAC,MAA6B;AAAI,QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAC/B,SAAS;AAAM;AACN;AAAuB;AAEhC,QAHU,CAAC,OAAY;AAC7B;AAA6B,gBAAjB,MAAM,GAAQ,OAAO,CAAC,KAAK,EAAE;AACzC,YACQ,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;AAClD;AAAiC,sBAAjB,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE;AACjE,gBAAU,MAAM,GAAG,MAAM,CAAC,MAAM;AAAM;AACb;AAA+B;AAAoB,gBAD3C,CAAC,MAAS;AAC3C;AAAqC,0BAAnB,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE;AAC5E,oBAAY,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACvC,iBAAW,EAAC,CAAC;AACb,aAAS;AACT,YACQ,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AACzC;AAAiC,sBAAjB,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;AAC9E,gBACU,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;AAC1C,oBAAY,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACzD,iBAAW;AAAC,qBAAK;AACjB,oBAAY,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACjE,iBAAW;AACX,aAAS;AACT,YACQ,OAAO,EAAE,CAAC;AAClB,gBAAU,OAAO,EAAE,MAAM;AACzB,gBAAU,KAAK,EAAE,OAAO,CAAC,MAAM;AAC/B,aAAS,CAAC,CAAC;AACX,SAAO,EAAC,CACH,CAAC;AACN,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,OAAO;AAAK,QACjB,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACrC,YAAM,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAChD,YAAM,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;AACzC,SAAK;AACL,QACI,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;AAChE,YAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AACvC,SAAK;AACL,KAAG;AACH;mDAtEC,UAAU;;;;0BACT;AAAC;AAAa;AAAQ;AAAiB;AAC1B;AAAQ,IAArB,mDAA6C;AAC/C;AAAQ;AAAiB;AAAgB;AAEzC,IAFE,yDAA6C;AAC/C;AACC;AAAC;AACF;AACK;AAGI;ACvBT;AAAI;AAEM;AAwDV,MAAa,iBAAiB;AAAG;AAAQ;AAAyC;AACzD;AAEjB;AAA0C;AACnC;AAAmC;AAE3B;AAAQ,IAwZ7B,YACU,sBAA4D,EAC5D,QAAkB,EAClB,iBAA4C,EAC5C,uBAAqD,EACrD,QAAmB,EACpB,gBAA0C,EAC1C,MAA6B;AACrC,QAPS,2BAAsB,GAAtB,sBAAsB,CAAsC;AAAC,QAC7D,aAAQ,GAAR,QAAQ,CAAU;AAAC,QACnB,sBAAiB,GAAjB,iBAAiB,CAA2B;AAAC,QAC7C,4BAAuB,GAAvB,uBAAuB,CAA8B;AAAC,QACtD,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACrB,qBAAgB,GAAhB,gBAAgB,CAA0B;AAAC,QAC3C,WAAM,GAAN,MAAM,CAAuB;AACxC,QACI,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvG,QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC;AAC5D,QAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;AAClE,QAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;AAClD,KAAG;AACH;AAEC;AAAwB;AACV;AAAQ,IA1arB,IACW,cAAc,CAAC,KAAuB;AACnD,QAAI,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,GAAG,KAAK,CAAC;AACzD,KAAG;AACH;AACO;AAAwB;AAAmB;AAAQ,IAAxD,IACW,yBAAyB,CAAC,KAAuB;AAC9D,QAAI,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,GAAG,KAAK,CAAC;AACpE,KAAG;AACH;AAC6B;AAE5B;AAGwB;AAEzB;AACa;AAAQ,IAgBnB,IACW,UAAU,CAAC,KAAoC;AAC5D,QAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,KAAK,CAAC;AAC7C,KAAG;AACH;AAGA;AACE;AACE;AAEO;AAAmB;AAAQ,IADpC,IACW,yBAAyB,CAAC,KAAuB;AAC9D,QAAI,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,iBAAiB,CAAC,KAAuB;AACtD,QAAI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAChC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,4BAA4B,CAAC,KAAuB;AACjE,QAAI,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAC7B,IAFE,IACW,OAAO,CAAC,KAAY;AACjC,QAAI,IAAI,CAAC,KAAK,EAAE;AAChB,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9D,KAAG;AACH;AAEC;AACE;AAEQ;AAAmB;AAAQ,IADpC,IACW,UAAU,CAAC,MAAyB;AACjD,QAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AAChC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AACzB,IAFF,IACW,EAAE,CAAC,KAAa;AAC7B,QAAI,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACpE,YAAM,MAAM,KAAK,CAAC,yMAAyM,CAAC,CAAC;AAC7N,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,KAAK,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,YAAY,CAAC,KAA2B;AACrD,QAAI,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,aAAa,CAAC,KAAa;AACxC,QAAI,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,cAAc,CAAC,KAAa;AACzC,QAAI,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,YAAY,CAAC,KAAa;AACvC,QAAI,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,eAAe,CAAC,KAAa;AAC1C,QAAI,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,eAAe,CAAC,KAAY;AACzC,QAAI,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,KAAK,IAAI,EAAE,CAAC;AACxD,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,cAAc,CAAC,KAAU;AACtC,QAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,KAAK,CAAC;AACjD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAC5B,IAFC,IACW,KAAK,CAAC,KAAa;AAChC,QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AAC9B,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,sBAAsB,CAAC,KAAa;AACjD,QAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;AAC/C,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,YAAY,CAAC,KAAc;AACxC,QAAI,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,qBAAqB,CAAC,KAAa;AAChD,QAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB,GAAG,KAAK,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE;AACE;AACE;AAEJ;AACa;AAAmB;AAAQ,IAD3C,IACW,UAAU,CAAC,KAAyB;AACjD,QAAI,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,UAAU,CAAC,KAAc;AACtC,QAAI,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,UAAU,CAAC,KAAa;AACrC,QAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,KAAK,CAAC;AAC7C,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,cAAc,CAAC,KAAc;AAC1C,QAAI,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,kBAAkB,CAAC,KAAa;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,cAAc,CAAC,KAAc;AAC1C,QAAI,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,8BAA8B,CAAC,KAAc;AAC1D,QAAI,IAAI,CAAC,MAAM,CAAC,8BAA8B,GAAG,KAAK,CAAC;AACvD,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,wBAAwB,CAAC,KAAc;AACpD,QAAI,IAAI,CAAC,MAAM,CAAC,wBAAwB,GAAG,KAAK,CAAC;AACjD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,SAAS,CAAC,KAAa;AACpC,QAAI,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AAClC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,UAAU,CAAC,KAAa;AACrC,QAAI,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,YAAY,CAAC,KAAmB;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,QAAQ,CAAC,KAAc;AACpC,QAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,iBAAiB,CAAC,KAAc;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,KAAK,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,wBAAwB,CAAC,KAAc;AACpD,QAAI,IAAI,CAAC,MAAM,CAAC,wBAAwB,GAAG,KAAK,CAAC;AACjD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,eAAe,CAAC,KAAc;AAC3C,QAAI,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,iBAAiB,CAAC,KAAc;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,KAAK,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,yBAAyB,CAAC,KAAa;AACpD,QAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,GAAG,KAAK,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,sBAAsB,CAAC,KAAc;AAClD,QAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;AAC/C,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,yBAAyB,CAAC,KAAc;AACrD,QAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,GAAG,KAAK,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,gCAAgC,CAAC,KAAc;AAC5D,QAAI,IAAI,CAAC,MAAM,CAAC,gCAAgC,GAAG,KAAK,CAAC;AACzD,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,sCAAsC,CAAC,KAAc;AAClE,QAAI,IAAI,CAAC,MAAM,CAAC,sCAAsC,GAAG,KAAK,CAAC;AAC/D,KAAG;AACH;AAEC;AACE;AACE;AAEO;AAAmB;AAAQ,IADrC,IACW,2BAA2B,CAAC,KAAc;AACvD,QAAI,IAAI,CAAC,MAAM,CAAC,2BAA2B,GAAG,KAAK,CAAC;AACpD,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,iBAAiB,CAAC,KAAa;AAC5C,QAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,KAAK,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,kBAAkB,CAAC,KAAa;AAC7C,QAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AAEO;AAAmB;AAAQ,IADnC,IACW,qBAAqB,CAAC,KAAkB;AACrD,QAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB,GAAG,KAAK,CAAC;AAC9C,KAAG;AACH;AACO;AACgB;AAAgB;AAC7B;AAAmB;AACxB,IAiBK,cAAc,CAAC,MAAuB;AAAI,QAChD,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACvD,QACI,IAAI,CAAC,gBAAgB,CAAC,UAAU;AAAQ;AAA6B;AAAuB;AAAY,QAArE,CAAC,MAA6B;AAAO,YACtE,IAAI,MAAM,CAAC,UAAU,EAAE;AAC7B,gBAAQ,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3D,aAAO;AACP,YACM,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACxD,SAAK,CAAA,CAAC;AACN,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,cAAc,CAAC,KAAiB,EAAE,OAAoB;AAAI;AAChD,cAAT,MAAM,sBAAG,KAAK,CAAC,MAAM,EAAe;AAC9C,QAAI,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;AAC1F,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,MAAM,CAAC,qBAAqB,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE;AACnG,YAAM,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,qBAAqB;AAC9D,YAAM,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;AACxC,SAAK,CAAC,CAAC;AACP,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE;AACjD,YAAM,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;AAClF,YAAM,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;AACpF,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,mBAAmB;AAAK,QACjC,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,KAAK,SAAS,EAAE;AAC1D,YAAM,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC;AAC/F,SAAK;AACL,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,wBAAwB;AAAK,QACtC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,6BAA6B,EAAE,CAAC;AACzH,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACzC,YAAM,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;AACpD,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;AACvD,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,kBAAkB;AAAK,QAChC,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC;AAC5D,SAAK;AACL,QACI,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,mBAAmB;AAAK,QAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAC5F,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAC3F,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,oBAAoB;AAAK,QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,EAAE,CAAC;AACjD,YAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAC5F,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,SAAS,CAAC;AACvD,YAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAC3F,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AAEA;AAAmB;AAAQ,IAAvB,gBAAgB,CAAE,UAAmB;AAAI,QAC9C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,UAAU,CAAC;AAChD,KAAG;AACH;AAEC;AACE;AACE;AAEA;AAAmB;AAAQ,IAAvB,UAAU,CAAC,KAAU;AAAI,QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,KAAK,IAAI,EAAE,CAAC;AAC1D,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,KAAK,CAAC;AACnD,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,gCAAgC,EAAE;AACtD,YAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AAEA;AAAmB;AAAQ,IAAvB,gBAAgB,CAAC,cAA4C;AAAI,QACtE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS;AAAM;AACjD;AAInB;AACM,QANyD,KAAK;AACvE,YAAM,cAAc,CAAC,KAAK,CAAC,CAAC;AAC5B,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACE;AAEA;AAAmB;AAAQ,IAAvB,iBAAiB,CAAC,EAAO;AAAI;AACG,KACtC;AACH;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE;AACnC,YAAM,MAAM,KAAK,CAAC,kDAAkD,CAAC,CAAC;AACtE,SAAK;AACL,QACI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;AAC3C,YAAM,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC;AACtE,SAAK;AACL,QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AACpC,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzD,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE;AAC/C,YAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjC,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,KAAG;AACH;AAEC;AACE;AAAgB;AACM;AAEA;AAAmB;AAAQ,IAA1C,iBAAiB,CAAC,MAAW,EAAE,KAAa;AAAI;AACjD,cAAC,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AACrD,QACI,OAAO;AACX,YAAM,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;AACxD,YAAM,EAAE;AACR,YAAM,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC;AACrD,YAAM,MAAM;AACZ,YAAM,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;AACnD,SAAK,CAAC;AACN,KAAG;AACH;AAEC;AACE;AACE;AAAgB;AAEA;AAAmB;AAAQ,IAAtC,kBAAkB,CAAC,WAAqC;AAClE,QAAI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAClC,YAAM,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM;AACzE;AAAsC;AAAiC;AAC9C;AAA2B;AAAgB,YADhE,CAAC,WAAkC,EAAE,MAAW,EAAE,KAAa;AACvE;AAAiC,sBAAjB,eAAe,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;AACvE;AAAiC,sBAAjB,YAAY,GAAG,WAAW,CAAC,IAAI;AAAM;AAAoC;AAExF;AAAoB,gBAF2B,CAAC,KAA0B,KAAK,KAAK,CAAC,SAAS,KAAK,eAAe,EAAC;AACpH,gBACU,IAAI,YAAY,EAAE;AAC5B,oBAAY,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7E,iBAAW;AAAC,qBAAK;AACjB,oBAAY,WAAW,CAAC,IAAI,CAAC;AAC7B,wBAAc,SAAS,EAAE,eAAe;AACxC,wBAAc,OAAO,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC9D,qBAAa,CAAC,CAAC;AACf,iBAAW;AACX,gBACU,OAAO,WAAW,CAAC;AAC7B,aAAS,GACD,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,EAAE,CAC/G,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM;AACpE;AAAsC;AACxC;AAAgC;AAA2B;AACnD,YAFF,CAAC,WAA6B,EAAE,MAAW,EAAE,KAAa;AAClE,gBAAU,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAClE,gBAAU,OAAO,WAAW,CAAC;AAC7B,aAAS,GACD,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,EAAE,CAC1G,CAAC;AACR,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE;AAC1E,YAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC9C,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACtE,aAAO;AACP,YACM,IAAI,IAAI,CAAC,MAAM,CAAC,sCAAsC,EAAE;AAC9D,gBAAQ,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACnC,aAAO;AACP,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,WAAW,CAAC,KAAK,CAAC;AAC/D,QAAI,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;AAC3E,KAAG;AACH;AAEC;AACE;AAAgB;AAEA;AAAmB;AAAQ,IAApC,eAAe,CAAC,WAAqC;AAAI,QAC/D,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;AACzC,QAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;AAC9C,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AAAgB;AAEA;AAAmB;AAAQ,IAApC,iBAAiB,CAAC,UAAmB;AAAI,QAC/C,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC;AAC7C,QACI,IAAI,UAAU,EAAE;AACpB,YAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;AACvC,YAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,EAAE,CAAC;AAC5C,SAAK;AACL;AACwB,cAAd,aAAa,GAA0B;AACjD,YAAM,UAAU;AAChB,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAClC,YAAM,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAC9C,YAAM,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;AAC1D,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;AAChC,YAAM,aAAa,CAAC,MAAM,GAAG;AAC7B,gBAAQ,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc;AACvC,gBAAQ,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU;AAC/C,aAAO,CAAC;AACR,SAAK;AACL,QACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAC3D,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAC/B,IADS,kBAAkB;AAAK;AAEjC,cADU,IAAI,GAAG;AACjB,YAAM,OAAO,EAAE,EAAE;AACjB,YAAM,KAAK,EAAE,CAAC;AACd,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,eAAe;AAC1C,aAAO,IAAI,CACH,YAAY,CAAC,EAAE,CAAC,EAChB,SAAS;AAAM;AAAiC;AAAuB;AACpE,QADO,CAAC,UAAmB,KAAK,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAC,EACtE,UAAU;AAAM;AACJ;AACf,QAFc;AACnB,YAAU,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAC1B,SAAS,EAAC,CACH;AACP,aAAO,SAAS;AACZ;AAAkC;AAC9B;AAAY,QADZ,CAAC,WAAqC;AAC9C,YAAU,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AAC5C,SAAS;AACH;AACO;AAAY,QADjB;AACR,YAAU,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACrC,SAAS,EACF,CAAC;AACR,KAAG;AACH;AAEC;AACE;AAEC;AAAmB;AAAQ,IAAtB,SAAS,CAAC,aAAsB,KAAK;AAAI,QAC9C,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5D,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,oBAAoB,CAAC,KAAa;AAAI,QAC3C,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC3D,QAAI,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAC1F,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,KAAK;AAAK,QACf,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;AACpD,KAAG;AACH;6CAzwBC,SAAS,SAAC,kBACT,QAAQ,EAAE,aAAa,kBACvB;;;;;;;;;;4vCAAwC,kBACxC,SAAS,EAAE,sBACT,qBAAqB,sBACrB,wBAAwB,sBACxB,yBAAyB,sBACzB,uBAAuB,sBACvB,0BACE,OAAO,EAAE,iBAAiB,0BAC1B,WAAW,EAAE,UAAU,iGAAC,MAAM,iBAAiB,EAAC,0BAChD,KAAK,EAAE,IAAI,sBACZ,kBACF,cACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8HACG;AAAC;AAAmB;AAA2C,YA1B1D,oCAAoC;AAAI,YA3B/C,QAAQ;AACR,YA6BO,yBAAyB;AAAI,YAC7B,uBAAuB;AAAI,YA1BlC,SAAS;AACT,YAuBO,wBAAwB;AAAI,YAD5B,qBAAqB;AAAG;AAAG;AAAqC,qCA4BtE,YAAY,SAAC,0BAA0B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACvD,6BAEF,YAAY,SAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAC/C,wCAIF,YAAY,SAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAC1D,mBAQF,MAAM;AACP,2BAKC,MAAM;AACP,wBAKC,MAAM;AACP,yBAOC,KAAK;AACN,wCASC,KAAK;AACN,gCAOC,KAAK;AACN,2CAOC,KAAK;AACN,sBAOC,KAAK;AACN,yBAWC,KAAK;AACN,iBAOC,KAAK;AACN,2BAWC,KAAK;AACN,4BAQC,KAAK;AACN,6BAQC,KAAK;AACN,2BAQC,KAAK;AACN,8BAQC,KAAK;AACN,8BAQC,KAAK;AACN,6BAQC,KAAK;AACN,oBAOC,KAAK;AACN,qCAQC,KAAK;AACN,2BAQC,KAAK;AACN,oCAQC,KAAK;AACN,yBAWC,KAAK;AACN,yBAOC,KAAK;AACN,yBAQC,KAAK;AACN,6BAQC,KAAK;AACN,iCAOC,KAAK;AACN,6BAOC,KAAK;AACN,6CAQC,KAAK;AACN,uCAQC,KAAK;AACN,wBAOC,KAAK;AACN,yBAOC,KAAK;AACN,2BAQC,KAAK;AACN,uBAOC,KAAK;AACN,gCAOC,KAAK;AACN,uCAOC,KAAK;AACN,8BAOC,KAAK;AACN,gCAOC,KAAK;AACN,wCAQC,KAAK;AACN,qCAOC,KAAK;AACN,wCAQC,KAAK;AACN,+CAQC,KAAK;AACN,qDAQC,KAAK;AACN,0CAQC,KAAK;AACN,gCAOC,KAAK;AACN,iCAOC,KAAK;AACN,oCAOC,KAAK;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAAiB;AACzC;AAAQ,IA1ZP,uDAAiD;AACnD;AACoB,IAAlB,mDACgD;AAClD;AACO;AAAyC;AACrC;AAAQ,IAajB,iCAC6C;AAC/C;AAEC;AACE;AAED;AAAQ,IADR,yCAC+C;AACjD;AAEC;AACE;AAED;AAAQ,IADR,sCACqC;AACvC;AACO;AAAiB;AAGnB;AAAQ,IAyXT,mDAAoE;AAAC;AAClE;AAAiB;AAChB;AAAQ,IADZ,qCAA0B;AAAC;AACxB;AAAiB;AAAgB;AAAQ,IAA5C,8CAAoD;AAAC;AAClD;AAAiB;AAAgB;AAAQ,IAA5C,oDAA6D;AAAC;AAC3D;AAAiB;AACjB;AAAQ,IADX,qCAA2B;AAAC;AACZ,IAAhB,6CAAiD;AAAC;AAClC,IAAhB,mCAAoC;AACxC;AAAE;AAAC;AACF;AAAkC;AAEY;ACne/C;AAAI;AAA8B;AAgBlC,MAAa,uBAAuB;AAAG;AAAQ;AAC3C;AAAmC;AACR;AAAQ,IAErC,YACS,MAA6B,EAC7B,gBAA0C,EAC1C,iBAA4C;AACpD,QAHQ,WAAM,GAAN,MAAM,CAAuB;AAAC,QAC9B,qBAAgB,GAAhB,gBAAgB,CAA0B;AAAC,QAC3C,sBAAiB,GAAjB,iBAAiB,CAA2B;AACvD,QAPU,qBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;AAC3C,KAMM;AACN;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,QAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,EAAE,CAAC;AAC1C,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvD,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AACpC,YAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACnE,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;AACvC,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzD,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACU;AAAmB;AAAQ,IAA9B,uBAAuB;AAAK,QAClC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS;AAAM;AACtG;AAAY,QADqF;AACrH,YAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;AACvC,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzD,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,WAAW;AAAK,QACrB,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACrC,YAAM,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAChD,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,QAAQ;AAAK,QAClB,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACnC,KAAG;AACH;mDA5DC,SAAS,SAAC,kBACT,QAAQ,EAAE,oBAAoB,kBAC9B;ghBAA+C,cAChD;;;;;;;;;;;;;;;;;;;;;gIACG;AAAC;AAAmB;AACnB,YAZI,qBAAqB;AAAI,YACzB,wBAAwB;AAAI,YAC5B,yBAAyB;AAAG;;;;;;;wJAAE;AAAC;AAAa;AAAQ;AAAiB;AAG9E;AAAQ,IAON,mDAAyC;AAC3C;AAAQ;AAAiB;AAAgB;AAEzC,IAFE,yDAA6C;AAC/C;AAEK,IAAD,yCAAoC;AAAC;AACrB,IAAhB,mDAAiD;AAAC;AAClC,IAAhB,oDAAmD;AACvD;AAAE;AAAC;AACH;AAE2B;AAIS;AC/BpC;AAAI;AAAoC;AAiBxC,MAAa,wBAAwB;AACrC;AAAQ;AACU;AACP;AAAoC;AAC/C,IAHE,YACS,MAA6B,EAC7B,gBAA0C,EACzC,iBAA4C;AACrD,QAHQ,WAAM,GAAN,MAAM,CAAuB;AAAC,QAC9B,qBAAgB,GAAhB,gBAAgB,CAA0B;AAAC,QAC1C,sBAAiB,GAAjB,iBAAiB,CAA2B;AACxD,KAAM;AACN;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,aAAa,CAAC,KAAa,EAAE,MAAsB;AAAI,QAC5D,OAAO,MAAM,CAAC,KAAK,CAAC;AACxB,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,gBAAgB,CAAC,EAAO;AAAI,QACjC,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;AAC5C,YAAM,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI;AAAM;AAC1C;AAA2B;AAC9C,YAFwD,CAAC,MAAW;AACpE,gBAAQ,OAAO,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC7D,aAAO,EAAC,CAAC;AACT,SAAK;AACL,QACI,OAAO,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACvF,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,aAAa,CAAC,MAAsB,EAAE,KAAiB;AAAI;AACjD,cAAT,MAAM,sBAAG,KAAK,CAAC,MAAM,EAAe;AAC9C,QAAI,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;AAC1F,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AACM;AAEA;AAAmB;AAAQ,IAA3B,qBAAqB,CAAC,MAAsB,EAAE,KAAiB;AAAI;AACK,QAC7E,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;AAC7C;AAA6B,kBAAjB,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAC7F;AAA6B,kBAAjB,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAC9D,YAAM,IAAI,UAAU,KAAK,EAAE,EAAE;AAC7B,gBAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,yBAAyB,CAAC,MAAsB;AAAI;AAC1C,cAAT,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAC5D,QACI,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU;AAClC,YAAM,KAAK,OAAO,EAAE;AACpB;AAAiC,sBAAnB,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,SAAS;AAAM;AAC5D;AAA+B;AAC3C,gBAFmE,CAAC,KAAU;AACzF,oBAAU,OAAO,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC9D,iBAAS,EAAC;AACV,gBACQ,IAAI,aAAa,GAAG,CAAC,EAAE;AAC/B,oBAAU,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACpE,iBAAS;AAAC,qBAAK;AACf,oBAAU,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACzE,iBAAS;AACT,gBACQ,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAC9F,gBAAQ,MAAM;AACd,aAAO;AACP,YAAM,KAAK,eAAe,EAAE;AAC5B,gBAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE;AACzF,oBAAU,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,SAAS,CAAC;AAC3D,iBAAS;AAAC,qBAAK;AACf,oBAAU,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/D,iBAAS;AACT,gBACQ,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAC7F,gBAAQ,MAAM;AACd,aAAO;AACP,YAAM,KAAK,QAAQ,EAAE;AACrB;AAAiC,sBAAnB,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAC/F,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC;AAC7D,gBACQ,IAAI,UAAU,KAAK,EAAE,EAAE;AAC/B,oBAAU,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAC/F,iBAAS;AACT,gBAAQ,MAAM;AACd,aAAO;AACP,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;AACvC,YAAM,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;AACtD,SAAK;AACL,KAAG;AACH;oDA/GC,SAAS,SAAC,kBACT,QAAQ,EAAE,qBAAqB,kBAC/B;;;;;;;;;;;;;;;iGAEE;AAAC;AAAmB;AAEL,YAZV,qBAAqB;AAAI,YADzB,wBAAwB;AAAI,YAE5B,yBAAyB;AAAG;;;;;giEAOa,cACjD;;wJARsC;AAAC;AAAa;AAAqB,IAWtE,0CAAoC;AAAC;AACrB,IAAhB,oDAAiD;AAAC;AAC/C;AAAiB;AAAgB;AAAQ,IAA5C,qDAAoD;AACxD;AAAE;AAAC;AACH;AAE2B;AAIR;AC7BnB;AAAiB,MAeX,UAAU,GAAG,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,wBAAwB,CAAC;AAChH;AACG;AACuC;AAQ1C,MAAa,cAAc;AAC3B;AACE;AACE;AACO;AAEA;AAAQ,IAAjB,OAAO,OAAO,CAAC,cAA+B;AAAI,QAChD,OAAO;AACX,YAAM,QAAQ,EAAE,cAAc;AAC9B,YAAM,SAAS,EAAE;AACjB,gBAAQ;AACR,oBAAU,OAAO,EAAE,eAAe;AAClC,oBAAU,QAAQ,EAAE,cAAc;AAClC,iBAAS;AACT,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH;0CAvBC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC;CAAY,EAAE,WAAW,EAAE,aAAa,CAAC,OAAO,EAAE,CAAC,kBAC7D,YAAY,EAAE,CAAC,GAAG,UAAU;AAAC,kBAC7B,OAAO,EAAE,CAAC,iBAAiB,CAAC,kBAC5B,eAAe,EAAE,CAAC,qBAAqB,CAAC,cACzC;;;;;;;;;;8XACI;AAAC;AAAC;AAAI;AAEF;AAEa;AC9BtB;AAAiB,MAgCXA,YAAU,GAAG;AACnB,IAAE,wBAAwB;AAC1B,IAAE,wBAAwB;AAC1B,IAAE,0BAA0B;AAC5B,IAAE,sBAAsB;AACxB,IAAE,4BAA4B;AAC9B,IAAE,kBAAkB;AACpB,IAAE,gCAAgC;AAClC,IAAE,4BAA4B;AAC9B,IAAE,oCAAoC;AACtC,IAAE,sCAAsC;AACxC,IAAE,mCAAmC;AACrC,IAAE,sBAAsB;AACxB,IAAE,gCAAgC;AAClC,CAAC;AACD;AACgB,MAAVC,YAAU,GAAG,CAAC,uBAAuB,EAAE,sBAAsB,EAAE,qBAAqB,CAAC;AAC3F;AACgB,MAAVC,WAAS,GAAG,EAAE;AACpB;AACG;AACyC;AAS5C,MAAa,eAAe;AAC5B;AACE;AACE;AACO;AAEA;AAAQ,IAAV,OAAO,OAAO,CAAC,eAAiC;AAAI,QACzD,OAAO;AACX,YAAM,QAAQ,EAAE,eAAe;AAC/B,YAAM,SAAS,EAAE;AACjB,gBAAQ;AACR,oBAAU,OAAO,EAAE,iBAAiB;AACpC,oBAAU,QAAQ,EAAE,eAAe;AACnC,iBAAS;AACT,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH;2CAxBC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC,YAAY;CAAE,WAAW,EAAE,aAAa,CAAC,OAAO,EAAE,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC,kBACvF;KAAY,EAAE,CAAC,GAAGF,YAAU,EAAE,GAAGC,YAAU,CAAC,kBAC5C,SAAS,EAAE,CAAC,GAAGC,WAAS,CAAC,kBACzB,OAAO,EAAE,CAAC,wBAAwB,EAAE,kBAAkB,CAAC,kBACvD;MAAe,EAAE,CAAC,gCAAgC,CAAC,cACpD;;;;;;;;;;4xBACI;AAAC;AAAC;AAAI;AAEH;AAEU;AClElB;AAAI;AAAqC;AAUzC,MAAa,yBAAyB;AACtC;AACE;AACE;AAEA;AAAmB;AAAQ,IAAtB,cAAc,CAAC,cAAkC;AAAI,QAC1D,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,EAAE;AACjD,YAAM,IAAI,cAAc,CAAC,MAAM,YAAY,UAAU,EAAE;AACvD,gBAAQ,OAAO,cAAc,CAAC,MAAM,CAAC;AACrC,aAAO;AAAC,iBAAK;AACb;AAAiC,oBAArB,WAAW,GAAG,IAAI,UAAU,EAAE;AAC1C,gBAAQ,KAAK,MAAM,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE;AACjD,oBAAU,IAAI,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AACzD,wBAAY,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3E,qBAAW;AACX,iBAAS;AACT,gBACQ,OAAO,WAAW,CAAC;AAC3B,aAAO;AACP,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,IAAI,UAAU,EAAE,CAAC;AAC9B,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEA;AAAmB;AAAQ,IAArB,iBAAiB,CAAC,OAA+B;AAAI;AACrD,cAAC,cAAc,GAAmB;AAC3C,YAAM,GAAG,EAAE,EAAE;AACb,YAAM,OAAO,EAAE,EAAE;AACjB,SAAK;AACL,QACI,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACrC,YAAM,cAAc,CAAC,OAAO,GAAG,OAAO,CAAC;AACvC,YAAM,cAAc,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;AACvC,SAAK;AAAC,aAAK;AACX,YAAM,cAAc,CAAC,GAAG,GAAG,OAAO,CAAC;AACnC,SAAK;AACL,QACI,OAAO,cAAc,CAAC;AAC1B,KAAG;AACH;qDA5CC,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AACP;AAGD;ACdA;AAAI;AAG4D;AAAyB;AAIzF,MAAa,4BAA4B;AAAG;wDAD3C,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AAAkC;AACwE;ACRlH;AAAiB,MAMXA,WAAS,GAAG,CAAC,yBAAyB,CAAC;AAC7C;AACG;AACwB;AAM3B,MAAa,qBAAqB;AAClC;AACE;AACE;AAEA;AAAQ,IAAH,OAAO,OAAO;AAAK,QACxB,OAAO;AACX,YAAM,QAAQ,EAAE,qBAAqB;AACrC,YAAM,SAAS,EAAE,CAAC,4BAA4B,CAAC;AAC/C,SAAK,CAAC;AACN,KAAG;AACH;iDAfC,QAAQ,SAAC,kBACR,OAAO,EAAE,EAAE,kBACX;GAAS,EAAE,CAAC,GAAGA,WAAS,CAAC,cAC1B;;;;;;;;0BACI;AAAC;AAAC;AAAI;AAET;AAGsB;ACpBxB;AAAI;AAGwE;AAA8B;AAI1G,MAAa,8BAA8B;AAAG;0DAD7C,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AAAkC;AACsE;AAAI;AAAI;AAAuC;AAAe;ACY9K,MAAa,6BAA6B;AAAG;AACxC;AAAuB;AAA4C;AAAQ,IAA9E,YAAoB,IAAgB,EAAS,yBAAoD;AAAI,QAAjF,SAAI,GAAJ,IAAI,CAAY;AAAC,QAAQ,8BAAyB,GAAzB,yBAAyB,CAA2B;AAAC,KAAG;AACvG;AAEC;AACE;AACM;AACO;AAEA;AACb,IADM,UAAU,CACf,OAA+B,EAC/B,MAA4E;AAC9E,QACE;AAAY;AAA8B;AAAuB;AAAY,QAAtE,CAAC,MAA+B;AAAO;AAA6B,kBACnE,cAAc,GAAG,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,OAAO,CAAC;AACtF;AAA6B,gBAAnB,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;AAC7F,YACM,IAAI,MAAM,EAAE;AAClB,gBAAQ,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;AACxC,oBAAU,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,iBAAS;AACT,gBACQ,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AACzC,oBAAU,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AACzE,iBAAS;AACT,gBACQ,MAAM,CAAC,MAAM,CAAC,OAAO;AAAM;AAC5B;AAEI;AAAoB,gBAHD,CAAC,MAA2B;AAC1D;AAEU,wBAFI,KAAK,GAAG,EAAE;AACxB,oBACU,IAAI,MAAM,CAAC,UAAU,EAAE;AACjC,wBAAY,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,EAAE;AACxD,4BAAc,IAAI,MAAM,CAAC,WAAW,KAAK,EAAE,EAAE;AAC7C,gCAAgB,KAAK,IAAI,MAAM,CAAC,WAAW,CAAC;AAC5C,6BAAe;AACf,yBAAa;AAAC,6BAAK,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE;AACvF,4BAAc,KAAK,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpD,yBAAa;AACb,qBAAW;AACX,oBACU,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,KAAK,EAAE,EAAE;AAC1D,wBAAY,KAAK,IAAI,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;AACnE,qBAAW;AACX,oBACU,IAAI,KAAK,EAAE;AACrB,wBAAY,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC/D,qBAAW;AACX,iBAAS,EAAC,CAAC;AACX,gBACQ,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC;AACpD;AACgC,sBAAlB,QAAQ,sBAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,cAAc,CAAC,GAAG,qBAAE,cAAc,CAAC,OAAO,GAAQ,EAAmB;AACjH,gBACQ,IAAI,MAAM,EAAE;AACpB,oBAAU,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;AAClC,iBAAS;AACT,gBACQ,OAAO,QAAQ,CAAC;AACxB,aAAO;AACP,SAAK,EAAC;AACN,KAAG;AACH;AAEC;AACE;AACM;AACO;AAEA;AAAQ,IAAf,oBAAoB,CACzB,OAAkC,EAClC,MAA4E;AAC9E,QACE;AAAY;AAA6B;AAAuB;AAAY,QAArE,CAAC,MAAgC;AAAO;AAA6B,kBACpE,cAAc,GAAG,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,OAAO,CAAC;AACtF;AAA6B,gBAAnB,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;AAC7F;AAC4B,kBAAhB,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,KAAK;AAC5D,YAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAC1D;AAC4B,kBAAhB,QAAQ,sBAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,cAAc,CAAC,GAAG,kBAAI,MAAM,EAAE,WAAW,IAAK,cAAc,EAAG,EAAmB;AAC5H,YACM,IAAI,MAAM,EAAE;AAClB,gBAAQ,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChC,aAAO;AACP,YACM,OAAO,QAAQ,CAAC;AACtB,SAAK,EAAC;AACN,KAAG;AACH,CAAC;AACD;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IAvFhD,6CAAwB;AAAC;AAAqB,IAApB,kEAA2D;AAAC;AAAE;AAAC;AAErG;AAC4B;AAE6B;AC1B3D;AAAI;AACG;AAUP,MAAa,mCAAmC;AAChD;AAAQ;AAAuB;AAA4C;AAAQ,IAAjF,YAAoB,IAAgB,EAAS,yBAAoD;AACnG,QADsB,SAAI,GAAJ,IAAI,CAAY;AAAC,QAAQ,8BAAyB,GAAzB,yBAAyB,CAA2B;AAAC,KACjG;AACH;AAEC;AACE;AACa;AAAmB;AAAQ,IAAlC,mBAAmB;AAAK,QAC7B,OAAO,IAAI,6BAA6B,CAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;AAC3F,KAAG;AACH;+DAXC,UAAU;uLACT;AAAC;AAAmB;AACU,YAXvB,UAAU;AAAI,YAId,yBAAyB;AAAG;;;gHAAE;AAAC;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IAOxF,mDAAwB;AAAC;AAAqB,IAApB,wEAA2D;AAAC;AAAE;AACtG;AACA;AAE2B;AAGjB;ACnBV;AAAI;AAA6C;AAC3C;AASN,MAAa,kCAAkC;AAAG,IAKhD,iBAAgB;AAClB;AAEC;AACE;AAEC;AAAmB;AAAQ,IAAtB,IAAI,CAAC,MAAwD;AAAI,QACtE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAM,MAAM,CAAC,CAAC;AACzC,QAAI,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAA2B,CAAC;AAC1D,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,YAAY;AAAK,QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH;AAEC;AACE;AACE;AACO;AAEA;AAAQ,IAAX,UAAU,CAAC,MAA0E;AAAI,QAC9F,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,YAAM,MAAM,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACrE,SAAK;AACL,QACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClE,QACI;AAAY;AAA8B;AAAuB;AAAY,QAAtE,CAAC,MAA+B;AAAO,YAC5C,IAAI,MAAM,EAAE;AAClB,gBAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,oBAAC;AACzB,oBAAU,IAAI,EAAE,YAAY;AAC5B,oBAAU,MAAM,EAAE,MAAM,CAAC,MAAM;AAC/B,oBAAU,KAAK,EAAE,MAAM,CAAC,KAAK;AAC7B,oBAAU,MAAM,EAAE,MAAM,CAAC,MAAM;AAC/B,iBAAS,GAAQ,CAAC;AAClB,gBACQ,IAAI,MAAM,EAAE;AACpB,oBAAU,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACtC,iBAAS;AACT,gBACQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,aAAO;AACP,SAAK,EAAC;AACN,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,OAAO;AAAK,QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC7B,SAAK;AACL,QACI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AAC5C,SAAK;AACL,QACI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH,CAAC;AACD;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IAtE5D,oDAA0D;AAC5D;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,qDAAkD;AACpD;AAAQ;AAAiB;AAAgB;AAErC,IAFF,gEAAyC;AAC3C;AACC;AAAC;AAAI;AAGQ;AAGoB;ACrBlC;AAAI;AACS;AAMb,MAAa,wCAAwC;AACrD;AAEC;AACE;AACa;AAAmB;AAAQ,IAAlC,mBAAmB;AAAK,QAC7B,OAAO,IAAI,kCAAkC,EAAK,CAAC;AACvD,KAAG;AACH;oEATC,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AAAkC;AAKV;ACZhC;AAAiB,MAUXA,WAAS,GAAG,CAAC,mCAAmC,EAAE,wCAAwC,CAAC;AACjG;AACG;AAC8B;AAMjC,MAAa,uBAAuB;AACpC;AACE;AACE;AAEA;AAAQ,IAAH,OAAO,OAAO;AAAK,QACxB,OAAO;AACX,YAAM,QAAQ,EAAE,uBAAuB;AACvC,YAAM,SAAS,EAAE,CAAC,8BAA8B,CAAC;AACjD,SAAK,CAAC;AACN,KAAG;AACH;mDAfC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC,qBAAqB,CAAC;WAChC,SAAS,EAAE,CAAC,GAAGA,WAAS,CAAC,cAC1B;;;;;;;;;iKACI;AAAC;AAAC;AAAI;AAEX;AAGwB;ACxBxB;AAAI;AAG0E;AAA+B;AAI7G,MAAa,6BAA6B;AAAG;yDAD5C,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AAAkC;AACuE;AAAI;AAAI;AAAqC;AAAe;ACM7K,MAAa,4BAA4B;AAAG;AACvC;AAAuB;AAA4C;AAAQ,IAA9E,YAAoB,IAAgB,EAAS,yBAAoD;AAAI,QAAjF,SAAI,GAAJ,IAAI,CAAY;AAAC,QAAQ,8BAAyB,GAAzB,yBAAyB,CAA2B;AAAC,KAAG;AACvG;AAEC;AACE;AACM;AACO;AAEA;AACb,IADM,UAAU,CACf,OAA+B,EAC/B,MAA2E;AAC7E,QACE;AAAY;AAA8B;AAAuB;AAAY,QAAtE,CAAC,MAA8B;AAAO;AAA6B,kBAClE,cAAc,GAAG,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,OAAO,CAAC;AACtF;AAA6B,gBAAnB,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;AAC7F,YACM,IAAI,MAAM,EAAE;AAClB,gBAAQ,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;AACxC,oBAAU,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,iBAAS;AACT,gBACQ,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AACzC,oBAAU,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AACzE,iBAAS;AACT,gBACQ,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;AAClD,oBAAU,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACpE,oBAAU,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACvE,iBAAS;AACT,gBACQ,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC;AACpD;AACgC,sBAAlB,QAAQ,sBAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,cAAc,CAAC,GAAG,qBAAE,cAAc,CAAC,OAAO,GAAQ,EAAmB;AACjH,gBACQ,IAAI,MAAM,EAAE;AACpB,oBAAU,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;AAClC,iBAAS;AACT,gBACQ,OAAO,QAAQ,CAAC;AACxB,aAAO;AACP,SAAK,EAAC;AACN,KAAG;AACH,CAAC;AACD;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IA3ChD,4CAAwB;AAAC;AAAqB,IAApB,iEAA2D;AAAC;AAAE;AAAC;AAErG;AAC4B;AAE6B;ACpB3D;AAAI;AACC;AASL,MAAa,kCAAkC;AAC/C;AAAQ;AAAuB;AAA4C;AAAQ,IAAjF,YAAoB,IAAgB,EAAS,yBAAoD;AACnG,QADsB,SAAI,GAAJ,IAAI,CAAY;AAAC,QAAQ,8BAAyB,GAAzB,yBAAyB,CAA2B;AAAC,KACjG;AACH;AAEC;AACE;AACa;AAAmB;AAAQ,IAAlC,mBAAmB;AAAK,QAC7B,OAAO,IAAI,4BAA4B,CAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;AAC1F,KAAG;AACH;8DAXC,UAAU;oLACT;AAAC;AAAmB;AACU,YAVvB,UAAU;AAAI,YAGd,yBAAyB;AAAG;;;gHAAE;AAAC;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IAOxF,kDAAwB;AAAC;AAAqB,IAApB,uEAA2D;AAAC;AAAE;AACtG;AACA;AAE2B;AAGd;AClBb;AAAI;AAA0C;AAC3C;AASH,MAAa,iCAAiC;AAAG,IAK/C,iBAAgB;AAClB;AAEC;AACE;AAEC;AAAmB;AAAQ,IAAtB,IAAI,CAAC,MAAuD;AAAI,QACrE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAM,MAAM,CAAC,CAAC;AACzC,QAAI,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAA0B,CAAC;AACzD,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAW,YAAY;AAAK,QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH;AAEC;AACE;AACE;AACO;AAEA;AAAQ,IAAX,UAAU,CAAC,MAA2E;AAAI,QAC/F,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,YAAM,MAAM,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACrE,SAAK;AACL,QACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClE,QACI;AAAY;AAA8B;AAAuB;AAAY,QAAtE,CAAC,MAA8B;AAAO,YAC3C,IAAI,MAAM,EAAE;AAClB,gBAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,oBAAC;AACzB,oBAAU,IAAI,EAAE,YAAY;AAC5B,oBAAU,MAAM,EAAE,MAAM,CAAC,MAAM;AAC/B,oBAAU,MAAM,EAAE,MAAM,CAAC,MAAM;AAC/B,oBAAU,KAAK,EAAE,MAAM,CAAC,KAAK;AAC7B,iBAAS,GAAQ,CAAC;AAClB,gBACQ,IAAI,MAAM,EAAE;AACpB,oBAAU,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACtC,iBAAS;AACT,gBACQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,aAAO;AACP,SAAK,EAAC;AACN,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAf,OAAO;AAAK,QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC7B,SAAK;AACL,QACI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AAC5C,SAAK;AACL,QACI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH,CAAC;AACD;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IAtE5D,mDAAyD;AAC3D;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,oDAAiD;AACnD;AAAQ;AAAiB;AAAgB;AAErC,IAFF,+DAAyC;AAC3C;AACC;AAAC;AAAI;AAGQ;AAGY;ACrB1B;AAAI;AAEM;AAMV,MAAa,uCAAuC;AACpD;AAEC;AACE;AACa;AAAmB;AAAQ,IAAlC,mBAAmB;AAAK,QAC7B,OAAO,IAAI,iCAAiC,EAAK,CAAC;AACtD,KAAG;AACH;mEATC,UAAU;;;;0BACT;AAAC;AAAC;AAAI;AAAkC;AAKP;ACbnC;AAAiB,MAUXA,WAAS,GAAG,CAAC,kCAAkC,EAAE,uCAAuC,CAAC;AAC/F;AACG;AAC4B;AAM/B,MAAa,sBAAsB;AACnC;AACE;AACE;AAEA;AAAQ,IAAH,OAAO,OAAO;AAAK,QACxB,OAAO;AACX,YAAM,QAAQ,EAAE,sBAAsB;AACtC,YAAM,SAAS,EAAE,CAAC,6BAA6B,CAAC;AAChD,SAAK,CAAC;AACN,KAAG;AACH;kDAfC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC,qBAAqB,CAAC;aAChC,SAAS,EAAE,CAAC,GAAGA,WAAS,CAAC,cAC1B;;;;;;;;;gKACI;AAAC;AAAC;AAAI;AAEV;AAGsB;AAAI;AAAC;AAAI;AAE5B;AAMc;AAAI;AAAC;AAKuhD","sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { DataTableTranslations } from '../models/data-table-translations.model';\nimport { DataTableConfig } from '../models/data-table-config.model';\n\nimport { DataTableStorageMode } from '../models/data-table-storage-mode.model';\nimport { DataTableSortOrder } from '../models/data-table-sort-order.model';\nimport { DataTableSelectMode } from '../models/data-table-select-mode.model';\nimport { DropdownSelectMode } from '../../dropdown/dropdown.module';\nimport { ViewPosition } from '../../utility/models/view-position.model';\n\nexport const DATA_TABLE_CONFIG = new InjectionToken<DataTableConfig>('dataTableConfig');\n\n/**\n * Data table config service\n * Manage all the global configurations of grid which can be overridden while importing the module.\n */\n@Injectable()\nexport class DataTableConfigService implements DataTableConfig {\n  // Table base config\n  public persistTableState = false;\n  public storageMode: DataTableStorageMode = 'session';\n  public multiColumnSortable = false;\n  public showHeader = false;\n  public title = '';\n  public width = undefined;\n  public minContentHeight: string | number = 200;\n  public minContentWidth = undefined;\n  public contentHeight = undefined;\n  public pageable = false;\n  public loadOnScroll = false;\n  public loadViewDistanceRatio = 1;\n  public showIndexColumn = false;\n  public indexColumnTitle = '#';\n  public rowSelectable = false;\n  public selectMode: DataTableSelectMode = 'single';\n  public showRowSelectCheckbox = true;\n  public showRowSelectAllCheckbox = false;\n  public showSubstituteRows = false;\n  public expandableRows = false;\n  public selectOnRowClick = false;\n  public expandOnRowClick = false;\n  public autoFetch = true;\n  public showLoadingSpinner = true;\n  public selectTrackBy = 'id';\n  public filterDebounceTime = 500;\n  public filterDebounce = true;\n  public showRefreshButton = false;\n  public showColumnSelector = false;\n  public columnSelectorWidth = 240;\n  public expanderColumnWidth: string | number = 30;\n  public indexColumnWidth: string | number = 30;\n  public selectionColumnWidth: string | number = 30;\n  public showRowExpandLoadingSpinner = false;\n  public offset = 0;\n  public limit = 10;\n  public maxLimit = 100;\n  public stateKeyPrefix = 'grid_state_';\n  public baseTranslations: DataTableTranslations = {\n    noDataMessage: {\n      header: 'Whoops!',\n      body: 'No data to display. Added data will appear here.',\n    },\n    pagination: {\n      limit: 'Limit:',\n      rangeKey: 'Results:',\n      rangeSeparator: 'of',\n      nextTooltip: 'Next',\n      previousTooltip: 'Previous',\n      lastTooltip: 'Last',\n      firstTooltip: 'First'\n    },\n    columnSelector: {\n      header: 'Show/Hide Column'\n    },\n    dropdownFilter: {\n      noDataMessage: 'No Results Available',\n      filterPlaceholder: 'Search',\n      selectedOptionWrapPlaceholder: 'Options',\n      selectPlaceholder: 'Select'\n    }\n  };\n\n  // Table column config\n  public sortable = false;\n  public sortOrder: DataTableSortOrder = '';\n  public filterable = false;\n  public filterPlaceholder = 'Search';\n  public columnResizable = false;\n  public columnVisible = true;\n  public showDropdownFilter = false;\n  public showFilterClearButton = true;\n\n  // Column dropdown filter options\n  public dropdownFilterMenuPosition: ViewPosition = 'bottom-left';\n  public dropdownFilterSelectMode: DropdownSelectMode = 'multi';\n  public dropdownFilterSearchable = true;\n  public dropdownFilterSearchDebounceTime = 500;\n  public dropdownFilterSearchDebounce = true;\n  public dropdownFilterWrapDisplaySelectLimit = 1;\n  public dropdownFilterGroupByField = undefined;\n  public dropdownFilterShowSelectedOptionRemoveButton = false;\n  public dropdownFilterShowClearSelectionButton = true;\n  public dropdownFilterMenuWidth = 320;\n  public dropdownFilterMenuHeight = 250;\n  public dropdownFilterMultiSelectOptionMaxWidth = 135;\n  public dropdownFilterCloseMenuOnSelect = true;\n  public dropdownFilterDynamicDimensionCalculation = true;\n  public dropdownFilterDynamicWidthRatio = 1.25;\n  public dropdownFilterDynamicHeightRatio = 1.25;\n\n  constructor(@Inject(DATA_TABLE_CONFIG) private dataTableConfig: DataTableConfig) {\n    if (dataTableConfig) {\n      Object.assign(this, dataTableConfig);\n    }\n  }\n\n  public set translations(value: DataTableTranslations) {\n    if (!value) {\n      return;\n    }\n\n    // all keys are object type.\n    for (const [key, val] of Object.entries(value)) {\n      this.baseTranslations[key] = { ...this.baseTranslations[key], ...val };\n    }\n  }\n\n  /**\n   * Returns translations.\n   */\n  public get translations(): DataTableTranslations {\n    return this.baseTranslations;\n  }\n\n  /**\n   * Get row select checkbox column.\n   */\n  public get showRowSelectCheckboxColumn(): boolean {\n    return this.rowSelectable && this.showRowSelectCheckbox;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs';\n\nimport { DataTableHeaderClickEventArgs } from '../models/data-table-header-click-event-args.model';\nimport { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableRowClickEventArgs } from '../models/data-table-row-click-event-args.model';\nimport { DataTableDoubleClickEventArgs } from '../models/data-table-double-click-event-args.model';\nimport { DataTableCellBindEventArgs } from '../models/data-table-cell-bind-event-args.model';\nimport { DataTableCellClickEventArgs } from '../models/data-table-cell-click-event-args.model';\n\nimport { DataFetchMode } from '../models/data-fetch-mode.enum';\n\nimport { DataTableComponent } from '../components/data-table/data-table.component';\nimport { DataTableColumnComponent } from '../components/data-table-column/data-table-column.component';\n\n/**\n * Data table event state service; Manage all internal data tale event streams.\n */\n@Injectable()\nexport class DataTableEventStateService {\n  public allRowSelectChangeStream = new EventEmitter<boolean>();\n  public dataFetchStream = new EventEmitter<DataFetchMode>();\n  public headerClickStream = new EventEmitter<DataTableHeaderClickEventArgs>();\n  public rowBindStream = new EventEmitter<DataTableRow<any>>();\n  public rowClickStream = new EventEmitter<DataTableRowClickEventArgs<any>>();\n  public rowDoubleClickStream = new EventEmitter<DataTableDoubleClickEventArgs<any>>();\n  public rowSelectChangeStream = new EventEmitter<any | any[]>();\n  public cellBindStream = new EventEmitter<DataTableCellBindEventArgs<any>>();\n  public cellClickStream = new EventEmitter<DataTableCellClickEventArgs<any>>();\n  public initStream = new EventEmitter<DataTableComponent>();\n  public dataBoundStream = new EventEmitter<void>();\n  public columnBind = new EventEmitter<DataTableColumnComponent>();\n  public fetchFilterOptionsStream = new ReplaySubject(1);\n  public staticDataSourceStream = new ReplaySubject<any[]>(1);\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableDynamicRowSpanExtractorCallback } from '../models/data-table-group-field-extractor-callback.model';\nimport { DataTableFilterValueExtractCallback } from '../models/data-table-filter-value-extract-callback.model';\nimport { DataTableDataBindCallback } from '../models/data-table-data-bind-callback.model';\n\n/**\n * Data table state manager service; Manage current data table state snapshot.\n */\n@Injectable()\nexport class DataTableDataStateService {\n  public id: string;\n  public allRowSelected = false;\n  public selectedRow: any;\n  public selectedRows: any[] = [];\n  public dataRows: DataTableRow<any>[] = [];\n  public itemCount: number;\n  public tableWidth: number;\n  public dataLoading = true;\n  public substituteRows: any[] = [];\n  public heardReload = false;\n  public currentSortPriority = 0;\n\n  public relativeParentElement: HTMLElement;\n  public onFilterValueExtract: DataTableFilterValueExtractCallback;\n  public onDataBind: DataTableDataBindCallback<any>;\n  public onDynamicRowSpanExtract: DataTableDynamicRowSpanExtractorCallback<any> = () => 1;\n\n  /**\n   * Get show no data overlay status.\n   * @return True if no data overlay should be shown.\n   */\n  public get showNoDataOverlay(): boolean {\n    return !this.dataRows.length && !this.dataLoading;\n  }\n\n  /**\n   * Get data table row unique id.\n   * @param append Target identifier.\n   * @param index Target index.\n   */\n  public getUniqueId(append: string, index: number): string {\n    return `${this.id}-dt-${append}-${index}`;\n  }\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { DataTableCellColorRenderCallback } from '../../models/data-table-cell-color-render-callback.model';\nimport { DataTableRow } from '../../models/data-table-row.model';\nimport { DataTableFilterFieldMapperCallback } from '../../models/data-table-filter-field-mapper-callback.model';\nimport { DataTableFilterExpressionCallback } from '../../models/data-table-filter-expression-callback.model';\n\nimport { DropdownSelectMode } from '../../../dropdown/dropdown.module';\nimport { DataTableSortOrder } from '../../models/data-table-sort-order.model';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { ViewPosition } from '../../../utility/models/view-position.model';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data table column component. Data table columns associated data is captured via this component.\n */\n@Component({\n  selector: 'ng-data-table-column',\n  template: ''\n})\nexport class DataTableColumnComponent implements OnInit, OnDestroy {\n  private filterValueExtractorSubscription: Subscription;\n\n  private currentSortOrder: DataTableSortOrder = '';\n  private baseSortOrder: DataTableSortOrder = '';\n\n  public actualWidth: number;\n\n  // Content Child Properties\n\n  @ContentChild('ngDataTableCell', { static: true })\n  public cellTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDataTableHeader', { static: true })\n  public headerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDataTableFilter', { static: true })\n  public filterTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownLoadingSpinner', { static: true })\n  public dropdownFilterLoadingSpinnerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownOption', { static: true })\n  public dropdownFilterOptionTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownOptionGroupHeader', { static: true })\n  public dropdownFilterOptionGroupHeaderTemplate: TemplateRef<any>;\n\n  // Callback event handlers\n\n  /**\n   * Filter expression event handler callback. Used to apply custom data filter expression logic.\n   */\n  @Input()\n  public filterExpression: DataTableFilterExpressionCallback;\n\n  /**\n   * Custom filter field map event handler callback. Used to extract filter field when showDropdownFilter option is true.\n   */\n  @Input()\n  public filterFieldMapper: DataTableFilterFieldMapperCallback;\n\n  /**\n   * Cell color render event handler callback.\n   */\n  @Input()\n  public onCellColorRender: DataTableCellColorRenderCallback<any>;\n\n  // Inputs\n\n  /**\n   * Column display title.\n   */\n  @Input()\n  public title: string;\n\n  /**\n   * Columns sortable if true. Show sort indicator on column title.\n   */\n  @Input()\n  public sortable: boolean;\n\n  /**\n   * Multi column sort priority. Lowest number will get the height precedence. Usage of same precedence number in\n   * multiple columns may lead to unexpected behaviors. This priority number will be displayed in the column header\n   * when multi column sorting is enabled hence, consider indexing accordingly.\n   */\n  @Input()\n  public sortPriority: number;\n\n  /**\n   * Set initial column sort order.\n   */\n  @Input()\n  public set sortOrder(value: DataTableSortOrder) {\n    this.currentSortOrder = value;\n    this.baseSortOrder = value;\n  }\n\n  /**\n   * Get initial column sort order.\n   */\n  public get sortOrder(): DataTableSortOrder {\n    return this.currentSortOrder;\n  }\n\n  /**\n   * Column filterable if true. Show filter options on filter header row when enabled.\n   */\n  @Input()\n  public filterable: boolean;\n\n  /**\n   * Column resizeable if true. Show column resize indicator on column right corner.\n   */\n  @Input()\n  public resizable: boolean;\n\n  /**\n   * Data item mapping field name.\n   */\n  @Input()\n  public field: string;\n\n  /**\n   * Filter field identifier. Fallback to field if not provided.\n   */\n  @Input()\n  public filterField: string;\n\n  /**\n   * Sort field identifier. Fallback to field if not provided.\n   */\n  @Input()\n  public sortField: string;\n\n  /**\n   * Column title CSS class names. Use space delimiter to separate class names.\n   */\n  @Input()\n  public cssClass: string;\n\n  /**\n   * Static column width in pixels or percentage.\n   */\n  @Input()\n  public width: number | string;\n\n  /**\n   * Render column if true. Else include in column selector but not rendered.\n   */\n  @Input()\n  public visible: boolean;\n\n  /**\n   * Show filed in column selector popup if true.\n   */\n  @Input()\n  public showInColumnSelector = true; // TODO: move to base conf\n\n  /**\n   * Filter placeholder value. Placeholder text to show on filter text box. Applicable only for none dropdown filter mode.\n   */\n  @Input()\n  public filterPlaceholder: string;\n\n  /**\n   * Applied filter value on initialize.\n   */\n  @Input()\n  public filter: any;\n\n  /**\n   * Show filter clear button if true. Applicable only for none dropdown filter mode.\n   */\n  @Input()\n  public showFilterClearButton: any;\n\n  /**\n   * Resize minimum limit. Column cannot be resized to fit less than the number of pixels specified here.\n   */\n  @Input()\n  public resizeMinLimit: number;\n\n  // Dropdown filter properties\n\n  /**\n   * Show dropdown filter if true. Filter data using dropdown filter.\n   */\n  @Input()\n  public showDropdownFilter: boolean;\n\n  /**\n   * Dropdown filter menu position. Placement of filter popup menu.\n   */\n  @Input()\n  public dropdownFilterMenuPosition: ViewPosition;\n\n  /**\n   * Dropdown select mode. Filter option select mode.\n   */\n  @Input()\n  public dropdownFilterSelectMode: DropdownSelectMode;\n\n  /**\n   * Dropdown filter searchable if true. Display search box within filter option menu.\n   */\n  @Input()\n  public dropdownFilterSearchable: boolean;\n\n  /**\n   * Dropdown filter search debounce time in milliseconds. Applicable only when dropdownFilterSearchDebounce is true.\n   */\n  @Input()\n  public dropdownFilterSearchDebounceTime: number;\n\n  /**\n   * Enable dropdown filter data search debounce with provided dropdownFilterSearchDebounceTime if true.\n   */\n  @Input()\n  public dropdownFilterSearchDebounce: boolean;\n\n  /**\n   * Dropdown filter show option select checkbox.\n   */\n  @Input()\n  public dropDownFilterShowOptionSelectCheckbox: boolean;\n\n  /**\n   * Dropdown filter selected items display limit.\n   */\n  @Input()\n  public dropdownFilterWrapDisplaySelectLimit: number;\n\n  /**\n   * Dropdown filter group by field name in item schema.\n   */\n  @Input()\n  public dropdownFilterGroupByField: string;\n\n  /**\n   * Dropdown filter show selected option remove button if true.\n   */\n  @Input()\n  public dropdownFilterShowSelectedOptionRemoveButton: boolean;\n\n  /**\n   * Dropdown filter show all select options clear button if true.\n   */\n  @Input()\n  public dropdownFilterShowClearSelectionButton: boolean;\n\n  /**\n   * Dropdown filter menu width in pixels.\n   */\n  @Input()\n  public dropdownFilterMenuWidth: number;\n\n  /**\n   * Dropdown filter menu height in pixels.\n   */\n  @Input()\n  public dropdownFilterMenuHeight: number;\n\n  /**\n   * Dropdown filter multi select option max width.\n   */\n  @Input()\n  public dropdownFilterMultiSelectOptionMaxWidth: number;\n\n  /**\n   * Dropdown filter close menu on select if true.\n   */\n  @Input()\n  public dropdownFilterCloseMenuOnSelect: boolean;\n\n  /**\n   * Dynamically calculate Dropdown filter menu dimensions relative to column width; dropdownFilterMenuWidth and\n   * dropdownFilterMenuHeight configuration are ignored when true.\n   */\n  @Input()\n  public dropdownFilterDynamicDimensionCalculation: boolean;\n\n  /**\n   * Dynamic dropdown view width ratio. Used for dynamic dimension calculation.\n   */\n  @Input()\n  public dropdownFilterDynamicWidthRatio: number;\n\n  /**\n   * Dynamic dropdown view height ratio. Used for dynamic dimension calculation.\n   */\n  @Input()\n  public dropdownFilterDynamicHeightRatio: number;\n\n  constructor(\n    private dataTableConfigService: DataTableConfigService,\n    private eventStateService: DataTableEventStateService,\n    private dataStateService: DataTableDataStateService) {\n    // Table column config\n    this.sortable = dataTableConfigService.sortable;\n    this.currentSortOrder = dataTableConfigService.sortOrder;\n    this.filterable = dataTableConfigService.filterable;\n    this.filterPlaceholder = dataTableConfigService.filterPlaceholder;\n    this.resizable = dataTableConfigService.columnResizable;\n    this.visible = dataTableConfigService.columnVisible;\n    this.showDropdownFilter = dataTableConfigService.showDropdownFilter;\n    this.showFilterClearButton = dataTableConfigService.showFilterClearButton;\n\n    // Dropdown filter config\n    this.dropdownFilterMenuPosition = dataTableConfigService.dropdownFilterMenuPosition;\n    this.dropdownFilterSelectMode = dataTableConfigService.dropdownFilterSelectMode;\n    this.dropdownFilterSearchable = dataTableConfigService.dropdownFilterSearchable;\n    this.dropdownFilterSearchDebounceTime = dataTableConfigService.dropdownFilterSearchDebounceTime;\n    this.dropdownFilterSearchDebounce = dataTableConfigService.dropdownFilterSearchDebounce;\n    this.dropdownFilterWrapDisplaySelectLimit = dataTableConfigService.dropdownFilterWrapDisplaySelectLimit;\n    this.dropdownFilterGroupByField = dataTableConfigService.dropdownFilterGroupByField;\n    this.dropdownFilterShowSelectedOptionRemoveButton = dataTableConfigService.dropdownFilterShowSelectedOptionRemoveButton;\n    this.dropdownFilterShowClearSelectionButton = dataTableConfigService.dropdownFilterShowClearSelectionButton;\n    this.dropdownFilterMenuWidth = dataTableConfigService.dropdownFilterMenuWidth;\n    this.dropdownFilterMenuHeight = dataTableConfigService.dropdownFilterMenuHeight;\n    this.dropdownFilterMultiSelectOptionMaxWidth = dataTableConfigService.dropdownFilterMultiSelectOptionMaxWidth;\n    this.dropdownFilterCloseMenuOnSelect = dataTableConfigService.dropdownFilterCloseMenuOnSelect;\n    this.dropdownFilterDynamicDimensionCalculation = dataTableConfigService.dropdownFilterDynamicDimensionCalculation;\n    this.dropdownFilterDynamicWidthRatio = dataTableConfigService.dropdownFilterDynamicWidthRatio;\n    this.dropdownFilterDynamicHeightRatio = dataTableConfigService.dropdownFilterDynamicHeightRatio;\n  }\n\n  /**\n   * Reset data sort order.\n   */\n  public resetSortOrder(): void {\n    this.currentSortOrder = this.baseSortOrder;\n  }\n\n  /**\n   * Get dynamic cell color.\n   * @param row Data row object.\n   * @return Cell color string.\n   */\n  public getCellColor(row: DataTableRow<any>) {\n    if (this.onCellColorRender !== undefined) {\n      return this.onCellColorRender(row, this);\n    }\n  }\n\n  /**\n   * Get new sort order upon sort click.\n   * @return New sort order enum value.\n   */\n  public getNewSortOrder(): DataTableSortOrder {\n    let newSortOrder: DataTableSortOrder;\n    switch (this.sortOrder) {\n      case 'asc':\n        newSortOrder = 'desc';\n        break;\n      case 'desc':\n        newSortOrder = '';\n        break;\n      case '':\n        newSortOrder = 'asc';\n        break;\n    }\n\n    return newSortOrder;\n  }\n\n  /**\n   * Get current sort state icon css class enabled state.\n   * @return Sort order icon css class collection object.\n   */\n  public getSortIconClass(): any {\n    return {\n      'sort-asc': this.sortOrder === 'asc',\n      'sort-dsc': this.sortOrder === 'desc',\n      'sort-reset': !this.sortOrder\n    };\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.filterValueExtractorSubscription) {\n      this.filterValueExtractorSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Component initialize lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    if (!this.cssClass && this.field) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.field)) {\n        this.cssClass = 'column-' + this.field;\n      } else {\n        this.cssClass = 'column-' + this.field.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    this.eventStateService.columnBind.emit(this);\n\n    if (this.dataTableConfigService.multiColumnSortable && this.sortable) {\n      if (this.sortOrder === '') {\n        if (this.sortPriority !== undefined) {\n          throw Error('[sortPriority] should be ignored when multi column sorting is enabled with natural sort order.');\n        }\n      } else {\n        if (this.sortPriority === undefined) {\n          throw Error('[sortPriority] is required when multi column sorting is enabled with an explicit sort order.');\n        }\n      }\n\n      if (this.sortPriority < 1) {\n        throw Error('[sortPriority] must be greater than 1.');\n      }\n\n      if (this.dataStateService.currentSortPriority < this.sortPriority) {\n        this.dataStateService.currentSortPriority = this.sortPriority;\n      }\n    }\n  }\n}\n","/**\n * Data table export mode model.\n */\nexport enum DataFetchMode {\n  /**\n   * Re-fetch data from source and load data after resetting table state.\n   */\n  HARD_RELOAD,\n\n  /**\n   * Re-fetch data from source and load data without resetting table state.\n   */\n  SOFT_RELOAD,\n\n  /**\n   * Load data without changing table state state.\n   */\n  SOFT_LOAD\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DataTableFilterEventArgs } from '../../models/data-table-filter-event-args.model';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\n/**\n * Data table column filter header component. Apply columns associated data filtering.\n */\n@Component({\n  exportAs: 'ngDataTableColumnFilterHeader',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColumnFilterHeader]',\n  templateUrl: './data-table-column-filter-header.component.html'\n})\nexport class DataTableColumnFilterHeaderComponent implements OnInit, OnDestroy {\n  private columnFilterStream = new Subject();\n\n  private customFilterSubscription: Subscription;\n  private columnFilterSubscription: Subscription;\n\n  public customFilterStream = new EventEmitter<DataTableFilterEventArgs>();\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(public config: DataTableConfigService, private eventStateService: DataTableEventStateService) {}\n\n  /**\n   * Component initialize lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    this.initCustomFilterEvent();\n    this.initDebounceDefaultFilterEvent();\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.customFilterSubscription) {\n      this.customFilterSubscription.unsubscribe();\n    }\n\n    if (this.columnFilterSubscription) {\n      this.columnFilterSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Initialize custom filter event.\n   */\n  private initCustomFilterEvent(): void {\n    this.customFilterSubscription = this.customFilterStream.subscribe((filterEventArgs: DataTableFilterEventArgs) => {\n      filterEventArgs.column.filter = filterEventArgs.filter;\n      this.onFilter();\n    });\n  }\n\n  /**\n   * Initialize debounce default filtering logic.\n   */\n  private initDebounceDefaultFilterEvent(): void {\n    this.columnFilterSubscription = this.columnFilterStream.pipe(debounceTime(this.config.filterDebounceTime)).subscribe(() => {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    });\n  }\n\n  /**\n   * Filter event handler.\n   */\n  public onFilter(): void {\n    if (this.config.filterDebounce) {\n      this.columnFilterStream.next();\n    } else {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll position stream service; Manage common scroll position observable.\n */\n@Injectable()\nexport class DataTableScrollPositionService {\n  public scrollPositionStream = new Subject<DataTableScrollPoint>();\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { DataTableFilterEventArgs } from '../../models/data-table-filter-event-args.model';\nimport { DataTableFilterOption } from '../../models/data-table-filter-option.model';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\nimport { DropdownComponent } from '../../../dropdown/components/dropdown/dropdown.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableScrollPositionService } from '../../services/data-table-scroll-position.service';\nimport { DataTableScrollPoint } from '../../../data-table/models/data-table-scroll-point.model';\n\n/**\n * Column filter template component. Render column filter template via this component.\n */\n@Component({\n  selector: 'ng-data-table-column-filter-template',\n  templateUrl: './data-table-column-filter-template.component.html'\n})\nexport class DataTableColumnFilterTemplateComponent implements OnInit, OnDestroy {\n  @Input()\n  public column: DataTableColumnComponent;\n\n  @Input()\n  public customFilterStream: Observable<DataTableFilterEventArgs>;\n\n  @Input()\n  public index: number;\n\n  @Output()\n  public filter = new EventEmitter();\n\n  public filterDataStream = new Subject<DataTableFilterOption[]>();\n\n  private fetchFilterOptionsStreamSubscription: Subscription;\n  private scrollPositionStreamSubscription: Subscription;\n\n  private filterDropdown: DropdownComponent;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService,\n    private scrollPositionService: DataTableScrollPositionService\n  ) {}\n\n  /**\n   * Component initialize lifecycle event.\n   */\n  public ngOnInit(): void {\n    if (this.column.showDropdownFilter) {\n      this.scrollPositionStreamSubscription = this.scrollPositionService.scrollPositionStream\n        .subscribe((pos: DataTableScrollPoint) => {\n          if (pos.isHorizontal) {\n            this.filterDropdown.close();\n          }\n        });\n\n      if (this.dataStateService.onFilterValueExtract) {\n        this.fetchFilterOptionsStreamSubscription = this.eventStateService.fetchFilterOptionsStream\n          .pipe(\n            switchMap(() => {\n              return this.dataStateService.onFilterValueExtract(this.column);\n            })\n          )\n          .subscribe((options: DataTableFilterOption[]) => {\n            setTimeout(() => this.filterDataStream.next(options), 0); // TODO: remove the timeout\n          });\n      }\n    }\n  }\n\n  /**\n   * Component destroy lifecycle event.\n   */\n  public ngOnDestroy(): void {\n    if (this.fetchFilterOptionsStreamSubscription) {\n      this.fetchFilterOptionsStreamSubscription.unsubscribe();\n    }\n\n    if (this.scrollPositionStreamSubscription) {\n      this.scrollPositionStreamSubscription.unsubscribe();\n    }\n\n    this.filterDataStream.complete();\n  }\n\n  public onFilterDropdownInit(filterDropdown: DropdownComponent): void {\n    this.filterDropdown = filterDropdown;\n  }\n\n  /**\n   * Clear current column filter value.\n   */\n  public clearFilter(): void {\n    this.column.filter = '';\n    this.filter.emit();\n  }\n}\n","const splitPathExpression = /[,[\\].]+?/;\n\nexport function get(obj: any, path: string): any {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  return String.prototype.split.call(path, splitPathExpression)\n    .filter(Boolean)\n    .reduce((res, key) => {\n      if (res !== null && typeof res === 'object') {\n        return res[key];\n      }\n\n      return undefined;\n    }, obj);\n}\n\nexport function orderBy(collection: any[], fields: string[], orders: Array<'asc'|'desc'>): any {\n  console.log(fields);\n  return collection.concat().sort((a: any, b: any) => {\n    for (let i = 0; i < fields.length; i++) {\n      const field = fields[i];\n      const order = orders[i];\n      if (a[field] > b[field]) {\n        return order === 'asc' ? 1 : -1;\n      }\n\n      if (a[field] < b[field]) {\n        return order === 'asc' ? -1 : 1;\n      }\n    }\n\n    return 0;\n  });\n}\n","import { Directive, EventEmitter, OnInit, Output } from '@angular/core';\n\n/**\n * Element initialize directive; Notify on target element initialize.\n */\n@Directive({\n  selector: '[ngInit]'\n})\nexport class InitDirective implements OnInit {\n  @Output()\n  public ngInit = new EventEmitter();\n\n  /**\n   * On directive initialize.\n   */\n  public ngOnInit(): void {\n    this.ngInit.emit();\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n/**\n * Element focus directive; Set focus to target element on initialize.\n */\n@Directive({\n  selector: '[ngFocus]'\n})\nexport class FocusDirective implements OnInit {\n  constructor(private el: ElementRef) {}\n\n  /**\n   * On directive initialize.\n   */\n  public ngOnInit(): void {\n    this.el.nativeElement.focus();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pixel converter pipe.\n * Append 'px' if value is number type, else return the same.\n */\n@Pipe({\n  name: 'ngPx'\n})\nexport class PixelConverterPipe implements PipeTransform {\n  /**\n   * Pipe transform implementation.\n   * @param value Source value.\n   * @returns Converted pixel value.\n   */\n  public transform(value: string | number): string {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return `${value}px`;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility config service holds all the global configurations of utility which can be overridden while\n * importing the module.\n */\n@Injectable()\nexport class UtilityConfigService {}\n","import { Injectable } from '@angular/core';\n\nexport type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/**\n * Element drag and drop service.\n */\n@Injectable()\nexport class DragAndDropService {\n  /**\n   * Register drag and drop event.\n   * @param event Mouse event reference.\n   * @param move Mouse move event handler.\n   * @param up Mouse up Event handler.\n   */\n  public drag(event: MouseEvent, { move, up }: { move: MoveHandler; up?: UpHandler }): void {\n    const startX = event.pageX;\n    const startY = event.pageY;\n    let x = startX;\n    let y = startY;\n    let moved = false;\n\n    const mouseMoveHandler = (mouseMoveEvent: MouseEvent): void => {\n      const dx = mouseMoveEvent.pageX - x;\n      const dy = mouseMoveEvent.pageY - y;\n      x = mouseMoveEvent.pageX;\n      y = mouseMoveEvent.pageY;\n      if (dx || dy) {\n        moved = true;\n      }\n\n      move(mouseMoveEvent, dx, dy, x, y);\n\n      mouseMoveEvent.preventDefault(); // to avoid text selection\n    };\n\n    const mouseUpHandler = (mouseUpEvent: MouseEvent): void => {\n      x = mouseUpEvent.pageX;\n      y = mouseUpEvent.pageY;\n\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n\n      if (up) {\n        up(mouseUpEvent, x, y, moved);\n      }\n    };\n\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Global reference service; List all global javascript references here.\n */\n@Injectable()\nexport class GlobalRefService {\n  private scrollbarWidthValue: number;\n\n  constructor() {\n    this.setScrollbarWidth();\n  }\n\n  /**\n   * Set scrollbar width of current browser environment; Ony set on browser environment to support SSR.\n   */\n  public setScrollbarWidth(): void {\n    if (this.scrollbarWidthValue !== undefined) {\n      return;\n    }\n\n    if (this.isBrowser) {\n      const outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.width = '100px';\n      outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n\n      document.body.appendChild(outer);\n\n      const widthNoScroll = outer.offsetWidth;\n      // force scrollbars\n      outer.style.overflow = 'scroll';\n\n      // add inner div\n      const inner = document.createElement('div');\n      inner.style.width = '100%';\n      outer.appendChild(inner);\n\n      const widthWithScroll = inner.offsetWidth;\n\n      // remove divs\n      outer.parentNode.removeChild(outer);\n\n      this.scrollbarWidthValue = widthNoScroll - widthWithScroll;\n    }\n  }\n\n  /**\n   * Get scrollbar width.\n   * @returns Scroll bar width.\n   */\n  public get scrollbarWidth(): number {\n    return this.scrollbarWidthValue;\n  }\n  /**\n   * Get window reference.\n   * @return Window reference.\n   */\n  public get window(): Window {\n    return window;\n  }\n\n  /**\n   * Is browser environment.\n   * @return True if current environment is browser.\n   */\n  public get isBrowser(): boolean {\n    return typeof window !== 'undefined';\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { fromEvent, Subject, Observable } from 'rxjs';\n\nimport { GlobalRefService } from './global-ref.service';\n\n/**\n * Resize handler service; Window resize global event handler.\n */\n@Injectable()\nexport class ResizeService {\n  public resize: Observable<Event>;\n\n  constructor(private globalRefService: GlobalRefService) {\n    if (this.globalRefService.isBrowser) {\n      this.resize = fromEvent(this.globalRefService.window, 'resize');\n    } else {\n      this.resize = new Subject();\n    }\n  }\n}\n","import { Injector, ComponentFactoryResolver, EmbeddedViewRef, ApplicationRef, ComponentRef, Type, Renderer2 } from '@angular/core';\n\nimport { take } from 'rxjs/operators';\n\nimport { Subscription } from 'rxjs';\n\nimport { ComponentLoader } from './component-loader.interface';\n\nimport { GlobalRefService } from './global-ref.service';\nimport { ResizeService } from './resize.service';\n\nimport { ComponentLoaderOptions } from '../models/component-loader-options.model';\n\n/**\n * Popover dynamic component loader; Responsible of dynamically rendering angular components to show popover layout.\n */\nexport class PopoverComponentLoader<T> implements ComponentLoader<T> {\n  private componentReference: ComponentRef<T>;\n  private isVisible: boolean;\n  private clickListener: () => void;\n  private touchStartListener: () => void;\n  private resizeEventSubscription: Subscription;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private globalRefService: GlobalRefService,\n    private renderer: Renderer2,\n    private resizeService: ResizeService\n  ) {\n    this.isVisible = false;\n  }\n\n  /**\n   * Register close on click outside event; Hide event is triggered only if click target is not included in\n   * exclusion elements collection.\n   * @param exclude - Exclude DOM element reference collection.\n   */\n  private registerClickOutside(...exclude: HTMLElement[]): void {\n    const trackOutsideClick = (event: Event) => {\n      if (!exclude.some(el => {\n        return el.contains(event.target as HTMLElement);\n      })) {\n        this.hide();\n      }\n    };\n\n    this.clickListener = this.renderer.listen('document', 'click', trackOutsideClick);\n    this.touchStartListener = this.renderer.listen('document', 'touchstart', trackOutsideClick);\n  }\n\n  /**\n   * Set dynamic popover position relative to parent.\n   * @param parentElement Parent element reference.\n   * @param options Component loader options.\n   */\n  private setPosition(parentElement: HTMLElement, options: ComponentLoaderOptions): void {\n    const holderElement =  options.relativeParentElement || parentElement;\n    const bodyClientRect = holderElement.getBoundingClientRect();\n    const elementClientRect = parentElement.getBoundingClientRect();\n\n    let left = 0;\n    let top = 0;\n\n    if (options.position.includes('right')) {\n      left = parentElement.offsetWidth;\n    }\n\n    if (options.position.includes('bottom')) {\n      top = parentElement.offsetHeight;\n    }\n\n    const componentElement = this.componentReference.location.nativeElement as HTMLElement;\n    componentElement.style.top = `${elementClientRect.top - bodyClientRect.top + top + options.floatTop}px`;\n    componentElement.style.left = `${elementClientRect.left - bodyClientRect.left + left + options.floatLeft}px`;\n    componentElement.style.position = 'absolute';\n    componentElement.style.display = 'block';\n\n    const childElement = componentElement.firstElementChild as HTMLElement;\n    if (childElement) {\n      if (options.position.includes('right')) {\n        childElement.style.right = '0px';\n      }\n\n      if (options.position.includes('top')) {\n        childElement.style.bottom = '0px';\n      }\n\n      childElement.style.position = 'absolute';\n    }\n\n    this.resizeEventSubscription = this.resizeService.resize.pipe(take(1)).subscribe(() => {\n      this.hide();\n    });\n  }\n\n  /**\n   * Render component if not available, else display hidden component.\n   * @param component Component class type.\n   * @param parentElement Parent element to append the target component.\n   * @param injector Component injector reference.\n   * @param options Component loader options object.\n   * @return Rendered component reference.\n   */\n  public show(component: Type<T>, parentElement: HTMLElement, injector: Injector, options: ComponentLoaderOptions): T {\n    options = Object.assign(\n      {\n        closeOnOutsideClick: true,\n        floatLeft: 0,\n        floatTop: 0,\n        position: 'bottom-left'\n      },\n      options\n    );\n\n    if (this.componentReference) {\n      this.setPosition(parentElement, options);\n      this.isVisible = true;\n      return;\n    }\n\n    // 1. Create a component reference from the component\n    this.componentReference = this.componentFactoryResolver.resolveComponentFactory(component).create(injector);\n\n    if (options.context) {\n      Object.assign(this.componentReference.instance, options.context);\n    }\n\n    // 2. Attach component to the appRef so that it's inside the ng component tree\n    this.appRef.attachView(this.componentReference.hostView);\n\n    // 3. Get DOM element from component\n    const domElem = (this.componentReference.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n    this.setPosition(parentElement, options);\n\n    // 4. Append DOM element to the body\n    (options.relativeParentElement || parentElement).appendChild(domElem);\n\n    // Trigger change detection\n    this.componentReference.changeDetectorRef.markForCheck();\n    this.componentReference.changeDetectorRef.detectChanges();\n\n    this.isVisible = true;\n\n    if (options.closeOnOutsideClick) {\n      this.registerClickOutside(parentElement, this.componentReference.location.nativeElement);\n    }\n\n    return this.componentReference.instance;\n  }\n\n  /**\n   * Hide component if visible.\n   * @return Rendered component reference.\n   */\n  public hide(): T {\n    if (this.componentReference) {\n      this.componentReference.location.nativeElement.style.display = 'none';\n      this.isVisible = false;\n      return this.componentReference.instance;\n    }\n  }\n\n  /**\n   * Toggle component display state or render if not available.\n   * @param component Component class type.\n   * @param parentElement Parent element to append the target component.\n   * @param injector Component injector reference.\n   * @param options Component loader options object.\n   * @return Rendered component reference.\n   */\n  public toggle(component: Type<T>, parentElement: HTMLElement, injector: Injector, options?: ComponentLoaderOptions): T {\n    return this.isVisible ? this.hide() : this.show(component, parentElement, injector, options);\n  }\n\n  /**\n   * Dispose rendered component reference and bindings.\n   */\n  public dispose(): void {\n    if (this.resizeEventSubscription) {\n      this.resizeEventSubscription.unsubscribe();\n    }\n\n    if (this.componentReference) {\n      this.appRef.detachView(this.componentReference.hostView);\n      this.componentReference.destroy();\n    }\n\n    if (this.clickListener) {\n      this.clickListener();\n      this.clickListener = null;\n    }\n\n    if (this.touchStartListener) {\n      this.touchStartListener();\n      this.touchStartListener = null;\n    }\n\n    this.componentReference = null;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Renderer2 } from '@angular/core';\n\nimport { ComponentLoader } from './component-loader.interface';\n\nimport { GlobalRefService } from './global-ref.service';\nimport { ResizeService } from './resize.service';\n\nimport { PopoverComponentLoader } from './popover-component-loader.class';\n\n/**\n * Popover component loader factory service.\n */\n@Injectable()\nexport class PopoverComponentLoaderFactoryService {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private globalRefService: GlobalRefService,\n    private resizeService: ResizeService\n  ) {}\n\n  /**\n   * Create new component loader.\n   * @param renderer Angular renderer reference.\n   * @return Popover component loader reference.\n   */\n  public createLoader<T>(renderer: Renderer2): ComponentLoader<T> {\n    return new PopoverComponentLoader<T>(this.componentFactoryResolver, this.appRef, this.globalRefService, renderer, this.resizeService);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Common validation regular expressions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  /**\n   * Unique id value validation patten expression.\n   */\n  public static readonly idPatternValidatorExpression = new RegExp('^[A-Za-z]+[\\\\w\\\\-]*$');\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InitDirective } from './directives/init.directive';\nimport { FocusDirective } from './directives/focus.directive';\n\nimport { PixelConverterPipe } from './pipes/pixel-converter.pipe';\n\nimport { UtilityConfigService } from './services/utility-config.service';\nimport { DragAndDropService } from './services/drag-and-drop.service';\nimport { GlobalRefService } from './services/global-ref.service';\nimport { PopoverComponentLoaderFactoryService } from './services/popover-component-loader-factory.service';\nimport { ResizeService } from './services/resize.service';\nimport { ValidatorService } from './services/validator.service';\n\nconst DIRECTIVES = [InitDirective, FocusDirective];\n\nconst PIPES = [PixelConverterPipe];\n\nconst PROVIDERS = [DragAndDropService, GlobalRefService, PopoverComponentLoaderFactoryService, ResizeService, ValidatorService];\n\n/**\n * Module representing utility providers, directives and pipes.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...DIRECTIVES, ...PIPES],\n  providers: [...PROVIDERS],\n  exports: [...DIRECTIVES, ...PIPES]\n})\nexport class UtilityModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: UtilityModule,\n      providers: [UtilityConfigService]\n    };\n  }\n}\n\nexport { ComponentLoader } from './services/component-loader.interface';\n\nexport { DragAndDropService } from './services/drag-and-drop.service';\nexport { GlobalRefService } from './services/global-ref.service';\nexport { UtilityConfigService } from './services/utility-config.service';\nexport { PopoverComponentLoaderFactoryService } from './services/popover-component-loader-factory.service';\n\nexport { PopoverComponentLoader } from './services/popover-component-loader.class';\n","import { Component, Input } from '@angular/core';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DragAndDropService } from '../../../utility/utility.module';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Column title header component. Render data table column headers.\n */\n@Component({\n  exportAs: 'ngDataTableColumnTitleHeader',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColumnTitleHeader]',\n  templateUrl: './data-table-column-title-header.component.html'\n})\nexport class DataTableColumnTitleHeaderComponent {\n  private resizeInProgress = false;\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(\n    private dragAndDropService: DragAndDropService,\n    private eventStateService: DataTableEventStateService,\n    public dataStateService: DataTableDataStateService,\n    public config: DataTableConfigService\n  ) {}\n\n  /**\n   * Header click event handler.\n   * @param column Data table column component reference.\n   * @param event Mouse event arguments object.\n   */\n  public onHeaderClick(column: DataTableColumnComponent, event: MouseEvent): void {\n    if (!this.resizeInProgress) {\n      this.sortData(column);\n      this.eventStateService.headerClickStream.emit({ column, event });\n    } else {\n      this.resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  /**\n   * Sort data event handler.\n   * @param column Data table column component reference.\n   */\n  private sortData(column: DataTableColumnComponent): void {\n    if (column.sortable) {\n      const prevSortOrder = column.sortOrder;\n      if (column.sortOrder) {\n        column.sortOrder = column.getNewSortOrder();\n      } else {\n        if (!this.config.multiColumnSortable) {\n          const sortColumns = this.columns.filter(item => item.sortable);\n          sortColumns.forEach((sortColumn: DataTableColumnComponent) => {\n            if (sortColumn !== column) {\n              sortColumn.sortOrder = '';\n            }\n          });\n        }\n\n        column.sortOrder = 'asc';\n      }\n\n      if (this.config.multiColumnSortable) {\n        if (column.sortOrder === '') {\n          const sortColumns = this.columns.filter(item => item.sortable);\n          sortColumns.forEach((sortColumn: DataTableColumnComponent) => {\n            if (sortColumn !== column && sortColumn.sortPriority > column.sortPriority) {\n              --sortColumn.sortPriority;\n            }\n          });\n\n          column.sortPriority = undefined;\n          --this.dataStateService.currentSortPriority;\n        } else {\n          if (!prevSortOrder) {\n            column.sortPriority = ++this.dataStateService.currentSortPriority;\n          }\n        }\n      }\n\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * Set column width.\n   * @param width Width value in pixels.\n   * @param column Data table column component reference.\n   */\n  public setColumnWidth(width: number, column: DataTableColumnComponent): void {\n    column.actualWidth = width;\n  }\n\n  /**\n   * Column resize event handler.\n   * @param event Resize mouse event.\n   * @param column Data table column component.\n   * @param columnElement Table header cell element DOM reference.\n   */\n  public onColumnResize(event: MouseEvent, column: DataTableColumnComponent, columnElement: HTMLTableHeaderCellElement): void {\n    this.resizeInProgress = true;\n\n    this.dragAndDropService.drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        const newWidth = columnElement.offsetWidth + dx;\n        if (column.resizeMinLimit !== undefined && newWidth < column.resizeMinLimit) {\n          return;\n        }\n\n        column.actualWidth = newWidth;\n        let totalWidth = 0;\n\n        this.columns.forEach(col => {\n          col.width = col.actualWidth;\n          totalWidth += col.width;\n        });\n\n        this.dataStateService.tableWidth = totalWidth;\n      }\n    });\n  }\n\n  /**\n   * Set all row selected state.\n   * @param value All row selected status.\n   */\n  public set allRowSelected(value: boolean) {\n    this.dataStateService.allRowSelected = value;\n    this.allRowSelectedChanged(this.dataStateService.allRowSelected);\n    this.eventStateService.allRowSelectChangeStream.emit(this.dataStateService.allRowSelected);\n  }\n\n  /**\n   * Get all row selected state.\n   */\n  public get allRowSelected(): boolean {\n    return this.dataStateService.allRowSelected;\n  }\n\n  /**\n   * All row select change event handler.\n   * @param selectedState Row selected status.\n   */\n  private allRowSelectedChanged(selectedState: boolean): void {\n    this.dataStateService.dataRows.forEach(row => {\n      const id = get(row.item, this.config.selectTrackBy);\n      const index = this.dataStateService.selectedRows.indexOf(id);\n      if (selectedState && index < 0) {\n        this.dataStateService.selectedRows.push(id);\n      } else if (!selectedState && index > -1) {\n        this.dataStateService.selectedRows.splice(index, 1);\n      }\n\n      row.selected = selectedState;\n    });\n\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n  }\n\n  /**\n   * Get all row select checkbox display status.\n   * @return True if all row select checkbox should be displayed.\n   */\n  public get showAllRowSelectCheckbox(): boolean {\n    return this.config.selectMode === 'multi' && this.config.showRowSelectAllCheckbox;\n  }\n\n  public showSortPriorityLabel(column: DataTableColumnComponent): boolean {\n    return !!(this.config.multiColumnSortable && this.dataStateService.currentSortPriority > 1 && column.sortPriority);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\n\n/**\n * Data table column selector component. Toggle display state of columns via this popup component.\n */\n@Component({\n  selector: 'ng-data-table-column-selector',\n  templateUrl: './data-table-column-selector.component.html'\n})\nexport class DataTableColumnSelectorComponent {\n  constructor(public dataStateService: DataTableDataStateService, public config: DataTableConfigService) {}\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  @Input()\n  public width: number|string;\n}\n","import { Component, Injector, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { ComponentLoader, PopoverComponentLoaderFactoryService } from '../../../utility/utility.module';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnSelectorComponent } from '../data-table-column-selector/data-table-column-selector.component';\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data table header component. Render table title header with column selector widget.\n */\n@Component({\n  selector: 'ng-data-table-header',\n  templateUrl: './data-table-header.component.html'\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  private componentLoader: ComponentLoader<DataTableColumnSelectorComponent>;\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(\n    private componentLoaderFactory: PopoverComponentLoaderFactoryService,\n    private injector: Injector,\n    private eventStateService: DataTableEventStateService,\n    private renderer: Renderer2,\n    public dataStateService: DataTableDataStateService,\n    public config: DataTableConfigService\n  ) {\n    this.componentLoader = this.componentLoaderFactory.createLoader<DataTableColumnSelectorComponent>(this.renderer);\n  }\n\n  /**\n   * Toggle column selector.\n   * @param element DOM element reference.\n   */\n  public toggleColumnSelector(element: HTMLElement): void {\n    this.componentLoader.toggle(DataTableColumnSelectorComponent, element, this.injector, {\n      // relativeParent: element, // this.dataStateService.relativeParentElement,\n      context: {\n        columns: this.columns,\n        width: this.config.columnSelectorWidth,\n      },\n      position: 'bottom-right'\n    });\n  }\n\n  /**\n   * On data reload click event handler.\n   */\n  public onReload(): void {\n    this.eventStateService.dataFetchStream.next(DataFetchMode.HARD_RELOAD);\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    this.componentLoader.dispose();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\n\n/**\n * Data table column group component. This component wraps data table column groups.\n */\n@Component({\n  exportAs: 'ngDataTableColGroup',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColGroup]',\n  templateUrl: './data-table-col-group.component.html'\n})\nexport class DataTableColGroupComponent {\n  @Input()\n  public columns: DataTableColumnComponent;\n\n  constructor(public config: DataTableConfigService) {}\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { ResizeService } from '../../../utility/services/resize.service';\n\n/**\n * Data table pagination component. Render data table paginator widget.\n */\n@Component({\n  selector: 'ng-data-table-pagination',\n  templateUrl: './data-table-pagination.component.html'\n})\nexport class DataTablePaginationComponent implements OnInit {\n  @ViewChild('paginationContainer', { static: true })\n  private paginationContainer: ElementRef<HTMLElement>;\n\n  public isMobile = false;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService,\n    private resizeService: ResizeService\n  ) {}\n\n  /**\n   * Set mobile mode state.\n   */\n  private setMobileModeState(): void {\n    this.isMobile = this.paginationContainer.nativeElement.clientWidth < 767;\n  }\n\n  /**\n   * First page click event handler.\n   */\n  public firstPageClick(): void {\n    this.config.offset = 0;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Previous page click event handler.\n   */\n  public previousPageClick(): void {\n    this.config.offset = this.config.offset - Math.min(this.config.limit, this.config.offset);\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Next page click event handler.\n   */\n  public nextPageClick(): void {\n    this.config.offset = this.config.offset + this.config.limit;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Last page click event handler.\n   */\n  public lastPageClick(): void {\n    this.config.offset = (this.maxPage - 1) * this.config.limit;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Get maximum page count.\n   */\n  public get maxPage(): number {\n    return Math.ceil(this.dataStateService.itemCount / this.config.limit);\n  }\n\n  /**\n   * Get page number.\n   */\n  public get page(): number {\n    return Math.floor(this.config.offset / this.config.limit) + 1;\n  }\n\n  /**\n   * Check limit invalid status. True if limit is invalid.\n   * @param element Limit input DOM element.\n   * @return Invalid status.\n   */\n  public isInvalidLimit(element: HTMLInputElement): boolean {\n    const limit = Number(element.value);\n    return element.value === '' || limit > this.config.maxLimit || limit < 1;\n  }\n\n  /**\n   * On page size change event handler.\n   * @param element HTML input element.\n   */\n  public onPageSizeChange(element: HTMLInputElement): void {\n    if (this.isInvalidLimit(element)) {\n      element.value = String(this.config.limit);\n      return;\n    }\n\n    const limit = Number(element.value);\n    if (this.config.limit !== limit) {\n      this.config.offset = 0;\n      this.config.limit = limit;\n      this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * On page size revert event handler.\n   * @param element HTML input element.\n   */\n  public onPageSizeRevert(element: HTMLInputElement): void {\n    element.value = String(this.config.limit);\n  }\n\n  /**\n   * Is invalid page index; True if page index is invalid.\n   * @param element Page index DOM element.\n   * @return Invalid status.\n   */\n  public isInvalidPageIndex(element: HTMLInputElement): boolean {\n    const page = Number(element.value);\n    return element.value === '' || page > this.maxPage || page < 1;\n  }\n\n  /**\n   * On page size change event handler.\n   * @param element HTML input element.\n   */\n  public onPageIndexChange(element: HTMLInputElement): void {\n    if (this.isInvalidPageIndex(element)) {\n      element.value = String(this.page);\n      return;\n    }\n\n    const page = Number(element.value);\n    if (this.page !== page) {\n      this.config.offset = (page - 1) * this.config.limit;\n      this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * On page size revert event handler.\n   * @param element HTML input element.\n   */\n  public onPageIndexRevert(element: HTMLInputElement): void {\n    element.value = String(this.page);\n  }\n\n  /**\n   * Get previous page availability status.\n   */\n  public get hasPrevious(): boolean {\n    return this.config.offset <= 0;\n  }\n\n  /**\n   * Get next page availability status.\n   */\n  public get hasNext(): boolean {\n    return this.config.offset + this.config.limit >= this.dataStateService.itemCount;\n  }\n\n  /**\n   * Get start row index.\n   */\n  public get startRowIndex(): number {\n    return this.config.offset + 1;\n  }\n\n  /**\n   * Get end row index.\n   */\n  public get endRowIndex(): number {\n    return Math.min(this.config.offset + this.config.limit, this.dataStateService.itemCount);\n  }\n\n  /**\n   * Prevent invalid key press.\n   * @param event Keyboard event argument object.\n   */\n  public preventInvalidKeyPress(event: KeyboardEvent): void {\n    if (\n      (event.key >= '0' && event.key <= '9') ||\n      event.key === 'ArrowLeft' ||\n      event.key === 'ArrowRight' ||\n      event.key === 'Delete' ||\n      event.key === 'Backspace' ||\n      event.key === 'Escape' ||\n      event.key === 'Enter'\n    ) {\n      return;\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * component init lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    this.setMobileModeState();\n\n    this.resizeService.resize.pipe(debounceTime(200)).subscribe(() => {\n      this.setMobileModeState();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTableRequestParams } from '../models/data-table-request-params.model';\n\nimport { DataTableStorageMode } from '../models/data-table-storage-mode.model';\n\nimport { GlobalRefService } from '../../utility/utility.module';\nimport { DataTableConfigService } from './data-table-config.service';\n\n/**\n * Data table persistence service; Manage data table state when persist state options is enabled.\n */\n@Injectable()\nexport class DataTablePersistenceService {\n  private storage: Storage;\n\n  constructor(private globalRefService: GlobalRefService, private config: DataTableConfigService) {}\n\n  /**\n   * Set table state storage mode.\n   * @param value Storage mode.\n   */\n  public set storageMode(value: DataTableStorageMode) {\n    if (this.globalRefService.isBrowser) {\n      if (value === 'local') {\n        this.storage = this.globalRefService.window.localStorage;\n      } else {\n        this.storage = this.globalRefService.window.sessionStorage;\n      }\n    }\n  }\n\n  /**\n   * Set table state by identifier.\n   * @param id Table identifier.\n   * @param version Data version.\n   * @param value Data table request parameters object.\n   */\n  public setState(id: string, value: DataTableRequestParams, version: string = 'v1'): void {\n    if (this.globalRefService.isBrowser) {\n      const data = {\n        ver: version,\n        val: value\n      };\n      this.storage.setItem(`${this.config.stateKeyPrefix}${id}`, JSON.stringify(data));\n    }\n  }\n\n  /**\n   * Get table state by identifier.\n   * @param id Table identifier.\n   * @param version Data version.\n   * @return Data table request params object.\n   */\n  public getState(id: string, version: string = 'v1'): DataTableRequestParams {\n    if (this.globalRefService.isBrowser) {\n      const data = JSON.parse(this.storage.getItem(`${this.config.stateKeyPrefix}${id}`));\n\n      if (data && data.ver === version) {\n        return data.val;\n      }\n    }\n\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, ReplaySubject, Subscription, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { orderBy, get } from '../../utility/services/object-utility.class';\n\nimport { DataTableRequestParams } from '../models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../models/data-table-query-result.model';\nimport { DataTableFilterOption } from '../models/data-table-filter-option.model';\nimport { DataTableQueryField } from '../models/data-table-query-field.model';\n\nimport { DataTableColumnComponent } from '../components/data-table-column/data-table-column.component';\n\n/**\n * Data table resource service; Manage data table client side data querying.\n */\n@Injectable()\nexport class DataTableResourceService<T> {\n  private itemDataStream: ReplaySubject<T[]>;\n  private dataSourceSubscription: Subscription;\n\n  /**\n   * Set data source stream to query.\n   * @param dataSource Data source stream.\n   */\n  public setDataSource(dataSource: Observable<T[]>): void {\n    this.dispose();\n\n    if (this.itemDataStream && !this.itemDataStream.closed) {\n      this.itemDataStream.complete();\n    }\n\n    this.itemDataStream = new ReplaySubject<T[]>(1);\n    this.dataSourceSubscription = dataSource.subscribe((items: T[]) => {\n      this.itemDataStream.next(items);\n    });\n  }\n\n  /**\n   * Query items by data table request params.\n   * @param params Data table parameters object.\n   * @return Query result stream.\n   */\n  public query(params: DataTableRequestParams): Observable<DataTableQueryResult<T>> {\n    return this.itemDataStream.pipe(\n      switchMap((items: T[]) => {\n        let itemCount = items.length;\n        let result: T[] = items.slice();\n\n        if (params.fields.length) {\n          const filterFields = params.fields.filter(field => field.filterable);\n\n          if (filterFields.length) {\n            result = items.filter(item => {\n              return filterFields.every((filterColumn: DataTableQueryField) => {\n                if (filterColumn.filterExpression) {\n                  return filterColumn.filterExpression(item, filterColumn.field, filterColumn.filterValue);\n                }\n\n                if (filterColumn.filterValue === undefined || filterColumn.filterValue === '') {\n                  return true;\n                }\n\n                const fieldValue = get(item, filterColumn.field);\n                if (fieldValue === undefined) {\n                  return true;\n                }\n\n                if (Array.isArray(filterColumn.filterValue)) {\n                  return filterColumn.filterValue.length === 0 || filterColumn.filterValue.includes(fieldValue);\n                }\n\n                const value = String(fieldValue).toLowerCase();\n                const filterValue = String(filterColumn.filterValue).toLowerCase();\n                return value.includes(filterValue);\n              });\n            });\n            itemCount = result.length;\n          }\n\n          const sortColumns = params.fields.filter((column: DataTableQueryField) => {\n            return column.sortable && column.sortOrder !== '';\n          });\n\n          if (sortColumns.length) {\n            let orderedSortColumns = sortColumns;\n            if (sortColumns.length > 1) {\n              orderedSortColumns = sortColumns.concat().sort((a, b) => {\n                return a.sortPriority - b.sortPriority;\n              });\n            }\n\n            const orderParams = orderedSortColumns.reduce((accumulator: any, column: DataTableQueryField) => {\n                if (accumulator) {\n                  accumulator.fields.push(column.field);\n                  accumulator.orders.push(column.sortOrder);\n                }\n\n                return accumulator;\n              },\n              {\n                fields: [],\n                orders: []\n              }\n            );\n\n            result = orderBy(result, orderParams.fields, orderParams.orders);\n          }\n        }\n\n        if (params.offset !== undefined) {\n          const offset = params.offset + 1 > result.length ? 0 : params.offset;\n\n          if (params.limit === undefined) {\n            result = result.slice(offset, result.length);\n          } else {\n            result = result.slice(offset, offset + params.limit);\n          }\n        }\n\n        return of({\n          items: result,\n          count: itemCount\n        });\n      })\n    );\n  }\n\n  /**\n   * Extract data table filter options.\n   * @param filterColumn Data table column component.\n   * @return Filter options collection stream.\n   */\n  public extractFilterOptions(filterColumn: DataTableColumnComponent): Observable<DataTableFilterOption[]> {\n    return this.itemDataStream.pipe(\n      switchMap((items: T[]) => {\n        const filteredItems = items\n          .reduce((acc: DataTableFilterOption[], item: T, index: number): DataTableFilterOption[] => {\n            if (filterColumn.filterFieldMapper) {\n              return acc.concat(filterColumn.filterFieldMapper(item, index));\n            }\n\n            const filterField = filterColumn.filterField || filterColumn.field;\n            const filterValue = get(item, filterField);\n            acc.push({\n              key: filterValue,\n              value: filterValue\n            });\n\n            return acc;\n          }, [])\n          .filter((value: DataTableFilterOption, index, self) => {\n            return self.findIndex(item => item.key === value.key) === index;\n          });\n\n        return of(filteredItems);\n      })\n    );\n  }\n\n  /**\n   * Dispose client data source streams.\n   */\n  public dispose(): void {\n    if (this.dataSourceSubscription) {\n      this.dataSourceSubscription.unsubscribe();\n      this.dataSourceSubscription = null;\n    }\n\n    if (this.itemDataStream && !this.itemDataStream.closed) {\n      this.itemDataStream.complete();\n    }\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  AfterContentInit,\n  forwardRef,\n  ElementRef,\n  ViewChild,\n  OnInit,\n  NgZone\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription, Observable, of, Subject } from 'rxjs';\nimport { catchError, debounceTime, switchMap } from 'rxjs/operators';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DataTableFilterValueExtractCallback } from '../../models/data-table-filter-value-extract-callback.model';\nimport { DataTableCellBindEventArgs } from '../../models/data-table-cell-bind-event-args.model';\nimport { DataTableCellClickEventArgs } from '../../models/data-table-cell-click-event-args.model';\nimport { DataTableHeaderClickEventArgs } from '../../models/data-table-header-click-event-args.model';\nimport { DataTableDoubleClickEventArgs } from '../../models/data-table-double-click-event-args.model';\nimport { DataTableRowClickEventArgs } from '../../models/data-table-row-click-event-args.model';\nimport { DataTableRow } from '../../models/data-table-row.model';\nimport { DataTableRequestParams } from '../../models/data-table-request-params.model';\nimport { DataTableTranslations } from '../../models/data-table-translations.model';\nimport { DataTableDynamicRowSpanExtractorCallback } from '../../models/data-table-group-field-extractor-callback.model';\nimport { DataTableQueryResult } from '../../models/data-table-query-result.model';\nimport { DataTableDataBindCallback } from '../../models/data-table-data-bind-callback.model';\nimport { DataTableFilterOption } from '../../models/data-table-filter-option.model';\nimport { DataTableUniqueField } from '../../models/data-table-unique-field.model';\n\nimport { DataTableSelectMode } from '../../models/data-table-select-mode.model';\nimport { DataTableStorageMode } from '../../models/data-table-storage-mode.model';\nimport { DataTableScrollPoint } from '../../models/data-table-scroll-point.model';\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DragAndDropService, GlobalRefService } from '../../../utility/utility.module';\nimport { ValidatorService } from '../../../utility/services/validator.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTablePersistenceService } from '../../services/data-table-persistence.service';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableScrollPositionService } from '../../services/data-table-scroll-position.service';\nimport { DataTableResourceService } from '../../services/data-table-resource.service';\n\n/**\n * Data table component; Data table entry component.\n */\n@Component({\n  selector: 'ng-data-table',\n  templateUrl: './data-table.component.html',\n  providers: [\n    DataTableConfigService,\n    DataTableEventStateService,\n    DataTablePersistenceService,\n    DataTableDataStateService,\n    DataTableScrollPositionService,\n    DataTableResourceService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DataTableComponent),\n      multi: true\n    }\n  ]\n})\nexport class DataTableComponent implements OnDestroy, OnInit, AfterContentInit, ControlValueAccessor {\n  private rowSelectChangeSubscription: Subscription;\n  private dataFetchStreamSubscription: Subscription;\n  private scrollPositionSubscription: Subscription;\n\n  /**\n   * Data table column component collection.\n   */\n  @ContentChildren(DataTableColumnComponent)\n  public columns: QueryList<DataTableColumnComponent>;\n\n  /**\n   * Template to display when data row is expanded for detail view.\n   */\n  @ContentChild('ngDataTableRowExpand', { static: true })\n  public rowExpandTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display when data set is empty.\n   */\n  @ContentChild('ngDataTableNoRecords', { static: true })\n  public noRecordsTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display while loading data.\n   */\n  @ContentChild('ngDataTableLoadingSpinner', { static: true })\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display while row is expanding to load detail view.\n   */\n  @ContentChild('ngDataTableRowExpandLoadingSpinner', { static: true })\n  public rowExpandLoadingSpinnerTemplate: TemplateRef<any>;\n\n  /**\n   * Data table self DOM element reference.\n   */\n  @ViewChild('dataTableElement', { static: true })\n  public dataTableElement: ElementRef<HTMLDivElement>;\n\n  // Event handlers\n\n  /**\n   * Data table initialize event handler.\n   * Triggered after data table initialize.\n   */\n  @Output()\n  public init: EventEmitter<DataTableComponent>;\n\n  /**\n   * Row selected state change event handler.\n   * Triggered when table row selected state change.\n   */\n  @Output()\n  public rowSelectChange: EventEmitter<any | any[]>;\n\n  /**\n   * Row click event handler.\n   * Triggered when data row is clicked.\n   */\n  @Output()\n  public rowClick: EventEmitter<DataTableRowClickEventArgs<any>>;\n\n  /**\n   * Row double click event handler.\n   * Triggered when data row is double clicked.\n   */\n  @Output()\n  public rowDoubleClick: EventEmitter<DataTableDoubleClickEventArgs<any>>;\n\n  /**\n   * Header click event handler.\n   * Triggered when header column clicked.\n   */\n  @Output()\n  public headerClick: EventEmitter<DataTableHeaderClickEventArgs>;\n\n  /**\n   * All row select change event handler.\n   * Triggered when all row select state changed.\n   */\n  @Output()\n  public allRowSelectChange: EventEmitter<boolean>;\n\n  /**\n   * Cell click event handler.\n   * Triggered when clicked on a cell.\n   */\n  @Output()\n  public cellClick: EventEmitter<DataTableCellClickEventArgs<any>>;\n\n  /**\n   * Data bound event handler.\n   * Triggered after data bind.\n   */\n  @Output()\n  public dataBound: EventEmitter<void>;\n\n  /**\n   * Row bind event handler.\n   * Trigger on each row data bind.\n   */\n  @Output()\n  public rowBind: EventEmitter<DataTableRow<any>>;\n\n  /**\n   * Column bind event handler.\n   * Triggered after column data bind.\n   */\n  @Output()\n  public columnBind: EventEmitter<DataTableColumnComponent>;\n\n  /**\n   * Cell bind event handler.\n   * Triggered after data table cell data bind.\n   */\n  @Output()\n  public cellBind: EventEmitter<DataTableCellBindEventArgs<any>>;\n\n  // Input Events\n\n  /**\n   * Set data bind event handler callback. This handler is fired on each data fetch request.\n   */\n  @Input()\n  public set onDataBind(value: DataTableDataBindCallback<any>) {\n    this.dataStateService.onDataBind = value;\n  }\n\n  /**\n   * Set filter value extract event handler callback. Used to extract filter value collection dynamically when\n   * explicit data bind functionality is used with onDataBind callback.\n   */\n  @Input()\n  public set onFilterValueExtract(value: DataTableFilterValueExtractCallback) {\n    this.dataStateService.onFilterValueExtract = value;\n  }\n\n  /**\n   * Set on dynamic row span extract event handler callback.\n   */\n  @Input()\n  public set onDynamicRowSpanExtract(value: DataTableDynamicRowSpanExtractorCallback<any>) {\n    this.dataStateService.onDynamicRowSpanExtract = value;\n  }\n\n  // Input parameters\n\n  /**\n   * Set static data items collection. No need to set data source when static items collection is provided.\n   */\n  @Input()\n  public set items(value: any[]) {\n    if (!value) {\n      return;\n    }\n\n    this.eventStateService.staticDataSourceStream.next(value);\n  }\n\n  /**\n   * Set data source observable. This observable is used to retrieve row data for binding.\n   */\n  @Input()\n  public set dataSource(source: Observable<any[]>) {\n    this.initDataSource(source);\n  }\n\n  /**\n   * Set data table unique identifier.\n   */\n  @Input()\n  public set id(value: string) {\n    if (!ValidatorService.idPatternValidatorExpression.test(value)) {\n      throw Error('Invalid [id] input value. Unique identifier parameter only accept string begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (\"-\"), underscores (\"_\").');\n    }\n\n    this.dataStateService.id = value;\n  }\n\n  /**\n   * Set persist table state on provided storage mode if true. Depends on storageMode property.\n   */\n  @Input()\n  public set persistTableState(value: boolean) {\n    this.config.persistTableState = value;\n  }\n\n  /**\n   * Set storage mode to persist table state. Only applicable when persistTableState is true.\n   */\n  @Input()\n  public set storageMode(value: DataTableStorageMode) {\n    this.dataTableStateService.storageMode = value;\n  }\n\n  /**\n   * Set multiple column sortable if true. Only applicable for sortable true columns.\n   */\n  @Input()\n  public set multiColumnSortable(value: boolean) {\n    this.config.multiColumnSortable = value;\n  }\n\n  /**\n   * Set table header bar visible if true.\n   */\n  @Input()\n  public set showHeader(value: boolean) {\n    this.config.showHeader = value;\n  }\n\n  /**\n   * Set title to be shown in the header. Only applicable when showHeader is true.\n   */\n  @Input()\n  public set title(value: string) {\n    this.config.title = value;\n  }\n\n  /**\n   * Set width value in pixels. Can be used to set the width of teh table (responsive if not set).\n   */\n  @Input()\n  public set width(value: string | number) {\n    this.config.width = value;\n  }\n\n  /**\n   * Set minimum table content height value in pixels. Can be used to set the minimum height of the table content area.\n   */\n  @Input()\n  public set minContentHeight(value: string | number) {\n    this.config.minContentHeight = value;\n  }\n\n  /**\n   * Minimum table content width value in pixels. Can be used to set the minimum width of the table content area.\n   */\n  @Input()\n  public set minContentWidth(value: string | number) {\n    this.config.minContentWidth = value;\n  }\n\n  /**\n   * Table content height value in pixels. This configuration can be used to enable table content vertical\n   * scrolling for responsive design.\n   */\n  @Input()\n  public set contentHeight(value: string | number) {\n    this.config.contentHeight = value;\n  }\n\n  /**\n   * Show pagination bar if true. Depends on offset and limit values. Trigger dataLoad event with offset\n   * and limit values.\n   */\n  @Input()\n  public set pageable(value: boolean) {\n    this.config.pageable = value;\n  }\n\n  /**\n   * Enable scrolling based on-demand data loading functionality if true. Trigger dataLoad event with offset\n   * and limit values when scroll to bottom until data source exhaust.\n   */\n  @Input()\n  public set loadOnScroll(value: boolean) {\n    this.config.loadOnScroll = value;\n  }\n\n  /**\n   * Set view height distance ratio to trigger data fetch on scroll. Applicable only when load on scroll mode is enabled.\n   */\n  @Input()\n  public set loadViewDistanceRatio(value: number) {\n    this.config.loadViewDistanceRatio = value;\n  }\n\n  /**\n   * Set auto generated index column with row numbering if true.\n   */\n  @Input()\n  public set showIndexColumn(value: boolean) {\n    this.config.showIndexColumn = value;\n  }\n\n  /**\n   * Set index column header title. Applicable when showIndexColumn is true.\n   */\n  @Input()\n  public set indexColumnTitle(value: string) {\n    this.config.indexColumnTitle = value;\n  }\n\n  /**\n   * Set row select checkbox and select state if true.\n   */\n  @Input()\n  public set rowSelectable(value: boolean) {\n    this.config.rowSelectable = value;\n  }\n\n  /**\n   * Data table row select mode. Applicable only when rowSelectable is true.\n   */\n  @Input()\n  public set selectMode(value: DataTableSelectMode) {\n    this.config.selectMode = value;\n  }\n\n  /**\n   * Set select all row checkbox on column header visible if true.\n   * Only applicable when showRowSelectCheckbox, rowSelectable is true & item selectMode is  multi.\n   */\n  @Input()\n  public set showRowSelectCheckbox(value: boolean) {\n    this.config.showRowSelectCheckbox = value;\n  }\n\n  /**\n   * Set select all row checkbox on column header visible if true.\n   * Only applicable when showRowSelectCheckbox, rowSelectable is true & item selectMode is  multi.\n   */\n  @Input()\n  public set showRowSelectAllCheckbox(value: boolean) {\n    this.config.showRowSelectAllCheckbox = value;\n  }\n\n  /**\n   * Set substitute rows visible if true. Fill with empty rows when row count < limit.\n   */\n  @Input()\n  public set showSubstituteRows(value: boolean) {\n    this.config.showSubstituteRows = value;\n  }\n\n  /**\n   * Set row expander visible if true. Render ngDataTableExpand template on expand click.\n   */\n  @Input()\n  public set expandableRows(value: boolean) {\n    this.config.expandableRows = value;\n  }\n\n  /**\n   * Set trigger row select on click event if true. Applicable only when rowSelectable is true.\n   */\n  @Input()\n  public set selectOnRowClick(value: boolean) {\n    this.config.selectOnRowClick = value;\n  }\n\n  /**\n   * Set expand and render expand template on row click if true. Only applicable when expandableRows is true.\n   */\n  @Input()\n  public set expandOnRowClick(value: boolean) {\n    this.config.expandOnRowClick = value;\n  }\n\n  /**\n   * Auto trigger dataLoad event on initialization if true.\n   */\n  @Input()\n  public set autoFetch(value: boolean) {\n    this.config.autoFetch = value;\n  }\n\n  /**\n   * Set loading spinner visible if true. Show loading spinner when data fetch operation is triggered.\n   */\n  @Input()\n  public set showLoadingSpinner(value: boolean) {\n    this.config.showLoadingSpinner = value;\n  }\n\n  /**\n   * Set select option track by field path which is used to uniquely identify row for selection tracking.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set selectTrackBy(value: string) {\n    this.config.selectTrackBy = value;\n  }\n\n  /**\n   * Set selected row identifier. Select specified row on initial load.\n   * Applicable when row select mode is SINGLE or SINGLE_TOGGLE.\n   */\n  @Input()\n  public set selectedRow(value: any) {\n    this.dataStateService.selectedRow = value;\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n  }\n\n  /**\n   * Set selected row identifiers collection. Select specified rows on initial load.\n   * Applicable when selectMode is SINGLE or SINGLE_TOGGLE true.\n   */\n  @Input()\n  public set selectedRows(value: any[]) {\n    this.dataStateService.selectedRows = value || [];\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n  }\n\n  /**\n   * Set filter debounce time in milliseconds. Applicable only when filterDebounce is true.\n   */\n  @Input()\n  public set filterDebounceTime(value: number) {\n    this.config.filterDebounceTime = value;\n  }\n\n  /**\n   * Set filter data debounce enabled state with provided filterDebounceTime if true.\n   */\n  @Input()\n  public set filterDebounce(value: boolean) {\n    this.config.filterDebounce = value;\n  }\n\n  /**\n   * Set refresh button visible if true. Only applicable when showHeader is true.\n   */\n  @Input()\n  public set showRefreshButton(value: boolean) {\n    this.config.showRefreshButton = value;\n  }\n\n  /**\n   * Row selector column width in pixels. Applicable only when showColumnSelector is true.\n   */\n  @Input()\n  public set showColumnSelector(value: boolean) {\n    this.config.showColumnSelector = value;\n  }\n\n  /**\n   * Set column selector dropdown width in pixels. Only applicable when showColumnSelector is true.\n   */\n  @Input()\n  public set columnSelectorWidth(value: number) {\n    this.config.columnSelectorWidth = value;\n  }\n\n  /**\n   * Set expander column width in pixels. Applicable only when expandableRows is true.\n   */\n  @Input()\n  public set expanderColumnWidth(value: number | string) {\n    this.config.expanderColumnWidth = value;\n  }\n\n  /**\n   * Set index column width in pixels. Applicable only when showIndexColumn is true.\n   */\n  @Input()\n  public set indexColumnWidth(value: number | string) {\n    this.config.indexColumnWidth = value;\n  }\n\n  /**\n   * Set row selector column width in pixels. Applicable only when showColumnSelector is true.\n   */\n  @Input()\n  public set selectionColumnWidth(value: number | string) {\n    this.config.selectionColumnWidth = value;\n  }\n\n  /**\n   * Set translation data object. Used to localize table static label text.\n   */\n  @Input()\n  public set translations(data: DataTableTranslations) {\n    this.config.translations = data;\n  }\n\n  /**\n   * Set row expand loading spinner visible if true. Applicable only when row expand is enabled.\n   */\n  @Input()\n  public set showRowExpandLoadingSpinner(value: boolean) {\n    this.config.showRowExpandLoadingSpinner = value;\n  }\n\n  /**\n   * Set data offset value (start offset index). Applicable only when pageable is true.\n   */\n  @Input()\n  public set offset(value: number) {\n    this.config.offset = value;\n    this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Set data limit value (page size). Applicable only when pageable is true.\n   */\n  @Input()\n  public set limit(value: number) {\n    this.config.limit = value;\n    this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Set current page number. Auto calculate offset depending on page number,\n   * do not explicitly set offset when page is used.\n   */\n  @Input()\n  public set page(value: number) {\n    this.offset = (value - 1) * this.config.limit;\n  }\n\n  /**\n   * Get current page number.\n   */\n  public get page(): number {\n    return Math.floor(this.config.offset / this.config.limit) + 1;\n  }\n\n  /**\n   * Get data table header padding in pixels.\n   */\n  public get headerPadding(): number {\n    return this.config.contentHeight ? this.globalRefService.scrollbarWidth : 0;\n  }\n\n  /**\n   * Get data loading status.\n   */\n  public get isLoading(): boolean {\n    return !(this.config.loadOnScroll && this.dataStateService.dataRows.length)\n      && this.config.showLoadingSpinner && this.dataStateService.dataLoading;\n  }\n\n  constructor(\n    private dragAndDropService: DragAndDropService,\n    private dataTableStateService: DataTablePersistenceService,\n    private globalRefService: GlobalRefService,\n    private eventStateService: DataTableEventStateService,\n    private dataTableResourceService: DataTableResourceService<any>,\n    private zone: NgZone,\n    public dataStateService: DataTableDataStateService,\n    public scrollPositionService: DataTableScrollPositionService,\n    public config: DataTableConfigService\n  ) {\n    this.storageMode = config.storageMode;\n\n    this.headerClick = this.eventStateService.headerClickStream;\n    this.allRowSelectChange = this.eventStateService.allRowSelectChangeStream;\n    this.rowBind = this.eventStateService.rowBindStream;\n    this.rowClick = this.eventStateService.rowClickStream;\n    this.rowDoubleClick = this.eventStateService.rowDoubleClickStream;\n    this.rowSelectChange = this.eventStateService.rowSelectChangeStream;\n    this.cellBind = this.eventStateService.cellBindStream;\n    this.cellClick = this.eventStateService.cellClickStream;\n    this.init = this.eventStateService.initStream;\n    this.dataBound = this.eventStateService.dataBoundStream;\n    this.columnBind = this.eventStateService.columnBind;\n  }\n\n  /**\n   * On after data bind event handler\n   * @param queryResult Query result object\n   */\n  private onAfterDataBind(queryResult: DataTableQueryResult<any>): void {\n    this.dataStateService.itemCount = queryResult.count;\n    this.setDataRows(queryResult.items);\n\n    if (this.dataStateService.heardReload) {\n      this.eventStateService.fetchFilterOptionsStream.next(false);\n      this.dataStateService.heardReload = false;\n    }\n\n    this.dataStateService.dataLoading = false;\n    this.eventStateService.dataBoundStream.emit();\n  }\n\n  /**\n   * Get data item selected state\n   * @param item Data item object\n   * @return True if item is selected\n   */\n  private getSelectedState(item: any): boolean {\n    const id = get(item, this.config.selectTrackBy);\n    if (id === undefined) {\n      return false;\n    }\n\n    if (this.config.selectMode === 'multi') {\n      return this.dataStateService.selectedRows.indexOf(id) > -1;\n    }\n\n    return this.dataStateService.selectedRow === id;\n  }\n\n  /**\n   * Set data table item collection\n   * @param items Data table item collection\n   */\n  private setDataRows(items: any[]): void {\n    const mappedItems = items.map((item: any, index: number) => {\n      let currentIndex;\n      if (this.config.loadOnScroll || this.config.pageable) {\n        currentIndex = this.config.offset + index + 1;\n      } else {\n        currentIndex = index + 1;\n      }\n\n      return {\n        dataLoaded: false,\n        expanded: false,\n        disabled: false,\n        color: '',\n        cssClass: '',\n        tooltip: '',\n        index: currentIndex,\n        item,\n        selected: this.getSelectedState(item)\n      };\n    });\n\n    if (this.config.loadOnScroll) {\n      this.dataStateService.dataRows = [ ...this.dataStateService.dataRows, ...mappedItems ];\n    } else {\n      this.dataStateService.dataRows = mappedItems;\n    }\n\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.allRowSelected =\n        this.dataStateService.dataRows.length !== 0 &&\n        this.dataStateService.dataRows.every((dataRow: DataTableRow<any>) => {\n          return dataRow.selected;\n        });\n    }\n\n    if (!this.config.loadOnScroll) {\n      const substituteRowCount = this.config.limit - this.dataStateService.dataRows.length;\n      this.dataStateService.substituteRows = Array.from({\n        length: substituteRowCount\n      });\n    }\n  }\n\n  /**\n   * Initialize data fetch event\n   */\n  private initDataFetchEvent(): void {\n    const noop = {\n      items: [],\n      count: 0\n    };\n\n    this.dataFetchStreamSubscription = this.eventStateService.dataFetchStream\n      .pipe(\n        debounceTime(20),\n        switchMap((fetchMode: DataFetchMode) => this.mapDataBind(fetchMode)),\n        catchError(() => {\n          return of(noop);\n        })\n      )\n      .subscribe(\n        (queryResult: DataTableQueryResult<any>) => {\n          this.onAfterDataBind(queryResult);\n        },\n        () => {\n          this.onAfterDataBind(noop);\n        }\n      );\n  }\n\n  /**\n   * Re-map data binding data\n   * @param fetchMode Data fetch mode\n   * @return Data table query result stream\n   */\n  private mapDataBind(fetchMode: DataFetchMode): Observable<DataTableQueryResult<any>> {\n    this.dataStateService.dataLoading = true;\n    if (fetchMode === DataFetchMode.HARD_RELOAD) {\n      this.clearRowSelectState();\n      this.clearColumnState();\n      this.dataStateService.heardReload = true;\n      this.config.offset = 0;\n    }\n\n    const params: DataTableRequestParams = {\n      loadData: fetchMode === DataFetchMode.HARD_RELOAD || fetchMode === DataFetchMode.SOFT_RELOAD\n    };\n\n    if (this.columns) {\n      params.fields = this.columns\n        .filter(column => {\n          return column.sortable || column.filterable;\n        })\n        .reduce((acc: DataTableUniqueField[], column: DataTableColumnComponent) => {\n          if (column.sortField || column.filterField) {\n            acc.push({\n              field: column.sortField || column.filterField,\n              column\n            });\n          } else {\n            acc.push({\n              field: column.field,\n              column\n            });\n          }\n\n          return acc;\n        }, [])\n        .map((uniqueField: DataTableUniqueField) => {\n          let filter;\n          if (uniqueField.column.showDropdownFilter) {\n            if (uniqueField.column.dropdownFilterSelectMode === 'multi') {\n              filter = uniqueField.column.filter && uniqueField.column.filter.map(filterValue => filterValue.key);\n            } else {\n              filter = uniqueField.column.filter && uniqueField.column.filter.key;\n            }\n          } else {\n            filter = uniqueField.column.filter;\n          }\n\n          return {\n            field: uniqueField.field,\n            sortable: uniqueField.column.sortable,\n            sortOrder: uniqueField.column.sortOrder,\n            sortPriority: uniqueField.column.sortPriority || (uniqueField.column.sortOrder ? 1 : 0),\n            filterable: uniqueField.column.filterable,\n            filterValue: filter,\n            filterExpression: uniqueField.column.filterExpression,\n          };\n        });\n    }\n\n    if (this.config.pageable || this.config.loadOnScroll) {\n      params.offset = this.config.offset;\n      params.limit = this.config.limit;\n    }\n\n    if (this.config.persistTableState) {\n      this.dataTableStateService.setState(this.dataStateService.id, params);\n    }\n\n    return this.dataStateService.onDataBind(params);\n  }\n\n  /**\n   * Initialize data table state via previous state snapshot; Applicable only when persist table state is enabled\n   */\n  private initDataTableState(): void {\n    if (this.config.persistTableState) {\n      const dataTableState = this.dataTableStateService.getState(this.dataStateService.id);\n      if (dataTableState) {\n        this.columns.forEach(column => {\n          const field = dataTableState.fields.find(col => {\n            return col.field === column.field;\n          });\n\n          if (field) {\n            if (column.filterable && field.filterable) {\n              if (column.showDropdownFilter) {\n                if (field.filterValue) {\n                  if (column.dropdownFilterSelectMode === 'multi') {\n                    column.filter = field.filterValue.map((filterValue) => {\n                      return {\n                        key: filterValue,\n                        value: filterValue\n                      };\n                    });\n                  } else {\n                    column.filter = {\n                      key: field.filterValue,\n                      value: field.filterValue\n                    };\n                  }\n                }\n              } else {\n                column.filter = field.filterValue;\n              }\n            }\n\n            if (column.sortable && field.sortable) {\n              column.sortOrder = field.sortOrder;\n            }\n          }\n        });\n\n        this.config.limit = dataTableState.limit;\n        this.config.offset = dataTableState.offset;\n      }\n    }\n  }\n\n  /**\n   * After component initialize lifecycle event handler\n   */\n  public ngAfterContentInit(): void {\n    this.dataStateService.relativeParentElement = this.dataTableElement.nativeElement;\n\n    if (!this.dataStateService.onDataBind) {\n      this.dataSource = this.eventStateService.staticDataSourceStream;\n    }\n\n    this.initDataTableState();\n    this.initDataFetchEvent();\n\n    if (this.config.autoFetch) {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n\n    this.eventStateService.fetchFilterOptionsStream.next(true);\n    this.eventStateService.initStream.emit(this);\n\n    if (this.config.loadOnScroll) {\n      this.scrollPositionSubscription = this.scrollPositionService.scrollPositionStream.subscribe((pos: DataTableScrollPoint) => {\n        const roundingPixel = 1;\n        const gutterPixel = 1;\n\n        if (\n          pos.isVertical\n          && pos.scrollTop >= pos.scrollHeight - (1 + this.config.loadViewDistanceRatio) * pos.clientHeight - roundingPixel - gutterPixel\n          && (this.config.offset + this.config.limit) < this.dataStateService.itemCount\n          && !this.dataStateService.dataLoading\n        ) {\n          this.dataStateService.dataLoading = true;\n          this.zone.run(() => {\n            this.offset = this.config.offset + this.config.limit;\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Reset column sort and filter state\n   */\n  private clearColumnState(): void {\n    this.columns.forEach((column: DataTableColumnComponent) => {\n      column.resetSortOrder();\n      column.filter = undefined;\n    });\n  }\n\n  /**\n   * Clear selected data row status\n   */\n  private clearRowSelectState(): void {\n    this.dataStateService.selectedRow = undefined;\n    this.dataStateService.selectedRows = [];\n    this.dataStateService.allRowSelected = false;\n  }\n\n  /**\n   * Fetch data from data source\n   * @param fetchMode Data fetch mode\n   */\n  public fetchData(fetchMode: DataFetchMode = DataFetchMode.SOFT_RELOAD): void {\n    this.eventStateService.dataFetchStream.next(fetchMode);\n  }\n\n  /**\n   * Initialize data source\n   * @param source Data source stream\n   */\n  public initDataSource(source: Observable<any>): void {\n    this.dataTableResourceService.setDataSource(source);\n\n    this.onDataBind = (params: DataTableRequestParams): Observable<DataTableQueryResult<any>> => {\n      if (params.loadData) {\n        this.dataTableResourceService.setDataSource(source);\n      }\n\n      return this.dataTableResourceService.query(params);\n    };\n\n    this.onFilterValueExtract = (column: DataTableColumnComponent): Observable<DataTableFilterOption[]> => {\n      return this.dataTableResourceService.extractFilterOptions(column);\n    };\n  }\n\n  /**\n   * Component value write event handler; Form control support implementation\n   */\n  public writeValue(value: any): void {\n    if (this.config.selectMode === 'multi') {\n      this.selectedRows = value;\n    } else {\n      this.selectedRow = value;\n    }\n  }\n\n  /**\n   * Register select change event handler; Form control support implementation\n   * @param onSelectChange Select change event handler callback\n   */\n  public registerOnChange(onSelectChange: (value: any) => void): void {\n    this.rowSelectChangeSubscription = this.eventStateService.rowSelectChangeStream.subscribe((selectedIds: any | any[]) => {\n      onSelectChange(selectedIds);\n    });\n  }\n\n  /**\n   * Register on touch event handler; Form control support implementation\n   * @param fn Touch event callback handler\n   */\n  public registerOnTouched(fn: any): void {}\n\n  /**\n   * Get table width in pixels\n   */\n  public get tableWidth(): number {\n    return this.config.width || this.dataStateService.tableWidth;\n  }\n\n  public ngOnInit(): void {\n    if (!this.dataStateService.id) {\n      throw Error('Missing required parameter value for [id] input.');\n    }\n\n    if (this.config.loadOnScroll) {\n      if (!this.config.minContentHeight) {\n        throw Error('[minContentHeight] is required when [infiniteScrollable] is enabled.');\n      }\n\n      if (this.config.pageable) {\n        throw Error('[pageable] and [infiniteScrollable] cannot be enabled at the same time.');\n      }\n    }\n  }\n\n  /**\n   * Component destroy lifecycle event handler\n   */\n  public ngOnDestroy(): void {\n    if (this.dataFetchStreamSubscription) {\n      this.dataFetchStreamSubscription.unsubscribe();\n    }\n\n    if (this.rowSelectChangeSubscription) {\n      this.rowSelectChangeSubscription.unsubscribe();\n    }\n\n    if (this.scrollPositionSubscription) {\n      this.scrollPositionSubscription.unsubscribe();\n    }\n\n    this.dataTableResourceService.dispose();\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataTableRow } from '../../models/data-table-row.model';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\n/**\n * Data table body component. Data table body table definition rendering is handled by this component.\n */\n@Component({\n  exportAs: 'ngDataTableBody',\n  // tslint:disable-next-line\n  selector: '[ngDataTableBody]',\n  templateUrl: './data-table-body.component.html'\n})\nexport class DataTableBodyComponent {\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  @Input()\n  public rowExpandTemplate: TemplateRef<any>;\n\n  @Input()\n  public rowExpandLoadingSpinnerTemplate: TemplateRef<any>;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService\n  ) {}\n\n  /**\n   * Unique data row tracking callback.\n   * @param index Current index.\n   * @param dataRow Data row object reference.\n   */\n  public dataRowTrackBy(index: number, dataRow: DataTableRow<any>): number {\n    return dataRow.index;\n  }\n\n  /**\n   * Odd row status; True if row index is a odd number.\n   * @param row Data row object.\n   * @return True if odd row.\n   */\n  public isOddRow(row: DataTableRow<any>): boolean {\n    return row.index % 2 === 0;\n  }\n\n  /**\n   * Even row status; True if row index is a even number.\n   * @param row Data row object.\n   * @return True if even row.\n   */\n  public isEvenRow(row: DataTableRow<any>): boolean {\n    return row.index % 2 === 1;\n  }\n\n  /**\n   * Odd substitute row status by row index; True if row index is an odd substitute row.\n   * @param index Row index.\n   * @return True if odd substitute row.\n   */\n  public isOddSubstituteRow(index: number): boolean {\n    return (index + this.dataStateService.substituteRows.length) % 2 === 0;\n  }\n\n  /**\n   * Even substitute row status by row index; True if row index is an even substitute row.\n   * @param index Row index.\n   * @return True if even substitute row.\n   */\n  public isEvenSubstituteRow(index: number): boolean {\n    return (index + this.dataStateService.substituteRows.length) % 2 === 1;\n  }\n\n  /**\n   * On row expand event handler.\n   * @param $event Click event argument reference.\n   * @param dataRow Data row object.\n   */\n  public onRowExpand($event: Event, dataRow: DataTableRow<any>): void {\n    dataRow.expanded = !dataRow.expanded;\n\n    if (!this.config.showRowExpandLoadingSpinner) {\n      dataRow.dataLoaded = true;\n    }\n  }\n\n  /**\n   * On row initialize event handler.\n   * @param dataRow Data table row.\n   */\n  public onRowInit(dataRow): void {\n    this.eventStateService.rowBindStream.emit(dataRow);\n  }\n\n  /**\n   * On cell initialize event handler.\n   * @param column Data table column component reference.\n   * @param row Data table row object.\n   */\n  public onCellInit(column: DataTableColumnComponent, row: DataTableRow<any>): void {\n    this.eventStateService.cellBindStream.emit({\n      column,\n      row\n    });\n  }\n\n  /**\n   * Cell clicked event handler.\n   * @param column Column data table component reference.\n   * @param row Data table row reference.\n   * @param event Mouse click event argument reference.\n   */\n  public cellClicked(column: DataTableColumnComponent, row: DataTableRow<any>, event: MouseEvent): void {\n    this.eventStateService.cellClickStream.emit({ row, column, event });\n  }\n\n  /**\n   * Get row span collection by data row.\n   * @param row Data row reference.\n   * @return Dummy row span collection.\n   */\n  public getRowSpanCollection(row: DataTableRow<any>): any[] {\n    return Array.from({\n      length: this.dataStateService.onDynamicRowSpanExtract(row)\n    });\n  }\n\n  /**\n   * Get total column count used for substitute row generation.\n   * @return Number of columns.\n   */\n  public get totalColumnCount(): number {\n    let count = 0;\n    count += this.config.showIndexColumn ? 1 : 0;\n    count += this.config.showRowSelectCheckboxColumn ? 1 : 0;\n    count += this.config.expandableRows ? 1 : 0;\n    this.columns.forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n\n    return count;\n  }\n\n  /**\n   * On row select click event handler.\n   * @param row Data row reference.\n   * @param event Row click event.\n   */\n  public onRowSelectClick(row: DataTableRow<any>, event: Event): void {\n    // Prevent single mode checkbox getting unchecked on tapping already selected.\n    if (this.config.selectMode === 'single') {\n      const id = get(row.item, this.config.selectTrackBy);\n      const previousSelection = this.dataStateService.selectedRow;\n\n      if (previousSelection === id) {\n        event.preventDefault();\n        row.selected = true;\n      }\n    }\n  }\n\n  /**\n   * On row selection change event handler.\n   * @param row Data row reference.\n   */\n  public onRowSelectChange(row: DataTableRow<any>): void {\n    const id = get(row.item, this.config.selectTrackBy);\n\n    switch (this.config.selectMode) {\n      case 'multi': {\n        const index = this.dataStateService.selectedRows.indexOf(id);\n        if (row.selected && index < 0) {\n          this.dataStateService.selectedRows.push(id);\n        } else if (!row.selected && index > -1) {\n          this.dataStateService.selectedRows.splice(index, 1);\n        }\n\n        const previousAllRowSelectedState = this.dataStateService.allRowSelected;\n        this.dataStateService.allRowSelected = this.dataStateService.dataRows.every((dataRow: DataTableRow<any>) => {\n          return dataRow.selected;\n        });\n\n        this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n\n        if (previousAllRowSelectedState !== this.dataStateService.allRowSelected) {\n          this.eventStateService.allRowSelectChangeStream.emit(this.dataStateService.allRowSelected);\n        }\n        break;\n      }\n      case 'single_toggle': {\n        if (row.selected) {\n          this.dataStateService.selectedRow = id;\n\n          // deselect all other row other rows\n          this.dataStateService.dataRows.forEach((dataRow: DataTableRow<any>) => {\n            if (dataRow !== row) {\n              dataRow.selected = false;\n            }\n          });\n        } else {\n          this.dataStateService.selectedRow = undefined;\n        }\n\n        this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n        break;\n      }\n      case 'single': {\n        const previousSelection = this.dataStateService.selectedRow;\n        this.dataStateService.selectedRow = id;\n        row.selected = true;\n\n        // deselect all other row other rows\n        this.dataStateService.dataRows.forEach((dataRow: DataTableRow<any>) => {\n          if (dataRow !== row) {\n            dataRow.selected = false;\n          }\n        });\n\n        if (previousSelection !== id) {\n          this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Row clicked event handler.\n   * @param row Data row object.\n   * @param event Mouse click event argument object.\n   */\n  public rowClicked(row: DataTableRow<any>, event: MouseEvent): void {\n    if (this.config.selectOnRowClick || (this.config.expandableRows && this.config.expandOnRowClick)) {\n      const target = event.target as HTMLElement;\n      if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n        return;\n      }\n\n      if (this.config.rowSelectable && this.config.selectOnRowClick) {\n        row.selected = !row.selected;\n        this.onRowSelectChange(row);\n      }\n\n      if (this.config.expandOnRowClick) {\n        row.expanded = !row.expanded;\n      }\n    }\n\n    this.eventStateService.rowClickStream.emit({ row, event });\n  }\n\n  /**\n   * Row double clicked event handler.\n   * @param row Data row object.\n   * @param event Event Mouse click event argument object.\n   */\n  public rowDoubleClicked(row: DataTableRow<any>, event: MouseEvent): void {\n    this.eventStateService.rowDoubleClickStream.emit({ row, event });\n  }\n\n  /**\n   * Get substitute row availability status.\n   * @return True if substitute rows are available.\n   */\n  public get hasSubstituteRows(): boolean {\n    return !this.config.loadOnScroll\n      && this.config.showSubstituteRows\n      && this.dataStateService.dataRows.length\n      && !this.dataStateService.showNoDataOverlay;\n  }\n\n  /**\n   * Get cell value by data field.\n   * @param row Data row reference.\n   * @param column Data table column component reference.\n   */\n  public getFieldValue(row: DataTableRow<any>, column: DataTableColumnComponent) {\n    return get(row.item, column.field);\n  }\n\n  /**\n   * Get row select checkbox display status.\n   * @return True if row selector checkbox should be displayed.\n   */\n  public get showRowSelectCheckbox(): boolean {\n    return this.config.rowSelectable && this.config.showRowSelectCheckbox;\n  }\n\n  /**\n   * Get row expend view loading status. Used to display loading spinner on expand column while data fetching.\n   * @param row Data row object reference.\n   */\n  public isRowExpanderLoading(row: DataTableRow<any>): boolean {\n    return row.expanded && !row.dataLoaded;\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\n/**\n * No data body component. Used to display no data message when data not available.\n */\n@Component({\n  selector: 'ng-data-table-no-data-body',\n  templateUrl: './data-table-no-data-body.component.html'\n})\nexport class DataTableNoDataBodyComponent {\n  @Input()\n  public noRecordsTemplate: TemplateRef<any>;\n\n  constructor(public config: DataTableConfigService, public eventStateService: DataTableEventStateService) {}\n\n  /**\n   * Reset all applied filters.\n   */\n  public resetFilters(): void {\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.HARD_RELOAD);\n  }\n\n  /**\n   * Get default no data template display status.\n   * @return True if default no data template should be displayed.\n   */\n  public get showDefaultNoDataTemplate(): boolean {\n    return !!(!this.noRecordsTemplate && this.config.translations.noDataMessage);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n/**\n * Data table header component. Render data table column title and filter header rows.\n */\n@Component({\n  exportAs: 'ngDataTableHead',\n  // tslint:disable-next-line\n  selector: '[ngDataTableHead]',\n  templateUrl: './data-table-head.component.html'\n})\nexport class DataTableHeadComponent {\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  /**\n   * Get filter column availability status.\n   * @return True if there is at least one filter column.\n   */\n  public get hasFilterColumns(): boolean {\n    return this.columns.some((column: DataTableColumnComponent) => column.filterable);\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data loading spinner component. Displayed within table body while fetching data.\n */\n@Component({\n  selector: 'ng-data-table-loading-spinner',\n  templateUrl: './data-table-loading-spinner.component.html'\n})\nexport class DataTableLoadingSpinnerComponent {\n  @Input()\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  @Input()\n  public isLoading: boolean;\n\n  @Input()\n  public showOverlay: boolean;\n\n  constructor(public config: DataTableConfigService, public dataStateService: DataTableDataStateService) {}\n}\n","import { Directive, ElementRef, AfterViewInit, NgZone, OnDestroy, Input } from '@angular/core';\n\nimport { Subscription, fromEvent, Subject } from 'rxjs';\nimport { map, pairwise } from 'rxjs/operators';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll position directive.\n * Track current scroll position of target element.\n */\n@Directive({\n  selector: '[ngScrollPosition]'\n})\nexport class ScrollPositionDirective implements AfterViewInit, OnDestroy {\n  private scrollEventSubscription: Subscription;\n\n  @Input()\n  public ngScrollPosition: Subject<DataTableScrollPoint>;\n\n  constructor(private el: ElementRef, private zone: NgZone) {}\n\n  /**\n   * After component initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.zone.runOutsideAngular(() => {\n      this.scrollEventSubscription = fromEvent(this.el.nativeElement, 'scroll')\n        .pipe(\n          map(() => {\n            return {\n              scrollLeft: this.el.nativeElement.scrollLeft,\n              scrollTop: this.el.nativeElement.scrollTop,\n              scrollHeight: this.el.nativeElement.scrollHeight,\n              scrollWidth: this.el.nativeElement.scrollWidth,\n              clientHeight: this.el.nativeElement.clientHeight,\n              clientWidth: this.el.nativeElement.clientWidth,\n            };\n          }),\n          pairwise(),\n          map((pair: DataTableScrollPoint[]) => {\n            const [ previous, current ] = pair;\n\n            return {\n              ...current,\n              isHorizontal: previous.scrollLeft !== current.scrollLeft,\n              isVertical: previous.scrollTop !== current.scrollTop\n            };\n          })\n        )\n        .subscribe((pos: DataTableScrollPoint) => {\n          this.ngScrollPosition.next(pos);\n        });\n    });\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollEventSubscription) {\n      this.scrollEventSubscription.unsubscribe();\n    }\n\n    this.ngScrollPosition.complete();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll element directive.\n * Used to set scroll position to target element.\n */\n@Directive({\n  selector: '[ngScrollElement]'\n})\nexport class ScrollElementDirective implements AfterViewInit, OnDestroy {\n  private scrollPositionSubscription: Subscription;\n\n  @Input()\n  public ngScrollElement: Subject<DataTableScrollPoint>;\n\n  constructor(private el: ElementRef) {}\n\n  /**\n   * After component initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.scrollPositionSubscription = this.ngScrollElement.subscribe(value => {\n      this.el.nativeElement.scrollLeft = value.scrollLeft;\n    });\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollPositionSubscription) {\n      this.scrollPositionSubscription.unsubscribe();\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Output } from '@angular/core';\n\n/**\n * Element width directive.\n * Used to emit target element width after view init.\n */\n@Directive({\n  selector: '[ngElementWidth]'\n})\nexport class ElementWidthDirective implements AfterViewInit {\n  @Output()\n  public ngElementWidth = new EventEmitter();\n\n  constructor(private el: ElementRef) {}\n\n  /**\n   * After component view initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.ngElementWidth.emit(this.el.nativeElement.clientWidth);\n  }\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { get } from '../../utility/services/object-utility.class';\n\nimport { DropdownConfig } from '../models/dropdown-config.model';\nimport { DropdownTranslations } from '../models/dropdown-translations.model';\nimport { DataTableConfig } from '../../data-table/models/data-table-config.model';\n\nimport { DropdownSelectMode } from '../models/dropdown-select-mode.model';\nimport { ViewPosition } from '../../utility/models/view-position.model';\n\nexport const DROPDOWN_CONFIG = new InjectionToken<DataTableConfig>('dropdownConfig');\n\n/**\n * Dropdown config service. Holds all the global configurations of dropdown which can be overridden while importing the module.\n * Used to manage dropdown base configuration state.\n */\n@Injectable()\nexport class DropdownConfigService implements DropdownConfig {\n  public baseTranslations: DropdownTranslations = {\n    noDataMessage: 'No Results Available',\n    filterPlaceholder: 'Search',\n    selectedOptionWrapPlaceholder: 'Options',\n    selectPlaceholder: 'Select'\n  };\n\n  public selectTrackBy = 'key';\n  public displayTrackBy = 'value';\n  public disabledTrackBy = 'disabled';\n  public menuPosition: ViewPosition = 'bottom-left';\n  public selectMode: DropdownSelectMode = 'single-toggle';\n  public filterable = false;\n  public filterDebounce = true;\n  public filterDebounceTime = 500;\n  public groupByField: string = undefined;\n  public wrapDisplaySelectLimit: number = undefined;\n  public showSelectedOptionRemoveButton = false;\n  public showClearSelectionButton = false;\n  public menuWidth = 320;\n  public menuHeight = 250;\n  public loadOnScroll = false;\n  public loadViewDistanceRatio = 1;\n  public limit = 15;\n  public loadDataOnInit = true;\n  public closeMenuOnSelect = false;\n  public showOptionSelectCheckbox = false;\n  public showOptionIndex = false;\n  public showOptionTrackBy = false;\n  public multiSelectOptionMaxWidth = 135;\n  public setFirstOptionSelected = false;\n  public triggerSelectChangeOnInit = false;\n  public triggerSelectChangeOnModelUpdate = false;\n  public triggerSelectChangeOnFirstOptionSelect = false;\n  public dynamicDimensionCalculation = false;\n  public dynamicWidthRatio = 1;\n  public dynamicHeightRatio = 0.5;\n  public relativeParentElement = undefined;\n\n  constructor(@Inject(DROPDOWN_CONFIG) private dropdownConfig: DropdownConfig) {\n    if (dropdownConfig) {\n      Object.assign(this, dropdownConfig);\n    }\n  }\n\n  /**\n   * Set dropdown translations.\n   * @param value Dropdown translations object.\n   */\n  public set translations(value: DropdownTranslations) {\n    this.baseTranslations = { ...this.baseTranslations, ...value };\n  }\n\n  /**\n   * Get dropdown translations.\n   * @return Dropdown translations.\n   */\n  public get translations(): DropdownTranslations {\n    return this.baseTranslations;\n  }\n\n  /**\n   * Get display text by source option.\n   * @param option Source option object.\n   * @return Display text.\n   */\n  public getDisplayText(option: any): string {\n    return get(option, this.displayTrackBy);\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { DropdownOption } from '../models/dropdown-option.model';\nimport { DropdownDataBindCallback } from '../models/dropdown-data-bind-callback.model';\nimport { DropdownOptionGroup } from '../models/dropdown-option-group.model';\nimport { ComponentLoader } from '../../utility/utility.module';\n\n/**\n * Dropdown data state service; Manage dropdown state data.\n */\n@Injectable()\nexport class DropdownDataStateService {\n  public id: string;\n  public dataLoading = false;\n  public selectedOption: any;\n  public selectedOptions: any[] = [];\n  public offset = 0;\n  public totalOptionCount: number;\n  public currentOptionCount = 0;\n  public dropdownOptions: DropdownOption[] = [];\n  public dropdownOptionGroups: DropdownOptionGroup[] = [];\n  public filterText = '';\n  public disabled = false;\n  public componentLoaderRef: ComponentLoader<any>;\n  public dropdownOptionTemplate: TemplateRef<any>;\n  public dropdownOptionGroupHeaderTemplate: TemplateRef<any>;\n\n  public onDataBind: DropdownDataBindCallback<any>;\n\n  /**\n   * Get dropdown option unique id.\n   * @param append Target identifier.\n   * @param index Target index.\n   */\n  public getUniqueId(append: string, index: number): string {\n    return `${this.id}-chk-${append}-${index}`;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs';\n\nimport { DropdownComponent } from '../components/dropdown/dropdown.component';\n\n/**\n * Dropdown event state service; Manage dropdown event handler state.\n */\n@Injectable()\nexport class DropdownEventStateService {\n  public dataFetchStream = new EventEmitter<boolean>();\n  public dataBoundStream = new EventEmitter<void>();\n  public selectChangeStream = new EventEmitter<any[] | any>();\n  public initStream = new EventEmitter<DropdownComponent>();\n  public staticDataSourceStream = new ReplaySubject<any[]>(1);\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown options list view component\n */\n@Component({\n  selector: 'ng-dropdown-view',\n  templateUrl: './dropdown-view.component.html'\n})\nexport class DropdownViewComponent implements OnInit, OnDestroy {\n  public scrollEvent = new Subject<any>();\n  private scrollEventSubscription: Subscription;\n\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    private eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    this.scrollEventSubscription = this.scrollEvent.pipe(debounceTime(100)).subscribe((event: any) => {\n      this.checkScrollPosition(event);\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollEventSubscription) {\n      this.scrollEventSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Performs data loading when scrolling when scroll threshold is met. This will be trigger only when load on scroll is enabled.\n   * @param event Target event arguments reference.\n   */\n  public checkScrollPosition(event: any) {\n    const scrollTop = event.target.scrollTop;\n    const scrollHeight = event.target.scrollHeight;\n    const scrollElementHeight = event.target.clientHeight;\n\n    const roundingPixel = 1;\n    const gutterPixel = 1;\n\n    if (\n      scrollTop >= scrollHeight - (1 + this.config.loadViewDistanceRatio) * scrollElementHeight - roundingPixel - gutterPixel &&\n      this.dataStateService.currentOptionCount < this.dataStateService.totalOptionCount &&\n      !this.dataStateService.dataLoading\n    ) {\n      this.dataStateService.dataLoading = true;\n      this.dataStateService.offset = this.dataStateService.offset + this.config.limit;\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ReplaySubject, Observable, of, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { get } from '../../utility/services/object-utility.class';\n\nimport { DropdownQueryResult } from '../models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../models/dropdown-request-params.model';\n\n/**\n * Dropdown resource service. Dropdown client side data query is handled via this service.\n */\n@Injectable()\nexport class DropdownResourceService<T> {\n  private optionDataStream: ReplaySubject<T[]>;\n  private dataSourceSubscription: Subscription;\n\n  /**\n   * Set source data source.\n   * @param dataSource Data source observable.\n   */\n  public setDataSource(dataSource: Observable<T[]>): void {\n    this.dispose();\n\n    if (this.optionDataStream && !this.optionDataStream.closed) {\n      this.optionDataStream.complete();\n    }\n\n    this.optionDataStream = new ReplaySubject<T[]>(1);\n    this.dataSourceSubscription = dataSource.subscribe((options: T[]) => {\n      this.optionDataStream.next(options);\n    });\n  }\n\n  /**\n   * Query data.\n   * @param params Dropdown request parameters.\n   */\n  public query(params: DropdownRequestParams): Observable<DropdownQueryResult<T>> {\n    return this.optionDataStream.pipe(\n      switchMap((options: T[]) => {\n        let result: T[] = options.slice();\n\n        if (params.filter && params.filter.value) {\n          const value = String(params.filter.value).toLowerCase();\n          result = result.filter((option: T) => {\n            const key = String(get(option, params.filter.key)).toLowerCase();\n            return key.includes(value);\n          });\n        }\n\n        if (params.offset !== undefined) {\n          const offset = params.offset + 1 > result.length ? 0 : params.offset;\n\n          if (params.limit === undefined) {\n            result = result.slice(offset, result.length);\n          } else {\n            result = result.slice(offset, offset + params.limit);\n          }\n        }\n\n        return of({\n          options: result,\n          count: options.length\n        });\n      })\n    );\n  }\n\n  /**\n   * Dispose data source.\n   */\n  public dispose(): void {\n    if (this.dataSourceSubscription) {\n      this.dataSourceSubscription.unsubscribe();\n      this.dataSourceSubscription = null;\n    }\n\n    if (this.optionDataStream && !this.optionDataStream.closed) {\n      this.optionDataStream.complete();\n    }\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap } from 'rxjs/operators';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DropdownTranslations } from '../../models/dropdown-translations.model';\nimport { DropdownOption } from '../../models/dropdown-option.model';\nimport { DropdownOptionGroup } from '../../models/dropdown-option-group.model';\nimport { DropdownRequestParams } from '../../models/dropdown-request-params.model';\nimport { DropdownDataBindCallback } from '../../models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../models/dropdown-query-result.model';\n\nimport { DropdownSelectMode } from '../../models/dropdown-select-mode.model';\n\nimport { DropdownViewComponent } from '../dropdown-view/dropdown-view.component';\n\nimport { PopoverComponentLoaderFactoryService } from '../../../utility/utility.module';\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\nimport { DropdownResourceService } from '../../services/dropdown-resource.service';\nimport { ViewPosition } from '../../../utility/models/view-position.model';\nimport { ValidatorService } from '../../../utility/services/validator.service';\n\n/**\n * Dropdown main component.\n */\n@Component({\n  selector: 'ng-dropdown',\n  templateUrl: './dropdown.component.html',\n  providers: [\n    DropdownConfigService,\n    DropdownDataStateService,\n    DropdownEventStateService,\n    DropdownResourceService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DropdownComponent),\n      multi: true\n    }\n  ]\n})\nexport class DropdownComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  private onSelectChangeSubscription: Subscription;\n\n  @ContentChild('ngDropdownLoadingSpinner', { static: true })\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDropdownOption', { static: true })\n  public set optionTemplate(value: TemplateRef<any>) {\n    this.dataStateService.dropdownOptionTemplate = value;\n  }\n\n  @ContentChild('ngDropdownOptionGroupHeader', { static: true })\n  public set optionGroupHeaderTemplate(value: TemplateRef<any>) {\n    this.dataStateService.dropdownOptionGroupHeaderTemplate = value;\n  }\n\n  // Outputs : Event Handlers\n  /**\n   * Dropdown initialize event handler\n   */\n  @Output()\n  public init: EventEmitter<DropdownComponent>;\n\n  /**\n   * Dropdown option select change event handler\n   */\n  @Output()\n  public selectChange: EventEmitter<any[] | any>;\n\n  /**\n   * Dropdown data bind event handler\n   */\n  @Output()\n  public dataBound: EventEmitter<void>;\n\n  // Input - Event handlers\n\n  /**\n   * Set data bind callback. This handler is fired on each data fetch request.\n   */\n  @Input()\n  public set onDataBind(value: DropdownDataBindCallback<any>) {\n    this.dataStateService.onDataBind = value;\n  }\n\n  // Inputs\n\n  /**\n   * Set dropdown loading spinner template reference object. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set loadingSpinnerTemplateRef(value: TemplateRef<any>) {\n    this.loadingSpinnerTemplate = value;\n  }\n\n  /**\n   * Set dropdown option template reference. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set optionTemplateRef(value: TemplateRef<any>) {\n    this.optionTemplate = value;\n  }\n\n  /**\n   * Set dropdown options group header template reference. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set optionGroupHeaderTemplateRef(value: TemplateRef<any>) {\n    this.optionGroupHeaderTemplate = value;\n  }\n\n  /**\n   * Set static dropdown options collection. No need to set data source when static options collection is provided.\n   */\n  @Input()\n  public set options(value: any[]) {\n    if (!value) {\n      return;\n    }\n\n    this.eventStateService.staticDataSourceStream.next(value);\n  }\n\n  /**\n   * Set data source observable. This observable is used to retrieve dropdown options for data binding.\n   */\n  @Input()\n  public set dataSource(source: Observable<any[]>) {\n    this.initDataSource(source);\n  }\n\n  /**\n   * Set dropdown unique identifier.\n   */\n  @Input()\n  public set id(value: string) {\n    if (!ValidatorService.idPatternValidatorExpression.test(value)) {\n      throw Error('Invalid [id] input value. Unique identifier parameter only accept string begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (\"-\"), underscores (\"_\").');\n    }\n\n    this.dataStateService.id = value;\n  }\n\n  /**\n   * Set translation data object. Used to localize table static label text.\n   */\n  @Input()\n  public set translations(value: DropdownTranslations) {\n    this.config.translations = value;\n  }\n\n  /**\n   * Set select option track by field path which is used to uniquely identify options for selection tracking.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set selectTrackBy(value: string) {\n    this.config.selectTrackBy = value;\n  }\n\n  /**\n   * Set display value track by field path which is used to extract dropdown option display value.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set displayTrackBy(value: string) {\n    this.config.displayTrackBy = value;\n  }\n\n  /**\n   * Set options group field path which is used to group the dropdown options.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set groupByField(value: string) {\n    this.config.groupByField = value;\n  }\n\n  /**\n   * Set dropdown option disable state field path which is used to disabled state dropdown options.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set disabledTrackBy(value: string) {\n    this.config.disabledTrackBy = value;\n  }\n\n  /**\n   * Set selected options collection. These options will be set selected by default on initial load.\n   * Applicable only when multi select mode is enabled.\n   */\n  @Input()\n  public set selectedOptions(value: any[]) {\n    this.dataStateService.selectedOptions = value || [];\n  }\n\n  /**\n   * Set selected option. This option is selected by default on initial load.\n   * Applicable only when single select mode is enabled.\n   */\n  @Input()\n  public set selectedOption(value: any) {\n    this.dataStateService.selectedOption = value;\n  }\n\n  /**\n   * Set number of options to fetch on scroll to bottom action when load on scroll mode is enabled.\n   */\n  @Input()\n  public set limit(value: number) {\n    this.config.limit = value;\n  }\n\n  /**\n   * Set wrap selected options in dropdown view and show the number of options selected instead when\n   * limit is met or exceeded. Applicable only when multi select mode is enabled.\n   */\n  @Input()\n  public set wrapDisplaySelectLimit(value: number) {\n    this.config.wrapDisplaySelectLimit = value;\n  }\n\n  /**\n   * Set infinite scrollable state to load data on demand with scroll motion. Dropdown data fetch call is\n   * initiated with limit and offset when user scroll to bottom hence loading the full data set on init.\n   */\n  @Input()\n  public set loadOnScroll(value: boolean) {\n    this.config.loadOnScroll = value;\n  }\n\n  /**\n   * Set view height ratio to trigger data fetch with infinite scrollable mode.\n   * Higher ratio will will increase the scroll sensitivity.\n   */\n  @Input()\n  public set loadViewDistanceRatio(value: number) {\n    this.config.loadViewDistanceRatio = value;\n  }\n\n  /**\n   * Set option select mode.\n   * - 'multi' : Support selecting multiple options.\n   * - 'single' : Support selecting a single option from options collection.\n   * - 'single-toggle' : Support selecting a single option from options collection. Selection can not be removed but\n   * only toggled by tapping on another option.\n   */\n  @Input()\n  public set selectMode(value: DropdownSelectMode) {\n    this.config.selectMode = value;\n  }\n\n  /**\n   * Show dropdown option search filter text-box if true.\n   */\n  @Input()\n  public set filterable(value: boolean) {\n    this.config.filterable = value;\n  }\n\n  /**\n   * Set default filter value to be applied on initial load. All options are displayed when filter text value is\n   * empty string. Applicable only when dropdown is filterable.\n   */\n  @Input()\n  public set filterText(value: string) {\n    this.dataStateService.filterText = value;\n  }\n\n  /**\n   * Set time based filter debounce to optimize performance and avoid request flooding by reducing the filter\n   * request frequency if true. Applicable only when dropdown filterable state is enabled.\n   */\n  @Input()\n  public set filterDebounce(value: boolean) {\n    this.config.filterDebounce = value;\n  }\n\n  /**\n   * Set filter debounce time in milliseconds. Applicable only when searchDebounce is true.\n   */\n  @Input()\n  public set filterDebounceTime(value: number) {\n    this.config.filterDebounceTime = value;\n  }\n\n  /**\n   * Set load data on component initialize if true.\n   */\n  @Input()\n  public set loadDataOnInit(value: boolean) {\n    this.config.loadDataOnInit = value;\n  }\n\n  /**\n   * Show selected option remove button if true.\n   * Applicable only when multi select mode ios enabled.\n   */\n  @Input()\n  public set showSelectedOptionRemoveButton(value: boolean) {\n    this.config.showSelectedOptionRemoveButton = value;\n  }\n\n  /**\n   * Set show all select options clear button if true.\n   * Applicable only when multi select mode ios enabled.\n   */\n  @Input()\n  public set showClearSelectionButton(value: boolean) {\n    this.config.showClearSelectionButton = value;\n  }\n\n  /**\n   * Set options menu width in pixels.\n   */\n  @Input()\n  public set menuWidth(value: number) {\n    this.config.menuWidth = value;\n  }\n\n  /**\n   * Set options menu height in pixels.\n   */\n  @Input()\n  public set menuHeight(value: number) {\n    this.config.menuHeight = value;\n  }\n\n  /**\n   * Set popup options menu display position relative to dropdown component.\n   * Support 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' values.\n   */\n  @Input()\n  public set menuPosition(value: ViewPosition) {\n    this.config.menuPosition = value;\n  }\n\n  /**\n   * Set dropdown view disabled state.\n   */\n  @Input()\n  public set disabled(value: boolean) {\n    this.dataStateService.disabled = value;\n  }\n\n  /**\n   * Set Close dropdown menu on option select if true.\n   */\n  @Input()\n  public set closeMenuOnSelect(value: boolean) {\n    this.config.closeMenuOnSelect = value;\n  }\n\n  /**\n   * Set show dropdown option select checkbox if true.\n   */\n  @Input()\n  public set showOptionSelectCheckbox(value: boolean) {\n    this.config.showOptionSelectCheckbox = value;\n  }\n\n  /**\n   * Set show dropdown option index checkbox if true.\n   */\n  @Input()\n  public set showOptionIndex(value: boolean) {\n    this.config.showOptionIndex = value;\n  }\n\n  /**\n   * Set show dropdown option TrackBy id checkbox if true.\n   */\n  @Input()\n  public set showOptionTrackBy(value: boolean) {\n    this.config.showOptionTrackBy = value;\n  }\n\n  /**\n   * Multi select option selected item maximum width. Apply ellipsis when selected option display text\n   * exceed the max width.\n   */\n  @Input()\n  public set multiSelectOptionMaxWidth(value: number) {\n    this.config.multiSelectOptionMaxWidth = value;\n  }\n\n  /**\n   * Set first dropdown option selected on data fetch if true.\n   */\n  @Input()\n  public set setFirstOptionSelected(value: boolean) {\n    this.config.setFirstOptionSelected = value;\n  }\n\n  /**\n   * Trigger select change event on init if true.\n   * Can be used to enable selectedOptions or selectedOption associated change trigger.\n   */\n  @Input()\n  public set triggerSelectChangeOnInit(value: boolean) {\n    this.config.triggerSelectChangeOnInit = value;\n  }\n\n  /**\n   * Set trigger select change on explicit model update if true.\n   * Applicable only when form binding is used.\n   */\n  @Input()\n  public set triggerSelectChangeOnModelUpdate(value: boolean) {\n    this.config.triggerSelectChangeOnModelUpdate = value;\n  }\n\n  /**\n   * Set trigger select change on first option select change if true.\n   * Applicable only when setFirstOptionSelected is true.\n   */\n  @Input()\n  public set triggerSelectChangeOnFirstOptionSelect(value: boolean) {\n    this.config.triggerSelectChangeOnFirstOptionSelect = value;\n  }\n\n  /**\n   * Set dynamically calculate dropdown view dimensions relative to dropdown button width.\n   * MenuWith and menuHeight values are ignored when true.\n   */\n  @Input()\n  public set dynamicDimensionCalculation(value: boolean) {\n    this.config.dynamicDimensionCalculation = value;\n  }\n\n  /**\n   * Set dynamic dropdown options view dimensions calculation width ratio relative to dropdown selector.\n   */\n  @Input()\n  public set dynamicWidthRatio(value: number) {\n    this.config.dynamicWidthRatio = value;\n  }\n\n  /**\n   * Set dynamic dropdown options view dimensions calculation height ratio relative to dropdown selector.\n   */\n  @Input()\n  public set dynamicHeightRatio(value: number) {\n    this.config.dynamicHeightRatio = value;\n  }\n\n  /**\n   * Set relative parent element to render dropdown view container.\n   */\n  @Input()\n  public set relativeParentElement(value: HTMLElement) {\n    this.config.relativeParentElement = value;\n  }\n\n  constructor(\n    private componentLoaderFactory: PopoverComponentLoaderFactoryService,\n    private injector: Injector,\n    private eventStateService: DropdownEventStateService,\n    private dropdownResourceService: DropdownResourceService<any>,\n    private renderer: Renderer2,\n    public dataStateService: DropdownDataStateService,\n    public config: DropdownConfigService\n  ) {\n    this.dataStateService.componentLoaderRef = this.componentLoaderFactory.createLoader(this.renderer);\n\n    this.dataBound = this.eventStateService.dataBoundStream;\n    this.selectChange = this.eventStateService.selectChangeStream;\n    this.init = this.eventStateService.initStream;\n  }\n\n  /**\n   * Initialize data source.\n   * @param source Data source stream.\n   */\n  private initDataSource(source: Observable<any>): void {\n    this.dropdownResourceService.setDataSource(source);\n\n    this.dataStateService.onDataBind = (params: DropdownRequestParams): Observable<DropdownQueryResult<any>> => {\n      if (params.hardReload) {\n        this.dropdownResourceService.setDataSource(source);\n      }\n\n      return this.dropdownResourceService.query(params);\n    };\n  }\n\n  /**\n   * Performs dropdown toggle event.\n   * @param event Mouse click event args.\n   * @param element Dropdown button element.\n   */\n  public toggleDropdown(event: MouseEvent, element: HTMLElement): void {\n    const target = event.target as HTMLElement;\n    if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n      return;\n    }\n\n    this.dataStateService.componentLoaderRef.toggle(DropdownViewComponent, element, this.injector, {\n      relativeParentElement: this.config.relativeParentElement,\n      position: this.config.menuPosition\n    });\n\n    if (this.config.dynamicDimensionCalculation) {\n      this.config.menuWidth = element.offsetWidth * this.config.dynamicWidthRatio;\n      this.config.menuHeight = element.offsetWidth * this.config.dynamicHeightRatio;\n    }\n  }\n\n  /**\n   * Get options wrapped state.\n   */\n  public get wrapSelectedOptions(): boolean {\n    if (this.config.wrapDisplaySelectLimit !== undefined) {\n      return this.dataStateService.selectedOptions.length > this.config.wrapDisplaySelectLimit;\n    }\n\n    return false;\n  }\n\n  /**\n   * Get wrapped option display text.\n   */\n  public get wrappedOptionDisplayText(): string {\n    return `(${this.dataStateService.selectedOptions.length}) ${this.config.translations.selectedOptionWrapPlaceholder}`;\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.onSelectChangeSubscription) {\n      this.onSelectChangeSubscription.unsubscribe();\n    }\n\n    this.dataStateService.componentLoaderRef.dispose();\n  }\n\n  /**\n   * Get selected options availability state.\n   */\n  public get hasSelectedOptions(): boolean {\n    if (this.config.selectMode === 'multi') {\n      return !!this.dataStateService.selectedOptions.length;\n    }\n\n    return !!this.dataStateService.selectedOption;\n  }\n\n  /**\n   * Trigger select change.\n   */\n  public triggerSelectChange(): void {\n    if (this.config.selectMode === 'multi') {\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n    } else {\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n    }\n  }\n\n  /**\n   * Clear selected options.\n   */\n  public clearSelectedOptions(): void {\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.selectedOptions = [];\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n    } else {\n      this.dataStateService.selectedOption = undefined;\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n    }\n  }\n\n  /**\n   * Set disabled state.\n   * ControlValueAccessor implementation.\n   * @param isDisabled True if disabled.\n   */\n  public setDisabledState?(isDisabled: boolean): void {\n    this.dataStateService.disabled = isDisabled;\n  }\n\n  /**\n   * Called when value selected value gets updated.\n   * ControlValueAccessor implementation.\n   * @param value Selected value.\n   */\n  public writeValue(value: any): void {\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.selectedOptions = value || [];\n    } else {\n      this.dataStateService.selectedOption = value;\n    }\n\n    if (this.config.triggerSelectChangeOnModelUpdate) {\n      this.triggerSelectChange();\n    }\n  }\n\n  /**\n   * Register on change event.\n   * ControlValueAccessor implementation.\n   * @param onSelectChange On select change callback function.\n   */\n  public registerOnChange(onSelectChange: (value: any[] | any) => void): void {\n    this.onSelectChangeSubscription = this.selectChange.subscribe(value => {\n      onSelectChange(value);\n    });\n  }\n\n  /**\n   * Register on touched event.\n   * ControlValueAccessor implementation.\n   * @param fn Function reference.\n   */\n  public registerOnTouched(fn: any): void {\n    // TODO: Implement touch event handler\n  }\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    if (!this.dataStateService.id) {\n      throw Error('Missing required parameter value for [id] input.');\n    }\n\n    if (!this.dataStateService.onDataBind) {\n      this.dataSource = this.eventStateService.staticDataSourceStream;\n    }\n\n    this.initDataFetchEvent();\n\n    if (this.config.loadDataOnInit) {\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n\n    if (this.config.triggerSelectChangeOnInit) {\n      this.triggerSelectChange();\n    }\n\n    this.eventStateService.initStream.emit(this);\n  }\n\n  /**\n   * Map source data object to dropdown option model.\n   * @param option Source dropdown option.\n   * @param index Current index.\n   */\n  private mapDropdownOption(option: any, index: number): DropdownOption {\n    const id = get(option, this.config.selectTrackBy);\n\n    return {\n      disabled: get(option, this.config.disabledTrackBy),\n      id,\n      index: index + this.dataStateService.offset + 1,\n      option,\n      text: get(option, this.config.displayTrackBy)\n    };\n  }\n\n  /**\n   *\n   * Set dropdown options data.\n   * @param queryResult Query result object reference.\n   */\n  private setDropdownOptions(queryResult: DropdownQueryResult<any>) {\n    if (this.config.groupByField) {\n      this.dataStateService.dropdownOptionGroups = queryResult.options.reduce(\n        (accumulator: DropdownOptionGroup[], option: any, index: number) => {\n          const groupFieldValue = get(option, this.config.groupByField);\n          const currentGroup = accumulator.find((group: DropdownOptionGroup) => group.groupName === groupFieldValue);\n\n          if (currentGroup) {\n            currentGroup.options.push(this.mapDropdownOption(option, index));\n          } else {\n            accumulator.push({\n              groupName: groupFieldValue,\n              options: [this.mapDropdownOption(option, index)]\n            });\n          }\n\n          return accumulator;\n        },\n        this.config.loadOnScroll && this.dataStateService.offset > 0 ? this.dataStateService.dropdownOptionGroups : []\n      );\n    } else {\n      this.dataStateService.dropdownOptions = queryResult.options.reduce(\n        (accumulator: DropdownOption[], option: any, index: number) => {\n          accumulator.push(this.mapDropdownOption(option, index));\n          return accumulator;\n        },\n        this.config.loadOnScroll && this.dataStateService.offset > 0 ? this.dataStateService.dropdownOptions : []\n      );\n    }\n\n    if (this.config.setFirstOptionSelected && queryResult.options.length) {\n      if (this.config.selectMode === 'multi') {\n        this.dataStateService.selectedOptions = [queryResult.options[0]];\n      } else {\n        this.dataStateService.selectedOption = queryResult.options[0];\n      }\n\n      if (this.config.triggerSelectChangeOnFirstOptionSelect) {\n        this.triggerSelectChange();\n      }\n    }\n\n    this.dataStateService.totalOptionCount = queryResult.count;\n    this.dataStateService.currentOptionCount += queryResult.options.length;\n  }\n\n  /**\n   * On after data bind event handler.\n   * @param queryResult Query result object reference.\n   */\n  private onAfterDataBind(queryResult: DropdownQueryResult<any>): void {\n    this.setDropdownOptions(queryResult);\n    this.dataStateService.dataLoading = false;\n    this.eventStateService.dataBoundStream.emit();\n  }\n\n  /**\n   * Fetch query results.\n   * @param hardReload Hard reload state.\n   */\n  private fetchQueryResults(hardReload: boolean): Observable<DropdownQueryResult<any>> {\n    this.dataStateService.dataLoading = true;\n\n    if (hardReload) {\n      this.dataStateService.offset = 0;\n      this.dataStateService.filterText = '';\n    }\n\n    const requestParams: DropdownRequestParams = {\n      hardReload\n    };\n\n    if (this.config.loadOnScroll) {\n      requestParams.limit = this.config.limit;\n      requestParams.offset = this.dataStateService.offset;\n    }\n\n    if (this.config.filterable) {\n      requestParams.filter = {\n        key: this.config.displayTrackBy,\n        value: this.dataStateService.filterText\n      };\n    }\n\n    return this.dataStateService.onDataBind(requestParams);\n  }\n\n  /**\n   * Initialize data fetch event.\n   */\n  private initDataFetchEvent(): void {\n    const noop = {\n      options: [],\n      count: 0\n    };\n\n    this.eventStateService.dataFetchStream\n      .pipe(\n        debounceTime(20),\n        switchMap((hardReload: boolean) => this.fetchQueryResults(hardReload)),\n        catchError(() => {\n          return of(noop);\n        })\n      )\n      .subscribe(\n        (queryResult: DropdownQueryResult<any>) => {\n          this.onAfterDataBind(queryResult);\n        },\n        () => {\n          this.onAfterDataBind(noop);\n        }\n      );\n  }\n\n  /**\n   * Trigger explicit data fetch.\n   * @param hardReload Hard reload state.\n   */\n  public fetchData(hardReload: boolean = false): void {\n    this.eventStateService.dataFetchStream.emit(hardReload);\n  }\n\n  /**\n   * On select option remove event handler.\n   * @param index Selected option index.\n   */\n  public onSelectOptionRemove(index: number): void {\n    this.dataStateService.selectedOptions.splice(index, 1);\n    this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n  }\n\n  /**\n   * Close dropdown options menu.\n   */\n  public close(): void {\n    this.dataStateService.componentLoaderRef.hide();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown filter component.\n */\n@Component({\n  selector: 'ng-dropdown-filter',\n  templateUrl: './dropdown-filter.component.html'\n})\nexport class DropdownFilterComponent implements OnDestroy, OnInit {\n  private dataFilterStream = new Subject();\n  private dataFilterSubscription: Subscription;\n\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    public eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Clear applied filter value.\n   */\n  public clearFilter(): void {\n    this.dataStateService.offset = 0;\n    this.dataStateService.filterText = '';\n    this.eventStateService.dataFetchStream.emit(false);\n  }\n\n  /**\n   * Filter key up event handler.\n   */\n  public filterKeyUp(): void {\n    if (this.config.filterDebounce) {\n      this.dataFilterStream.next(this.dataStateService.filterText);\n    } else {\n      this.dataStateService.offset = 0;\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n  }\n\n  /**\n   * Initialize filter stream debounce.\n   */\n  private initFilterDebounceEvent(): void {\n    this.dataFilterSubscription = this.dataFilterStream.pipe(debounceTime(this.config.filterDebounceTime)).subscribe(() => {\n      this.dataStateService.offset = 0;\n      this.eventStateService.dataFetchStream.emit(false);\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.dataFilterSubscription) {\n      this.dataFilterSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    this.initFilterDebounceEvent();\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DropdownOption } from '../../models/dropdown-option.model';\n\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown options list component.\n */\n@Component({\n  selector: 'ng-dropdown-options',\n  templateUrl: './dropdown-options.component.html'\n})\nexport class DropdownOptionsComponent {\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    private eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Unique data row tracking callback.\n   * @param index Current index.\n   * @param option Dropdown option reference.\n   */\n  public optionTrackBy(index: number, option: DropdownOption): number {\n    return option.index;\n  }\n\n  /**\n   * Get selected state by option identifier.\n   * @param id Option select track by identifier.\n   */\n  public getSelectedState(id: any): boolean {\n    if (this.config.selectMode === 'multi') {\n      return this.dataStateService.selectedOptions.some((option: any) => {\n        return get(option, this.config.selectTrackBy) === id;\n      });\n    }\n\n    return get(this.dataStateService.selectedOption, this.config.selectTrackBy) === id;\n  }\n\n  /**\n   * Option click event handler.\n   * @param option Option object reference.\n   * @param event Click event arguments object.\n   */\n  public onOptionClick(option: DropdownOption, event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n      return;\n    }\n\n    this.toggleOptionSelectedState(option);\n  }\n\n  /**\n   * Option checkbox click event handler.\n   * @param option Option object reference.\n   * @param event Click event arguments object.\n   */\n  public onOptionCheckboxClick(option: DropdownOption, event: MouseEvent): void {\n    // Prevent single mode checkbox getting unchecked on tapping already selected.\n    if (this.config.selectMode === 'single') {\n      const selectedId = get(this.dataStateService.selectedOption, this.config.selectTrackBy);\n      const id = get(option.option, this.config.selectTrackBy);\n      if (selectedId === id) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Toggle option select state and update selected items depending on select mode.\n   * @param option Option object reference.\n   */\n  public toggleOptionSelectedState(option: DropdownOption): void {\n    const id = get(option.option, this.config.selectTrackBy);\n\n    switch (this.config.selectMode) {\n      case 'multi': {\n        const selectedIndex = this.dataStateService.selectedOptions.findIndex((value: any) => {\n          return get(value, this.config.selectTrackBy) === id;\n        });\n\n        if (selectedIndex < 0) {\n          this.dataStateService.selectedOptions.push(option.option);\n        } else {\n          this.dataStateService.selectedOptions.splice(selectedIndex, 1);\n        }\n\n        this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n        break;\n      }\n      case 'single-toggle': {\n        if (get(this.dataStateService.selectedOption, this.config.selectTrackBy) === id) {\n          this.dataStateService.selectedOption = undefined;\n        } else {\n          this.dataStateService.selectedOption = option.option;\n        }\n\n        this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n        break;\n      }\n      case 'single': {\n        const selectedId = get(this.dataStateService.selectedOption, this.config.selectTrackBy);\n        this.dataStateService.selectedOption = option.option;\n\n        if (selectedId !== id) {\n          this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n        }\n        break;\n      }\n    }\n\n    if (this.config.closeMenuOnSelect) {\n      this.dataStateService.componentLoaderRef.hide();\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { DropdownConfig } from './models/dropdown-config.model';\n\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { DropdownViewComponent } from './components/dropdown-view/dropdown-view.component';\nimport { DropdownFilterComponent } from './components/dropdown-filter/dropdown-filter.component';\nimport { DropdownOptionsComponent } from './components/dropdown-options/dropdown-options.component';\n\nimport { DROPDOWN_CONFIG } from './services/dropdown-config.service';\n\nimport { UtilityModule } from '../utility/utility.module';\n\nconst COMPONENTS = [DropdownComponent, DropdownViewComponent, DropdownFilterComponent, DropdownOptionsComponent];\n\n/**\n * Module representing dropdown component.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilityModule.forRoot()],\n  declarations: [...COMPONENTS],\n  exports: [DropdownComponent],\n  entryComponents: [DropdownViewComponent]\n})\nexport class DropdownModule {\n  /**\n   * Set module root configuration overrides.\n   * @param dropdownConfig Dropdown configuration object.\n   * @return Module with custom providers.\n   */\n  static forRoot(dropdownConfig?: DropdownConfig): ModuleWithProviders {\n    return {\n      ngModule: DropdownModule,\n      providers: [\n        {\n          provide: DROPDOWN_CONFIG,\n          useValue: dropdownConfig\n        }\n      ]\n    };\n  }\n}\n\nexport { DropdownTranslations } from './models/dropdown-translations.model';\nexport { DropdownOption } from './models/dropdown-option.model';\nexport { DropdownRequestParams } from './models/dropdown-request-params.model';\nexport { DropdownFilter } from './models/dropdown-filter.model';\nexport { DropdownDataBindCallback } from './models/dropdown-data-bind-callback.model';\nexport { DropdownQueryResult } from './models/dropdown-query-result.model';\nexport { DropdownConfig } from './models/dropdown-config.model';\n\nexport { DropdownSelectMode } from './models/dropdown-select-mode.model';\n\nexport { DropdownComponent } from './components/dropdown/dropdown.component';\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { DataTableConfig } from './models/data-table-config.model';\n\nimport { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';\n\n// tslint:disable-next-line\nimport { DataTableColumnFilterHeaderComponent } from './components/data-table-column-filter-header/data-table-column-filter-header.component';\n// tslint:disable-next-line\nimport { DataTableColumnFilterTemplateComponent } from './components/data-table-column-filter-template/data-table-column-filter-template.component';\nimport { DataTableColumnTitleHeaderComponent } from './components/data-table-column-title-header/data-table-column-title-header.component';\nimport { DataTableHeaderComponent } from './components/data-table-header/data-table-header.component';\nimport { DataTableColGroupComponent } from './components/data-table-col-group/data-table-col-group.component';\nimport { DataTablePaginationComponent } from './components/data-table-pagination/data-table-pagination.component';\nimport { DataTableComponent } from './components/data-table/data-table.component';\nimport { DataTableBodyComponent } from './components/data-table-body/data-table-body.component';\nimport { DataTableColumnSelectorComponent } from './components/data-table-column-selector/data-table-column-selector.component';\nimport { DataTableNoDataBodyComponent } from './components/data-table-no-data-body/data-table-no-data-body.component';\nimport { DataTableHeadComponent } from './components/data-table-head/data-table-head.component';\nimport { DataTableLoadingSpinnerComponent } from './components/data-table-loading-spinner/data-table-loading-spinner.component';\n\nimport { DATA_TABLE_CONFIG } from './services/data-table-config.service';\n\nimport { ScrollPositionDirective } from './directives/scroll-position.directive';\nimport { ScrollElementDirective } from './directives/scroll-element.directive';\nimport { ElementWidthDirective } from './directives/element-width.directive';\n\nimport { DropdownModule } from '../dropdown/dropdown.module';\nimport { UtilityModule } from '../utility/utility.module';\n\nconst COMPONENTS = [\n  DataTableHeaderComponent,\n  DataTableColumnComponent,\n  DataTableColGroupComponent,\n  DataTableBodyComponent,\n  DataTablePaginationComponent,\n  DataTableComponent,\n  DataTableColumnSelectorComponent,\n  DataTableNoDataBodyComponent,\n  DataTableColumnFilterHeaderComponent,\n  DataTableColumnFilterTemplateComponent,\n  DataTableColumnTitleHeaderComponent,\n  DataTableHeadComponent,\n  DataTableLoadingSpinnerComponent\n];\n\nconst DIRECTIVES = [ScrollPositionDirective, ScrollElementDirective, ElementWidthDirective];\n\nconst PROVIDERS = [];\n\n/**\n * Module representing data table component.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilityModule.forRoot(), DropdownModule.forRoot()],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  providers: [...PROVIDERS],\n  exports: [DataTableColumnComponent, DataTableComponent],\n  entryComponents: [DataTableColumnSelectorComponent]\n})\nexport class DataTableModule {\n  /**\n   * Set module root configuration overrides.\n   * @param dataTableConfig Data table configuration object.\n   * @return Module with custom providers.\n   */\n  public static forRoot(dataTableConfig?: DataTableConfig): ModuleWithProviders {\n    return {\n      ngModule: DataTableModule,\n      providers: [\n        {\n          provide: DATA_TABLE_CONFIG,\n          useValue: dataTableConfig\n        }\n      ]\n    };\n  }\n}\n\n// exports\nexport { DataTableCellBindEventArgs } from './models/data-table-cell-bind-event-args.model';\nexport { DataTableQueryResult } from './models/data-table-query-result.model';\nexport { DataTableQueryField } from './models/data-table-query-field.model';\nexport { DataTableFilterOption } from './models/data-table-filter-option.model';\nexport { DataTableCellClickEventArgs } from './models/data-table-cell-click-event-args.model';\nexport { DataTableHeaderClickEventArgs } from './models/data-table-header-click-event-args.model';\nexport { DataTableDoubleClickEventArgs } from './models/data-table-double-click-event-args.model';\nexport { DataTableRowClickEventArgs } from './models/data-table-row-click-event-args.model';\nexport { DataTableScrollPoint } from './models/data-table-scroll-point.model';\nexport { DataTableRow } from './models/data-table-row.model';\nexport { DataTableRequestParams } from './models/data-table-request-params.model';\nexport { DataTableTranslations } from './models/data-table-translations.model';\nexport { DataTableDynamicRowSpanExtractorCallback } from './models/data-table-group-field-extractor-callback.model';\nexport { DataTableFilterValueExtractCallback } from './models/data-table-filter-value-extract-callback.model';\nexport { DataTableFilterFieldMapperCallback } from './models/data-table-filter-field-mapper-callback.model';\nexport { DataTableFilterExpressionCallback } from './models/data-table-filter-expression-callback.model';\nexport { DataTableCellColorRenderCallback } from './models/data-table-cell-color-render-callback.model';\nexport { DataTableSelectMode } from './models/data-table-select-mode.model';\nexport { DataTableDataBindCallback } from './models/data-table-data-bind-callback.model';\n\nexport { DataTableSortOrder } from './models/data-table-sort-order.model';\nexport { DataTableStorageMode } from './models/data-table-storage-mode.model';\nexport { DataFetchMode } from './models/data-fetch-mode.enum';\n\nexport { DataTableComponent } from './components/data-table/data-table.component';\nexport { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';\n","import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpRequestOptions } from '../models/http-request-options.model';\nimport { RequestOptions } from '../models/request-options.model';\nimport { ResourceOptions } from '../models/resource-options.model';\n\n/**\n * Request parameter mapper service.\n */\n@Injectable()\nexport class RequestParamMapperService {\n  /**\n   * Map HTTP query parameters by request options.\n   * @param requestOptions Request options object reference.\n   */\n  public mapQueryParams(requestOptions: HttpRequestOptions): HttpParams {\n    if (requestOptions && requestOptions.params) {\n      if (requestOptions.params instanceof HttpParams) {\n        return requestOptions.params;\n      } else {\n        let queryParams = new HttpParams();\n        for (const key in requestOptions.params) {\n          if (requestOptions.params.hasOwnProperty(key)) {\n            queryParams = queryParams.set(key, requestOptions.params[key]);\n          }\n        }\n\n        return queryParams;\n      }\n    } else {\n      return new HttpParams();\n    }\n  }\n\n  /**\n   * Map request options by http request data.\n   * @param options Request options object reference.\n   */\n  public mapRequestOptions(options: string|ResourceOptions): RequestOptions {\n    const requestOptions: RequestOptions = {\n      url: '',\n      options: {}\n    };\n\n    if (typeof options === 'object') {\n      requestOptions.options = options;\n      requestOptions.url = options.url;\n    } else {\n      requestOptions.url = options;\n    }\n\n    return requestOptions;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility config service which holds all the global configurations of utility which can be overridden while\n * importing the module.\n */\n@Injectable()\nexport class ResourceUtilityConfigService {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { RequestParamMapperService } from './services/request-param-mapper.service';\nimport { ResourceUtilityConfigService } from './services/resource-utility-config.service';\n\n\nconst PROVIDERS = [RequestParamMapperService];\n\n/**\n * Resource utility module.\n */\n@NgModule({\n  imports: [],\n  providers: [...PROVIDERS]\n})\nexport class ResourceUtilityModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ResourceUtilityModule,\n      providers: [ResourceUtilityConfigService]\n    };\n  }\n}\n\nexport { ResourceOptions } from './models/resource-options.model';\nexport { RequestOptions } from './models/request-options.model';\nexport { HttpRequestOptions } from './models/http-request-options.model';\n\nexport { RequestParamMapperService };\n","import { Injectable } from '@angular/core';\n\n/**\n * Data table resource config service holds all the global configurations of data table resource which can be overridden\n * while importing the module\n */\n@Injectable()\nexport class DataTableResourceConfigService {}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DataTableRequestParams } from '../../data-table/models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../../data-table/models/data-table-query-result.model';\nimport { DataTableQueryField } from '../../data-table/models/data-table-query-field.model';\nimport { DataTableDataBindCallback } from '../../data-table/models/data-table-data-bind-callback.model';\nimport { DataTableFilterValueExtractCallback } from '../../data-table/models/data-table-filter-value-extract-callback.model';\nimport { DataTableFilterOption } from '../../data-table/models/data-table-filter-option.model';\nimport { HttpRequestOptions } from '../../resource-utility/models/http-request-options.model';\nimport { ResourceOptions } from '../../resource-utility/models/resource-options.model';\n\nimport { DataTableColumnComponent } from '../../data-table/components/data-table-column/data-table-column.component';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Data table HTTP data fetch service.\n */\nexport class DataTableHttpDataFetchService<T> {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {}\n\n  /**\n   * Get data bind event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table bind event handler.\n   */\n  public onDataBind(\n    options: string|ResourceOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DataTableQueryResult<T>>,\n  ): DataTableDataBindCallback<T> {\n    return (params?: DataTableRequestParams): Observable<DataTableQueryResult<T>> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      if (params) {\n        if (params.limit !== undefined) {\n          queryParams = queryParams.set('limit', String(params.limit));\n        }\n\n        if (params.offset !== undefined) {\n          queryParams = queryParams.set('offset', String(params.offset));\n        }\n\n        params.fields.forEach((column: DataTableQueryField) => {\n          let query = '';\n\n          if (column.filterable) {\n            if (typeof column.filterValue === 'string') {\n              if (column.filterValue !== '') {\n                query += column.filterValue;\n              }\n            } else if (Array.isArray(column.filterValue) && column.filterValue.length) {\n              query += column.filterValue.join(',');\n            }\n          }\n\n          if (column.sortable && column.sortOrder !== '') {\n            query += `|${column.sortOrder}|${column.sortPriority}`;\n          }\n\n          if (query) {\n            queryParams = queryParams.set(column.field, query);\n          }\n        });\n\n        requestOptions.options.params = queryParams;\n\n        const resource = this.http.get<any>(requestOptions.url, requestOptions.options as any) as Observable<any>;\n\n        if (mapper) {\n          return mapper(resource);\n        }\n\n        return resource;\n      }\n    };\n  }\n\n  /**\n   * Get filter value extract event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table filter options event handler.\n   */\n  public onFilterValueExtract(\n    options: string|HttpRequestOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DataTableFilterOption[]>,\n  ): DataTableFilterValueExtractCallback {\n    return (column: DataTableColumnComponent): Observable<DataTableFilterOption[]> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      const filterField = column.filterField || column.field;\n      queryParams = queryParams.set('field', filterField);\n\n      const resource = this.http.get<any>(requestOptions.url, { params: queryParams, ...requestOptions }) as Observable<any>;\n\n      if (mapper) {\n        return mapper(resource);\n      }\n\n      return resource;\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataTableHttpDataFetchService } from './data-table-http-data-fetch.service';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Data table HTTP data fetch service factory.\n */\n@Injectable()\nexport class DataTableHttpResourceFactoryService {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {\n  }\n\n  /**\n   * Get new data table HTTP data fetch service instance.\n   */\n  public getResourceProvider<T>(): DataTableHttpDataFetchService<T> {\n    return new DataTableHttpDataFetchService<T>(this.http, this.requestParamMapperService);\n  }\n}\n","import { Subscription, Subject, Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\n\nimport { DataTableRequestParams } from '../../data-table/models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../../data-table/models/data-table-query-result.model';\nimport { DataTableDataBindCallback } from '../../data-table/models/data-table-data-bind-callback.model';\n\n/**\n * Data table web socket data fetch service.\n */\nexport class DataTableWebsocketDataFetchService<T> {\n  private socket: WebSocketSubject<DataTableQueryResult<T>>;\n  private subject: Subject<DataTableQueryResult<T>>;\n  private socketSubscription: Subscription;\n\n  constructor() {}\n\n  /**\n   * Initialize web socket connection.\n   * @param config Socket configuration parameters.\n   */\n  public init(config?: WebSocketSubjectConfig<DataTableQueryResult<T>>): void {\n    this.socket = webSocket<any>(config);\n    this.subject = new Subject<DataTableQueryResult<T>>();\n  }\n\n  /**\n   * Get socket stream reference.\n   */\n  public get socketStream(): WebSocketSubject<DataTableQueryResult<T>> {\n    return this.socket;\n  }\n\n  /**\n   * Web socket data bind event handler.\n   * Must call init prior to calling this function.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table bind event handler.\n   */\n  public onDataBind(mapper?: <Q>(source: Observable<Q>) => Observable<DataTableQueryResult<T>>): DataTableDataBindCallback<T> {\n    if (!this.socket) {\n      throw Error('Initialize socket data source before data bind.');\n    }\n\n    this.socketSubscription = this.socket.subscribe(this.subject);\n\n    return (params?: DataTableRequestParams): Observable<DataTableQueryResult<T>> => {\n      if (params) {\n        this.socket.next({\n          type: 'data-fetch',\n          offset: params.offset,\n          limit: params.limit,\n          fields: params.fields\n        } as any);\n\n        if (mapper) {\n          return mapper(this.subject);\n        }\n\n        return this.subject;\n      }\n    };\n  }\n\n  /**\n   * Dispose web socket connection.\n   */\n  public dispose(): void {\n    if (this.socket) {\n      this.socket.complete();\n    }\n\n    if (this.socketSubscription) {\n      this.socketSubscription.unsubscribe();\n    }\n\n    if (this.subject) {\n      this.subject.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataTableWebsocketDataFetchService } from './data-table-websocket-data-fetch.service';\n\n/**\n * Data table web socket data fetch service factory.\n */\n@Injectable()\nexport class DataTableWebsocketResourceFactoryService {\n\n  /**\n   * Get new data table websocket fetch service instance.\n   */\n  public getResourceProvider<T>(): DataTableWebsocketDataFetchService<T> {\n    return new DataTableWebsocketDataFetchService<T>();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ResourceUtilityModule } from '../resource-utility/resource-utility.module';\n\nimport { DataTableHttpDataFetchService } from './services/data-table-http-data-fetch.service';\nimport { DataTableWebsocketDataFetchService } from './services/data-table-websocket-data-fetch.service';\nimport { DataTableResourceConfigService } from './services/data-table-resource-config.service';\nimport { DataTableHttpResourceFactoryService } from './services/data-table-http-resource-factory.service';\nimport { DataTableWebsocketResourceFactoryService } from './services/data-table-websocket-resource-factory.service';\n\nconst PROVIDERS = [DataTableHttpResourceFactoryService, DataTableWebsocketResourceFactoryService];\n\n/**\n * Data table data source module.\n */\n@NgModule({\n  imports: [ResourceUtilityModule],\n  providers: [...PROVIDERS]\n})\nexport class DataTableResourceModule {\n  /**\n   * Set module root configuration overrides\n   * @return Module with custom providers\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DataTableResourceModule,\n      providers: [DataTableResourceConfigService]\n    };\n  }\n}\n\nexport { DataTableHttpDataFetchService } from './services/data-table-http-data-fetch.service';\nexport { DataTableHttpResourceFactoryService };\n\nexport { DataTableWebsocketDataFetchService } from './services/data-table-websocket-data-fetch.service';\nexport { DataTableWebsocketResourceFactoryService };\n","import { Injectable } from '@angular/core';\n\n/**\n * Dropdown resource config service which holds all the global configurations of dropdown resource which can be overridden\n * while importing the module.\n */\n@Injectable()\nexport class DropdownResourceConfigService {}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DropdownDataBindCallback } from '../../dropdown/models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../dropdown/models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../../dropdown/models/dropdown-request-params.model';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\nimport { ResourceOptions } from '../../resource-utility/models/resource-options.model';\n\n/**\n * Dropdown HTTP data fetch service.\n */\nexport class DropdownHttpDataFetchService<T> {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {}\n\n  /**\n   * Get data bind event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Dropdown bind event handler.\n   */\n  public onDataBind(\n    options: string|ResourceOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DropdownQueryResult<T>>,\n  ): DropdownDataBindCallback<T> {\n    return (params?: DropdownRequestParams): Observable<DropdownQueryResult<T>> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      if (params) {\n        if (params.limit !== undefined) {\n          queryParams = queryParams.set('limit', String(params.limit));\n        }\n\n        if (params.offset !== undefined) {\n          queryParams = queryParams.set('offset', String(params.offset));\n        }\n\n        if (params.filter && params.filter.value) {\n          queryParams = queryParams.set('field', params.filter.key);\n          queryParams = queryParams.set('filter', params.filter.value);\n        }\n\n        requestOptions.options.params = queryParams;\n\n        const resource = this.http.get<any>(requestOptions.url, requestOptions.options as any) as Observable<any>;\n\n        if (mapper) {\n          return mapper(resource);\n        }\n\n        return resource;\n      }\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DropdownHttpDataFetchService } from './dropdown-http-data-fetch.service';\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Dropdown HTTP data fetch service factory.\n */\n@Injectable()\nexport class DropdownHttpResourceFactoryService {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {\n  }\n\n  /**\n   * Get new dropdown HTTP data fetch service instance.\n   */\n  public getResourceProvider<T>(): DropdownHttpDataFetchService<T> {\n    return new DropdownHttpDataFetchService<T>(this.http, this.requestParamMapperService);\n  }\n}\n","import { Subscription, Subject, Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\n\nimport { DropdownDataBindCallback } from '../../dropdown/models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../dropdown/models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../../dropdown/models/dropdown-request-params.model';\n\n/**\n * Dropdown websocket data fetch service.\n */\nexport class DropdownWebsocketDataFetchService<T> {\n  private socket: WebSocketSubject<DropdownQueryResult<T>>;\n  private subject: Subject<DropdownQueryResult<T>>;\n  private socketSubscription: Subscription;\n\n  constructor() {}\n\n  /**\n   * Initialize websocket connection.\n   * @param config Websocket configuration object reference.\n   */\n  public init(config?: WebSocketSubjectConfig<DropdownQueryResult<T>>): void {\n    this.socket = webSocket<any>(config);\n    this.subject = new Subject<DropdownQueryResult<T>>();\n  }\n\n  /**\n   * Get socket stream reference.\n   */\n  public get socketStream(): WebSocketSubject<DropdownQueryResult<T>> {\n    return this.socket;\n  }\n\n  /**\n   * Websocket data bind event handler.\n   * Must call init prior to calling this function.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Dropdown bind event handler.\n   */\n  public onDataBind(mapper?: <Q>(response: Observable<Q>) => Observable<DropdownQueryResult<T>>): DropdownDataBindCallback<T> {\n    if (!this.socket) {\n      throw Error('Initialize socket data source before data bind.');\n    }\n\n    this.socketSubscription = this.socket.subscribe(this.subject);\n\n    return (params?: DropdownRequestParams): Observable<DropdownQueryResult<T>> => {\n      if (params) {\n        this.socket.next({\n          type: 'data-fetch',\n          filter: params.filter,\n          offset: params.offset,\n          limit: params.limit\n        } as any);\n\n        if (mapper) {\n          return mapper(this.subject);\n        }\n\n        return this.subject;\n      }\n    };\n  }\n\n  /**\n   * Dispose websocket connection.\n   */\n  public dispose(): void {\n    if (this.socket) {\n      this.socket.complete();\n    }\n\n    if (this.socketSubscription) {\n      this.socketSubscription.unsubscribe();\n    }\n\n    if (this.subject) {\n      this.subject.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DropdownWebsocketDataFetchService } from './dropdown-websocket-data-fetch.service';\n\n/**\n * Dropdown web socket data fetch service factory.\n */\n@Injectable()\nexport class DropdownWebsocketResourceFactoryService {\n\n  /**\n   * Get new dropdown websocket fetch service instance.\n   */\n  public getResourceProvider<T>(): DropdownWebsocketDataFetchService<T> {\n    return new DropdownWebsocketDataFetchService<T>();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ResourceUtilityModule } from '../resource-utility/resource-utility.module';\n\nimport { DropdownHttpDataFetchService } from './services/dropdown-http-data-fetch.service';\nimport { DropdownWebsocketDataFetchService } from './services/dropdown-websocket-data-fetch.service';\nimport { DropdownResourceConfigService } from './services/dropdown-resource-config.service';\nimport { DropdownHttpResourceFactoryService } from './services/dropdown-http-resource-factory.service';\nimport { DropdownWebsocketResourceFactoryService } from './services/dropdown-websocket-resource-factory.service';\n\nconst PROVIDERS = [DropdownHttpResourceFactoryService, DropdownWebsocketResourceFactoryService];\n\n/**\n * Dropdown data source module.\n */\n@NgModule({\n  imports: [ResourceUtilityModule],\n  providers: [...PROVIDERS]\n})\nexport class DropdownResourceModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DropdownResourceModule,\n      providers: [DropdownResourceConfigService]\n    };\n  }\n}\n\nexport { DropdownHttpDataFetchService } from './services/dropdown-http-data-fetch.service';\nexport { DropdownHttpResourceFactoryService };\n\nexport { DropdownWebsocketDataFetchService } from './services/dropdown-websocket-data-fetch.service';\nexport { DropdownWebsocketResourceFactoryService };\n"]}