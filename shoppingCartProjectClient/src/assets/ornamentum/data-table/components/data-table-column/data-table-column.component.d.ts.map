{"version":3,"file":"data-table-column.component.d.ts","sources":["data-table-column.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { DataTableCellColorRenderCallback } from '../../models/data-table-cell-color-render-callback.model';\nimport { DataTableRow } from '../../models/data-table-row.model';\nimport { DataTableFilterFieldMapperCallback } from '../../models/data-table-filter-field-mapper-callback.model';\nimport { DataTableFilterExpressionCallback } from '../../models/data-table-filter-expression-callback.model';\nimport { DropdownSelectMode } from '../../../dropdown/dropdown.module';\nimport { DataTableSortOrder } from '../../models/data-table-sort-order.model';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { ViewPosition } from '../../../utility/models/view-position.model';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n/**\n * Data table column component. Data table columns associated data is captured via this component.\n */\nexport declare class DataTableColumnComponent implements OnInit, OnDestroy {\n    private dataTableConfigService;\n    private eventStateService;\n    private dataStateService;\n    private filterValueExtractorSubscription;\n    private currentSortOrder;\n    private baseSortOrder;\n    actualWidth: number;\n    cellTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    filterTemplate: TemplateRef<any>;\n    dropdownFilterLoadingSpinnerTemplate: TemplateRef<any>;\n    dropdownFilterOptionTemplate: TemplateRef<any>;\n    dropdownFilterOptionGroupHeaderTemplate: TemplateRef<any>;\n    /**\n     * Filter expression event handler callback. Used to apply custom data filter expression logic.\n     */\n    filterExpression: DataTableFilterExpressionCallback;\n    /**\n     * Custom filter field map event handler callback. Used to extract filter field when showDropdownFilter option is true.\n     */\n    filterFieldMapper: DataTableFilterFieldMapperCallback;\n    /**\n     * Cell color render event handler callback.\n     */\n    onCellColorRender: DataTableCellColorRenderCallback<any>;\n    /**\n     * Column display title.\n     */\n    title: string;\n    /**\n     * Columns sortable if true. Show sort indicator on column title.\n     */\n    sortable: boolean;\n    /**\n     * Multi column sort priority. Lowest number will get the height precedence. Usage of same precedence number in\n     * multiple columns may lead to unexpected behaviors. This priority number will be displayed in the column header\n     * when multi column sorting is enabled hence, consider indexing accordingly.\n     */\n    sortPriority: number;\n    /**\n     * Set initial column sort order.\n     */\n    /**\n    * Get initial column sort order.\n    */\n    sortOrder: DataTableSortOrder;\n    /**\n     * Column filterable if true. Show filter options on filter header row when enabled.\n     */\n    filterable: boolean;\n    /**\n     * Column resizeable if true. Show column resize indicator on column right corner.\n     */\n    resizable: boolean;\n    /**\n     * Data item mapping field name.\n     */\n    field: string;\n    /**\n     * Filter field identifier. Fallback to field if not provided.\n     */\n    filterField: string;\n    /**\n     * Sort field identifier. Fallback to field if not provided.\n     */\n    sortField: string;\n    /**\n     * Column title CSS class names. Use space delimiter to separate class names.\n     */\n    cssClass: string;\n    /**\n     * Static column width in pixels or percentage.\n     */\n    width: number | string;\n    /**\n     * Render column if true. Else include in column selector but not rendered.\n     */\n    visible: boolean;\n    /**\n     * Show filed in column selector popup if true.\n     */\n    showInColumnSelector: boolean;\n    /**\n     * Filter placeholder value. Placeholder text to show on filter text box. Applicable only for none dropdown filter mode.\n     */\n    filterPlaceholder: string;\n    /**\n     * Applied filter value on initialize.\n     */\n    filter: any;\n    /**\n     * Show filter clear button if true. Applicable only for none dropdown filter mode.\n     */\n    showFilterClearButton: any;\n    /**\n     * Resize minimum limit. Column cannot be resized to fit less than the number of pixels specified here.\n     */\n    resizeMinLimit: number;\n    /**\n     * Show dropdown filter if true. Filter data using dropdown filter.\n     */\n    showDropdownFilter: boolean;\n    /**\n     * Dropdown filter menu position. Placement of filter popup menu.\n     */\n    dropdownFilterMenuPosition: ViewPosition;\n    /**\n     * Dropdown select mode. Filter option select mode.\n     */\n    dropdownFilterSelectMode: DropdownSelectMode;\n    /**\n     * Dropdown filter searchable if true. Display search box within filter option menu.\n     */\n    dropdownFilterSearchable: boolean;\n    /**\n     * Dropdown filter search debounce time in milliseconds. Applicable only when dropdownFilterSearchDebounce is true.\n     */\n    dropdownFilterSearchDebounceTime: number;\n    /**\n     * Enable dropdown filter data search debounce with provided dropdownFilterSearchDebounceTime if true.\n     */\n    dropdownFilterSearchDebounce: boolean;\n    /**\n     * Dropdown filter show option select checkbox.\n     */\n    dropDownFilterShowOptionSelectCheckbox: boolean;\n    /**\n     * Dropdown filter selected items display limit.\n     */\n    dropdownFilterWrapDisplaySelectLimit: number;\n    /**\n     * Dropdown filter group by field name in item schema.\n     */\n    dropdownFilterGroupByField: string;\n    /**\n     * Dropdown filter show selected option remove button if true.\n     */\n    dropdownFilterShowSelectedOptionRemoveButton: boolean;\n    /**\n     * Dropdown filter show all select options clear button if true.\n     */\n    dropdownFilterShowClearSelectionButton: boolean;\n    /**\n     * Dropdown filter menu width in pixels.\n     */\n    dropdownFilterMenuWidth: number;\n    /**\n     * Dropdown filter menu height in pixels.\n     */\n    dropdownFilterMenuHeight: number;\n    /**\n     * Dropdown filter multi select option max width.\n     */\n    dropdownFilterMultiSelectOptionMaxWidth: number;\n    /**\n     * Dropdown filter close menu on select if true.\n     */\n    dropdownFilterCloseMenuOnSelect: boolean;\n    /**\n     * Dynamically calculate Dropdown filter menu dimensions relative to column width; dropdownFilterMenuWidth and\n     * dropdownFilterMenuHeight configuration are ignored when true.\n     */\n    dropdownFilterDynamicDimensionCalculation: boolean;\n    /**\n     * Dynamic dropdown view width ratio. Used for dynamic dimension calculation.\n     */\n    dropdownFilterDynamicWidthRatio: number;\n    /**\n     * Dynamic dropdown view height ratio. Used for dynamic dimension calculation.\n     */\n    dropdownFilterDynamicHeightRatio: number;\n    constructor(dataTableConfigService: DataTableConfigService, eventStateService: DataTableEventStateService, dataStateService: DataTableDataStateService);\n    /**\n     * Reset data sort order.\n     */\n    resetSortOrder(): void;\n    /**\n     * Get dynamic cell color.\n     * @param row Data row object.\n     * @return Cell color string.\n     */\n    getCellColor(row: DataTableRow<any>): string;\n    /**\n     * Get new sort order upon sort click.\n     * @return New sort order enum value.\n     */\n    getNewSortOrder(): DataTableSortOrder;\n    /**\n     * Get current sort state icon css class enabled state.\n     * @return Sort order icon css class collection object.\n     */\n    getSortIconClass(): any;\n    /**\n     * Component destroy lifecycle event handler.\n     */\n    ngOnDestroy(): void;\n    /**\n     * Component initialize lifecycle event handler.\n     */\n    ngOnInit(): void;\n}\n"]}