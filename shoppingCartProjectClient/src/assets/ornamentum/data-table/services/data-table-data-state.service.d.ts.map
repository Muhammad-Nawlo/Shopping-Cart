{"version":3,"file":"data-table-data-state.service.d.ts","sources":["data-table-data-state.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableDynamicRowSpanExtractorCallback } from '../models/data-table-group-field-extractor-callback.model';\nimport { DataTableFilterValueExtractCallback } from '../models/data-table-filter-value-extract-callback.model';\nimport { DataTableDataBindCallback } from '../models/data-table-data-bind-callback.model';\n/**\n * Data table state manager service; Manage current data table state snapshot.\n */\nexport declare class DataTableDataStateService {\n    id: string;\n    allRowSelected: boolean;\n    selectedRow: any;\n    selectedRows: any[];\n    dataRows: DataTableRow<any>[];\n    itemCount: number;\n    tableWidth: number;\n    dataLoading: boolean;\n    substituteRows: any[];\n    heardReload: boolean;\n    currentSortPriority: number;\n    relativeParentElement: HTMLElement;\n    onFilterValueExtract: DataTableFilterValueExtractCallback;\n    onDataBind: DataTableDataBindCallback<any>;\n    onDynamicRowSpanExtract: DataTableDynamicRowSpanExtractorCallback<any>;\n    /**\n     * Get show no data overlay status.\n     * @return True if no data overlay should be shown.\n     */\n    readonly showNoDataOverlay: boolean;\n    /**\n     * Get data table row unique id.\n     * @param append Target identifier.\n     * @param index Target index.\n     */\n    getUniqueId(append: string, index: number): string;\n}\n"]}