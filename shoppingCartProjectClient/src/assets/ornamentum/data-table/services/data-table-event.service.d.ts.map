{"version":3,"file":"data-table-event.service.d.ts","sources":["data-table-event.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { DataTableHeaderClickEventArgs } from '../models/data-table-header-click-event-args.model';\nimport { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableRowClickEventArgs } from '../models/data-table-row-click-event-args.model';\nimport { DataTableDoubleClickEventArgs } from '../models/data-table-double-click-event-args.model';\nimport { DataTableCellBindEventArgs } from '../models/data-table-cell-bind-event-args.model';\nimport { DataTableCellClickEventArgs } from '../models/data-table-cell-click-event-args.model';\nimport { DataFetchMode } from '../models/data-fetch-mode.enum';\nimport { DataTableComponent } from '../components/data-table/data-table.component';\nimport { DataTableColumnComponent } from '../components/data-table-column/data-table-column.component';\n/**\n * Data table event state service; Manage all internal data tale event streams.\n */\nexport declare class DataTableEventStateService {\n    allRowSelectChangeStream: EventEmitter<boolean>;\n    dataFetchStream: EventEmitter<DataFetchMode>;\n    headerClickStream: EventEmitter<DataTableHeaderClickEventArgs>;\n    rowBindStream: EventEmitter<DataTableRow<any>>;\n    rowClickStream: EventEmitter<DataTableRowClickEventArgs<any>>;\n    rowDoubleClickStream: EventEmitter<DataTableDoubleClickEventArgs<any>>;\n    rowSelectChangeStream: EventEmitter<any>;\n    cellBindStream: EventEmitter<DataTableCellBindEventArgs<any>>;\n    cellClickStream: EventEmitter<DataTableCellClickEventArgs<any>>;\n    initStream: EventEmitter<DataTableComponent>;\n    dataBoundStream: EventEmitter<void>;\n    columnBind: EventEmitter<DataTableColumnComponent>;\n    fetchFilterOptionsStream: ReplaySubject<{}>;\n    staticDataSourceStream: ReplaySubject<any[]>;\n}\n"]}