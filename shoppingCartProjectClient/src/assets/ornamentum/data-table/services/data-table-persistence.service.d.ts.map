{"version":3,"file":"data-table-persistence.service.d.ts","sources":["data-table-persistence.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DataTableRequestParams } from '../models/data-table-request-params.model';\nimport { DataTableStorageMode } from '../models/data-table-storage-mode.model';\nimport { GlobalRefService } from '../../utility/utility.module';\nimport { DataTableConfigService } from './data-table-config.service';\n/**\n * Data table persistence service; Manage data table state when persist state options is enabled.\n */\nexport declare class DataTablePersistenceService {\n    private globalRefService;\n    private config;\n    private storage;\n    constructor(globalRefService: GlobalRefService, config: DataTableConfigService);\n    /**\n     * Set table state storage mode.\n     * @param value Storage mode.\n     */\n    storageMode: DataTableStorageMode;\n    /**\n     * Set table state by identifier.\n     * @param id Table identifier.\n     * @param version Data version.\n     * @param value Data table request parameters object.\n     */\n    setState(id: string, value: DataTableRequestParams, version?: string): void;\n    /**\n     * Get table state by identifier.\n     * @param id Table identifier.\n     * @param version Data version.\n     * @return Data table request params object.\n     */\n    getState(id: string, version?: string): DataTableRequestParams;\n}\n"]}